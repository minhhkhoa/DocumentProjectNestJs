var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.078,1,3.085]],["body/controllers/AppController.html",[0,1.952,1,5.585,2,1.828,3,0.168,4,0.15,5,0.113,6,5.722,7,0.264,8,0.011,9,0.919,10,0.168,11,0.305,12,2.565,13,0.01,14,0.01]],["title/modules/AppModule.html",[15,0.988,16,3.085]],["body/modules/AppModule.html",[1,4.357,2,1.415,3,0.09,4,0.08,5,0.087,7,0.344,8,0.012,9,0.492,10,0.09,11,0.163,13,0.007,14,0.007,15,1.529,16,6.367,17,1.42,18,1.47,19,1.579,20,1.579,21,1.47,22,2.68,23,1.579,24,3.065,25,3.065,26,3.065,27,4.928,28,4.928,29,4.928,30,4.928,31,4.928,32,4.928,33,4.928,34,4.928,35,4.928,36,4.928,37,4.928,38,4.928,39,4.638,40,4.928,41,2.282,42,1.579,43,1.523,44,3.496,45,2.782,46,3.496,47,3.496,48,5.2,49,3.971,50,2.136,51,1.775,52,0.979,53,3.496,54,3.496,55,3.496,56,2.463,57,1.801,58,1.705,59,1.457,60,6.498,61,3.496,62,3.496,63,3.496,64,3.496,65,3.496,66,3.496,67,3.496,68,3.496,69,3.496,70,3.496,71,2.78,72,3.496,73,2.78,74,3.496,75,3.496,76,2.78,77,1.705,78,3.496,79,3.496,80,2.201,81,3.496,82,3.496,83,3.496,84,3.496,85,3.065,86,3.496,87,2.568,88,1.287,89,3.496,90,3.496,91,3.496,92,3.065,93,1.64,94,3.711,95,1.928,96,2.33,97,3.496,98,0.897,99,2.568,100,3.065,101,3.496,102,3.496,103,1.102,104,3.065,105,3.496,106,0.951,107,2.031,108,3.496,109,1.775,110,2.398,111,2.398]],["title/injectables/AppService.html",[40,2.881,112,0.806]],["body/injectables/AppService.html",[3,0.161,4,0.143,5,0.108,7,0.253,8,0.011,9,0.878,10,0.161,11,0.292,13,0.01,14,0.01,40,5.08,98,1.602,112,1.421,113,2.225,114,5.47,115,0.768,116,1.901,117,8.167,118,0.907,119,6.241,120,1.602,121,1.148,122,6.241,123,6.241,124,5.47]],["title/controllers/AuthController.html",[0,1.078,125,3.085]],["body/controllers/AuthController.html",[0,0.765,2,0.835,3,0.077,4,0.068,5,0.078,7,0.306,8,0.011,9,0.42,10,0.077,11,0.139,12,1.171,13,0.006,14,0.006,73,2.371,88,2.496,93,2.107,95,1.756,96,1.171,98,1.656,103,1.704,106,1.636,115,0.367,116,1.153,118,0.938,120,1.656,125,3.299,126,2.613,127,1.398,128,2.613,129,4.492,130,4.492,131,5.404,132,5.404,133,4.492,134,2.981,135,2.59,136,1.755,137,4.492,138,2.981,139,1.755,140,0.713,141,0.959,142,1.313,143,2.242,144,2.19,145,2.981,146,4.573,147,2.981,148,2.981,149,4.298,150,2.981,151,4.784,152,2.981,153,2.981,154,2.981,155,2.981,156,2.981,157,5.404,158,2.981,159,2.981,160,3.299,161,2.981,162,3.939,163,2.981,164,1.334,165,2.981,166,2.981,167,2.379,168,1.514,169,5.273,170,2.981,171,2.19,172,2.371,173,2.981,174,3.302,175,2.371,176,3.757,177,1.454,178,2.379,179,1.347,180,2.745,181,1.732,182,1.925,183,1.651,184,1.299,185,2.379,186,2.19,187,2.981,188,4.492,189,1.579,190,0.969,191,2.981,192,2.981,193,2.107,194,2.371,195,2.981,196,3.937,197,2.613,198,3.937,199,1.925,200,2.981,201,2.981,202,5.945,203,4.492,204,2.19,205,2.981,206,2.613,207,2.045,208,2.981,209,2.981,210,2.371,211,2.371,212,1.097,213,2.981,214,2.981,215,2.981,216,2.981,217,2.371,218,2.981,219,2.981,220,2.981,221,2.981,222,2.981,223,5.404,224,3.299,225,2.045,226,1.46,227,2.029,228,2.933,229,2.852,230,3.676,231,2.613,232,2.371,233,2.19,234,2.045,235,2.19,236,2.045,237,3.139,238,2.488,239,2.635,240,2.371,241,1.398,242,2.609,243,2.045,244,2.613,245,1.822,246,2.981,247,2.981,248,2.981,249,2.981,250,2.981,251,2.981,252,1.889,253,3.572,254,2.045,255,1.579,256,1.925,257,2.371,258,2.371,259,2.981,260,3.572,261,2.371,262,0.886,263,2.371,264,1.347,265,2.371,266,2.981,267,2.981,268,1.398,269,2.981,270,1.153,271,2.029,272,2.981,273,2.981,274,2.981,275,2.613,276,1.559,277,3.969,278,3.937,279,3.937,280,2.981,281,3.937,282,5.404,283,2.19,284,2.981,285,1.822,286,2.045,287,2.613,288,2.19,289,2.981,290,1.925,291,1.579,292,3.937,293,2.19,294,1.579,295,2.613,296,2.19,297,1.211,298,2.19,299,2.981,300,2.19,301,2.981,302,2.981,303,2.981,304,2.981,305,2.981]],["title/modules/AuthModule.html",[15,0.988,27,2.881]],["body/modules/AuthModule.html",[2,1.592,3,0.106,4,0.095,5,0.072,7,0.339,8,0.011,9,0.582,10,0.106,11,0.193,13,0.007,14,0.007,15,1.529,17,1.679,18,1.737,19,1.866,20,1.866,21,1.737,22,2.935,23,2.935,27,5.781,39,4.896,41,2.568,42,1.866,43,1.8,45,3.047,48,4.982,49,4.276,50,2.525,51,2.098,52,1.157,87,3.035,88,2.092,99,3.035,100,3.622,125,4.772,140,0.628,143,1.192,174,5.056,175,3.286,185,4.017,186,3.035,198,3.622,207,2.834,210,3.286,211,3.286,212,1.521,229,2.39,241,1.938,245,2.525,286,2.834,306,3.622,307,3.622,308,3.622,309,4.132,310,5.202,311,5.202,312,4.132,313,4.132,314,5.684,315,2.668,316,4.132,317,4.132,318,3.286,319,4.132,320,5.835,321,4.132,322,3.67,323,2.834,324,1.571,325,3.67,326,2.834,327,2.525,328,3.286,329,4.132,330,4.982,331,3.622,332,4.132,333,4.132,334,4.132,335,3.622,336,4.132,337,3.622,338,4.132,339,4.132,340,5.695,341,4.132,342,3.035,343,4.132,344,3.035,345,3.622,346,2.189,347,2.189,348,2.309,349,3.035]],["title/injectables/AuthService.html",[112,0.806,174,2.566]],["body/injectables/AuthService.html",[3,0.05,4,0.045,5,0.034,7,0.292,8,0.012,9,0.274,10,0.05,11,0.091,12,1.26,13,0.004,14,0.004,49,3.45,50,1.19,52,0.545,56,0.95,57,0.694,58,0.95,59,0.925,85,1.707,88,2.511,92,1.707,93,1.505,95,1.043,98,1.532,103,0.614,106,1.811,107,2.756,111,1.336,112,0.615,113,0.694,115,0.24,116,0.824,118,0.868,120,1.05,121,1.08,135,1.506,139,1.291,140,0.77,141,0.646,142,0.965,143,2.109,144,2.313,146,3.86,149,4.173,162,1.863,164,1.773,174,1.96,183,1.079,184,0.848,185,2.513,186,1.43,193,2.648,194,3.254,197,1.707,199,1.257,202,1.707,206,1.707,207,2.201,212,0.717,217,1.549,225,1.336,227,0.88,228,0.95,229,0.819,230,1.96,235,1.43,236,2.807,237,1.131,239,0.95,241,0.913,245,1.96,253,1.549,254,1.336,255,2.513,258,1.549,260,2.551,261,1.549,262,1.559,265,1.549,268,1.505,270,2.047,271,3.007,276,1.799,277,4.748,278,2.812,279,3.586,283,3.005,285,1.19,288,2.357,290,1.257,291,1.032,292,4.949,295,1.707,296,1.43,297,1.662,300,4.748,318,1.549,320,4.49,323,1.336,324,2.371,326,1.336,328,1.549,330,2.812,331,1.707,337,1.707,340,2.812,344,2.357,345,2.812,350,1.707,351,0.982,352,4.092,353,4.092,354,4.092,355,3.208,356,3.208,357,1.707,358,3.307,359,5.97,360,3.254,361,3.162,362,3.254,363,1.947,364,3.208,365,1.947,366,3.208,367,1.947,368,3.208,369,4.599,370,1.947,371,1.92,372,2.551,373,2.807,374,2.376,375,1.947,376,1.947,377,1.947,378,1.947,379,1.549,380,1.257,381,1.549,382,1.564,383,1.079,384,1.032,385,1.257,386,2.357,387,1.707,388,1.549,389,1.947,390,1.43,391,1.707,392,1.947,393,1.707,394,1.549,395,1.947,396,1.19,397,1.549,398,3.208,399,3.208,400,1.947,401,1.707,402,1.947,403,3.208,404,3.208,405,0.88,406,1.947,407,1.947,408,1.947,409,1.947,410,4.173,411,3.208,412,2.23,413,3.208,414,3.208,415,1.947,416,2.812,417,1.707,418,1.947,419,1.257,420,0.95,421,1.549,422,1.707,423,3.208,424,1.947,425,1.947,426,1.947,427,1.692,428,4.159,429,3.208,430,3.208,431,2.551,432,1.947,433,1.804,434,1.947,435,1.777,436,3.586,437,3.208,438,1.947,439,1.947,440,3.208,441,1.947,442,1.947,443,1.947,444,1.947,445,1.947,446,1.131,447,3.208,448,1.947,449,1.947,450,1.549,451,2.077,452,1.549,453,2.628,454,1.131,455,1.43,456,1.947,457,3.208,458,1.947,459,3.586,460,3.162,461,2.071,462,2.071,463,1.707,464,1.549,465,1.564,466,1.549,467,1.549,468,1.131,469,1.131,470,1.947,471,3.208,472,2.812,473,1.947,474,3.208,475,1.707,476,1.863,477,0.848,478,1.947,479,1.257,480,2.357,481,2.812,482,1.032,483,1.7,484,3.208,485,1.947,486,1.947,487,3.208,488,3.208,489,3.208,490,1.863,491,1.947,492,2.551,493,3.208,494,2.551,495,1.549,496,2.812,497,1.43,498,1.549,499,1.96,500,1.707,501,1.947,502,1.947,503,0.982,504,3.255,505,1.947,506,1.947,507,1.947,508,0.791,509,1.947,510,1.947,511,1.947,512,1.707,513,1.707,514,3.208,515,1.707,516,1.947,517,1.947,518,1.947,519,1.96,520,1.947,521,1.549,522,1.079,523,1.947,524,3.208,525,1.947,526,1.947,527,1.947,528,1.947,529,1.549,530,1.707,531,1.947,532,1.947,533,1.947,534,1.947,535,1.336,536,0.989,537,1.079,538,1.947,539,1.947,540,2.266,541,1.947,542,1.777,543,1.629,544,1.947,545,1.947,546,1.947,547,1.079,548,1.707,549,1.947,550,1.947,551,1.131,552,1.131]],["title/classes/BadRequestCustom.html",[11,0.196,382,2.048]],["body/classes/BadRequestCustom.html",[3,0.151,4,0.134,5,0.101,7,0.237,8,0.011,9,0.825,10,0.151,11,0.274,12,2.302,13,0.009,14,0.009,103,1.848,118,0.852,121,1.191,139,1.594,140,0.648,141,0.798,142,1.193,382,3.477,553,1.379,554,5.137,555,3.221,556,6.112,557,7.131,558,6.709,559,5.861,560,2.801,561,4.661,562,4.305,563,4.305,564,5.861,565,5.861,566,4.661,567,5.861,568,5.861]],["title/classes/Cloudinary.html",[11,0.196,569,2.566]],["body/classes/Cloudinary.html",[3,0.172,4,0.153,5,0.116,8,0.01,10,0.172,11,0.313,13,0.01,14,0.01,553,1.575,569,4.713,570,5.865]],["title/controllers/CloudinaryController.html",[0,1.078,571,3.085]],["body/controllers/CloudinaryController.html",[0,1.425,2,1.555,3,0.143,4,0.127,5,0.13,7,0.318,8,0.011,9,0.781,10,0.143,11,0.259,13,0.009,14,0.009,88,2.761,98,1.425,115,0.683,116,1.77,118,0.807,120,1.425,127,2.603,136,1.51,139,1.51,140,0.613,141,0.756,142,1.129,144,2.706,168,2.818,183,3.074,270,1.425,271,2.507,569,3.392,571,5.065,572,4.865,573,6.896,574,5.55,575,5.966,576,5.55,577,5.55,578,4.865,579,4.865,580,4.844,581,4.865,582,4.865,583,3.808,584,5.484,585,5.55,586,5.55,587,5.55,588,2.507,589,2.255,590,4.865,591,4.865,592,5.55,593,3.224,594,5.55,595,5.55]],["title/modules/CloudinaryModule.html",[15,0.988,28,2.881]],["body/modules/CloudinaryModule.html",[2,1.959,3,0.146,4,0.13,5,0.098,7,0.32,8,0.011,9,0.8,10,0.146,11,0.266,13,0.009,14,0.009,15,1.784,17,2.308,18,2.389,19,2.566,20,2.566,21,2.389,22,3.425,23,3.425,28,5.75,41,3.16,42,2.566,43,2.475,571,5.568,580,5.596,581,4.98,596,4.98,597,4.98,598,4.98,599,5.681,600,6.029,601,4.98,602,5.681]],["title/injectables/CloudinaryService.html",[112,0.806,580,2.712]],["body/injectables/CloudinaryService.html",[3,0.142,4,0.126,5,0.119,7,0.317,8,0.011,9,0.774,10,0.142,11,0.257,13,0.009,14,0.009,98,1.76,112,1.315,113,1.961,115,0.677,116,1.76,118,0.8,120,1.412,139,1.496,140,0.608,141,0.749,142,1.119,146,3.046,164,1.634,270,1.412,372,5.453,540,4.139,543,3.482,569,4.19,575,5.942,580,4.427,601,4.821,603,4.821,604,6.01,605,6.01,606,5.5,607,5.5,608,5.453,609,6.01,610,5.5,611,5.5,612,5.5,613,5.5,614,5.5,615,5.5,616,5.5,617,5.5,618,5.5,619,5.5]],["title/controllers/CompaniesController.html",[0,1.078,620,3.085]],["body/controllers/CompaniesController.html",[0,0.908,2,0.991,3,0.091,4,0.081,5,0.061,7,0.308,8,0.011,9,0.498,10,0.091,11,0.165,13,0.007,14,0.007,57,1.261,80,2.846,93,1.659,95,1.94,98,1.777,104,5.234,106,1.386,107,2.959,109,1.796,115,0.435,116,1.308,118,1.007,120,1.777,121,1.259,127,1.659,135,2.895,136,1.884,139,1.884,140,0.765,141,0.982,142,1.409,143,2.321,164,1.941,167,3.163,168,2.587,176,2.822,177,1.725,178,3.461,179,1.598,184,1.541,189,1.874,190,1.149,229,1.487,230,2.161,239,1.725,241,2.8,252,2.142,262,1.051,276,1.469,296,2.598,298,2.598,327,2.161,397,2.813,427,1.816,433,2.483,480,2.598,481,4.466,503,2.207,508,2.93,529,4.052,588,1.598,589,1.437,620,3.742,621,3.101,622,5.195,623,1.827,624,2.511,625,2.142,626,3.537,627,4.656,628,2.161,629,3.537,630,2.161,631,2.343,632,3.537,633,5.095,634,3.113,635,3.537,636,3.113,637,1.598,638,3.537,639,3.537,640,1.487,641,3.113,642,3.537,643,1.725,644,5.218,645,3.113,646,3.537,647,1.959,648,2.054,649,3.855,650,3.101,651,1.541,652,4.052,653,1.487,654,4.386,655,3.537,656,3.537,657,3.537,658,2.161,659,3.537,660,3.537,661,3.537,662,6.924,663,3.537,664,6.924,665,5.095,666,3.742,667,3.101,668,3.101,669,2.161,670,2.161,671,3.537,672,2.161,673,2.161,674,3.537,675,2.284,676,3.537,677,2.054,678,3.537]],["title/modules/CompaniesModule.html",[15,0.988,29,2.881]],["body/modules/CompaniesModule.html",[2,1.867,3,0.135,4,0.12,5,0.091,7,0.322,8,0.011,9,0.74,10,0.135,11,0.246,13,0.009,14,0.009,15,1.723,17,2.137,18,2.212,19,2.376,20,2.376,21,2.212,22,3.307,23,2.376,29,5.567,41,3.012,42,2.376,43,2.291,45,2.467,51,2.67,52,1.473,59,1.517,95,2.379,96,2.066,109,2.67,140,0.581,212,1.936,226,1.709,227,3.012,242,3.055,327,3.214,346,2.786,348,2.709,419,3.396,427,2.377,451,2.67,465,2.565,483,2.786,620,5.377,649,5.239,650,4.61,679,4.61,680,4.61,681,5.26,682,5.26,683,5.377,684,4.61,685,5.844,686,5.26,687,6.667,688,2.786,689,4.61,690,4.61]],["title/injectables/CompaniesService.html",[112,0.806,649,2.712]],["body/injectables/CompaniesService.html",[3,0.067,4,0.06,5,0.045,7,0.295,8,0.012,9,0.368,10,0.067,11,0.122,12,1.595,13,0.005,14,0.005,52,0.732,56,1.274,57,1.775,58,1.274,59,1.62,80,2.927,88,2.874,93,1.225,98,1.561,106,1.654,107,1.517,112,0.779,113,0.931,115,0.321,116,1.042,118,0.936,120,1.561,121,1.169,135,2.684,139,1.751,140,0.788,141,0.915,142,1.31,143,2.058,144,2.965,146,1.447,164,2.166,184,1.138,193,1.225,226,0.849,234,2.785,237,1.517,239,1.98,252,1.707,262,1.806,270,1.984,271,3.223,276,1.436,286,1.792,288,1.919,291,1.384,294,1.384,297,2.023,347,2.638,361,2.975,371,1.436,382,1.274,383,1.447,384,1.384,412,2.251,427,0.931,433,2.135,435,2.249,453,2.249,460,3.995,461,2.621,462,2.621,468,1.517,469,1.517,476,2.892,483,2.151,490,3.262,497,1.919,503,2.448,508,2.281,540,3.848,542,3.111,543,3.088,547,2.249,551,2.892,552,2.892,624,1.707,625,1.707,627,4.156,631,2.03,637,1.834,640,1.707,643,1.98,644,4.765,649,2.621,651,1.138,652,3.229,653,1.099,684,2.29,689,2.29,691,2.29,692,4.06,693,2.613,694,2.613,695,4.06,696,4.06,697,2.613,698,2.481,699,2.613,700,3.043,701,2.613,702,2.613,703,2.613,704,1.919,705,2.481,706,1.517,707,2.613,708,1.138,709,3.043,710,3.043,711,1.596,712,1.596,713,1.596,714,1.596,715,3.043,716,1.138,717,1.596,718,2.481,719,1.517,720,2.481,721,2.613,722,2.481,723,1.596,724,2.613,725,1.596,726,1.596,727,1.596,728,1.596,729,2.613,730,1.596,731,1.596,732,1.596,733,1.596,734,1.596,735,1.596,736,1.596,737,3.043,738,3.043,739,4.467,740,6.082,741,4.06,742,1.687,743,4.06,744,1.274,745,1.384,746,1.138,747,2.613,748,2.613,749,2.613,750,2.249,751,2.613,752,3.043,753,2.613,754,2.613,755,1.596,756,2.613,757,1.18,758,2.613]],["title/classes/Company.html",[11,0.196,427,1.497]],["body/classes/Company.html",[3,0.099,4,0.088,5,0.067,7,0.219,8,0.011,10,0.161,11,0.293,13,0.007,14,0.007,52,1.079,59,1.806,95,1.252,96,1.514,103,1.707,106,1.048,109,1.957,115,0.474,118,1.178,121,1.286,136,2.203,140,0.82,141,1.153,142,1.583,212,1.993,226,1.76,229,1.621,239,1.879,268,1.808,270,0.989,276,1.562,293,2.831,342,2.831,348,2.759,351,1.657,371,1.806,405,2.446,412,2.098,420,3.618,427,2.551,451,2.75,465,3.311,477,2.958,479,2.488,482,2.869,536,1.957,537,2.135,553,0.907,683,2.831,704,2.831,708,2.727,744,3.053,746,2.727,750,2.135,757,2.828,759,2.831,760,3.636,761,3.468,762,2.828,763,3.636,764,3.762,765,5.208,766,3.854,767,3.93,768,3.854,769,3.636,770,3.826,771,3.854,772,3.854,773,3.854,774,3.854,775,3.854,776,3.854,777,3.854,778,3.854,779,3.854,780,2.355,781,3.636,782,3.378,783,3.309,784,2.644,785,2.644,786,2.828,787,3.378]],["title/classes/Company-1.html",[11,0.164,427,1.248,453,1.939]],["body/classes/Company-1.html",[3,0.09,4,0.08,5,0.06,7,0.263,8,0.011,10,0.167,11,0.335,13,0.006,14,0.006,59,1.453,95,1.923,96,1.368,106,2.203,115,0.428,118,0.861,121,1.282,136,1.37,140,0.76,141,0.977,162,2.022,180,2.127,181,3.766,190,1.131,212,1.854,238,1.928,256,3.252,262,2.441,268,1.633,276,1.984,285,3.077,294,3.435,297,2.046,324,1.914,351,1.541,371,2.069,412,1.983,427,2.557,446,2.925,503,1.065,522,3.278,536,1.767,537,1.928,553,0.819,560,3.309,589,2.046,631,1.588,716,2.194,760,2.925,762,2.275,763,3.437,786,2.673,788,2.247,789,3.95,790,3.481,791,3.481,792,3.481,793,4.346,794,2.127,795,4.059,796,4.346,797,3.077,798,3.252,799,3.252,800,3.616,801,2.557,802,3.252,803,1.572,804,2.557,805,3.252,806,1.928,807,2.275,808,3.798,809,3.699,810,3.699,811,3.592,812,5.268,813,3.455,814,3.699,815,3.252,816,3.252,817,3.252,818,3.699,819,3.252,820,2.127,821,2.247,822,2.247,823,2.247,824,2.247,825,2.247,826,3.455,827,2.388,828,3.455,829,2.557]],["title/classes/CreateCloudinaryDto.html",[11,0.196,830,3.085]],["body/classes/CreateCloudinaryDto.html",[3,0.172,4,0.153,5,0.116,8,0.01,10,0.172,11,0.312,13,0.01,14,0.01,553,1.57,830,5.656,831,5.849,832,5.306]],["title/classes/CreateCompanyDto.html",[11,0.196,627,2.712]],["body/classes/CreateCompanyDto.html",[3,0.126,4,0.112,5,0.085,7,0.198,8,0.011,10,0.126,11,0.297,13,0.008,14,0.008,106,2.235,115,0.601,118,1.089,121,1.274,136,2.037,140,0.781,141,1.02,226,2.066,234,5.637,262,2.441,351,1.946,499,3.886,522,3.522,553,1.15,560,2.941,627,4.106,739,6.035,760,4.106,762,3.193,763,4.509,789,3.641,803,2.207,807,2.873,808,3.854,833,6.805,834,3.886,835,4.148,836,4.886,837,4.886,838,4.886,839,4.886]],["title/classes/CreateFileDto.html",[11,0.196,840,2.881]],["body/classes/CreateFileDto.html",[3,0.172,4,0.153,5,0.116,8,0.01,10,0.172,11,0.312,13,0.01,14,0.01,553,1.57,840,5.283,841,5.849,842,5.306]],["title/classes/CreateJobDto.html",[11,0.196,843,2.566]],["body/classes/CreateJobDto.html",[3,0.066,4,0.059,5,0.044,7,0.199,8,0.011,10,0.066,11,0.312,13,0.005,14,0.005,88,0.945,95,2.077,96,1.009,98,1.028,103,1.263,106,2.22,115,0.316,118,1.075,121,1.206,136,2.011,140,0.615,141,1.049,164,1.653,181,1.492,182,1.658,199,1.658,212,0.945,226,1.302,228,1.252,229,1.08,230,1.569,234,5.152,236,1.762,238,3.082,262,2.493,268,2.31,270,1.264,276,2.265,290,1.658,294,2.609,297,2.948,344,1.886,351,1.226,374,2.327,405,1.81,419,2.586,420,1.252,427,1.984,450,5.492,454,3.231,455,4.087,465,1.953,492,2.042,499,2.448,522,2.219,536,1.304,537,1.423,553,0.604,560,3.154,631,1.263,666,1.886,739,4.087,745,2.122,762,2.225,767,3.386,784,1.762,789,3.467,794,1.569,798,3.18,799,2.586,800,2.448,802,2.586,803,2.225,805,1.658,807,1.81,808,3.683,815,2.586,816,2.586,823,1.658,824,2.586,825,1.658,835,3.931,843,3.01,844,5.973,845,1.886,846,4.798,847,3.18,848,4.798,849,3.618,850,3.917,851,3.618,852,3.686,853,5.309,854,4.877,855,2.568,856,2.568,857,2.568,858,2.568,859,2.568,860,4.877,861,4.006,862,4.006,863,2.568,864,3.512,865,4.877,866,2.251,867,3.512,868,2.568,869,2.568,870,2.568,871,2.568,872,3.186,873,3.186,874,2.568,875,3.512,876,2.568,877,3.186,878,2.042,879,3.186,880,2.251,881,2.942,882,2.942,883,2.568,884,4.877,885,2.568,886,3.917,887,2.942,888,3.186,889,4.317,890,4.317,891,4.317,892,3.512,893,2.042,894,2.251,895,2.251,896,2.251,897,2.251,898,2.251,899,1.886,900,3.01,901,1.953,902,2.251,903,2.251,904,2.251,905,3.512,906,2.251,907,2.251,908,4.317,909,2.251,910,1.658,911,2.251,912,2.251,913,2.251,914,1.886,915,1.886,916,3.512,917,2.251]],["title/classes/CreatePermissionDto.html",[11,0.196,918,2.712]],["body/classes/CreatePermissionDto.html",[3,0.128,4,0.114,5,0.086,7,0.202,8,0.011,10,0.128,11,0.301,13,0.008,14,0.008,15,1.839,106,2.245,115,0.614,118,1.097,121,1.279,136,2.053,140,0.789,141,1.028,262,2.451,351,1.972,553,1.174,560,2.965,789,3.664,803,2.253,807,2.911,808,3.87,820,5.042,835,4.18,901,3.81,918,4.161,919,6.849,920,3.966,921,5.045,922,4.987,923,4.987,924,4.987,925,4.987]],["title/classes/CreateResumeDto.html",[11,0.196,926,2.712]],["body/classes/CreateResumeDto.html",[3,0.104,4,0.092,5,0.07,7,0.226,8,0.011,10,0.144,11,0.3,13,0.007,14,0.007,59,1.613,106,2.285,115,0.496,118,1.095,121,1.196,136,2.048,141,1.025,262,2.495,351,1.711,371,2.098,503,2.303,504,4.991,553,0.95,560,3.261,786,3.554,789,3.793,797,4.446,803,1.823,808,3.893,822,4.86,835,4.17,926,3.61,927,6.138,928,2.964,929,5.94,930,5.94,931,4.446,932,6.138,933,4.447,934,4.035,935,4.035,936,4.035,937,4.035,938,4.035,939,4.035,940,2.605]],["title/classes/CreateRoleDto.html",[11,0.196,941,2.712]],["body/classes/CreateRoleDto.html",[3,0.113,4,0.101,5,0.076,7,0.24,8,0.011,10,0.113,11,0.277,13,0.008,14,0.008,59,1.71,103,1.869,106,2.273,115,0.541,118,1.044,121,1.113,136,1.953,140,0.741,141,0.978,226,1.927,228,4.009,243,4.067,255,4.182,262,2.385,276,1.71,294,4.092,351,1.814,405,3.244,420,2.891,499,3.623,503,1.814,553,1.034,560,3.154,762,3.03,786,2.678,789,3.516,797,3.623,803,1.986,807,2.678,808,3.623,821,4.636,835,3.978,847,5.252,866,3.853,878,3.496,887,4.355,888,4.715,914,3.229,915,4.927,941,3.828,942,6.572,943,3.496,944,7.037,945,4.396,946,4.396,947,4.396,948,4.396,949,4.396]],["title/classes/CreateSubscriberDto.html",[11,0.196,950,2.712]],["body/classes/CreateSubscriberDto.html",[3,0.124,4,0.11,5,0.083,7,0.194,8,0.011,10,0.124,11,0.294,13,0.008,14,0.008,95,2.042,103,1.981,106,2.227,115,0.59,118,1.019,121,1.269,136,1.906,140,0.853,141,0.955,262,2.431,268,2.947,276,2.226,294,3.329,297,2.553,351,1.923,371,2.327,419,4.057,553,1.129,560,3.216,789,3.487,795,4.807,800,3.84,803,2.168,808,3.62,835,3.481,852,4.716,877,4.998,878,3.816,879,4.998,880,4.206,881,4.616,882,4.616,887,4.616,914,3.525,915,3.525,950,4.057,951,6.518,952,3.816,953,3.816,954,4.799,955,4.799,956,4.799,957,4.799]],["title/classes/CreateUserCvDto.html",[11,0.196,940,2.712]],["body/classes/CreateUserCvDto.html",[3,0.113,4,0.1,5,0.076,7,0.239,8,0.011,10,0.152,11,0.313,13,0.008,14,0.008,59,1.706,106,2.272,115,0.539,118,0.974,121,1.161,136,1.821,141,0.912,262,2.481,351,1.81,371,1.706,503,2.361,504,4.057,553,1.031,560,3.302,786,3.563,789,3.854,797,4.576,803,1.978,808,3.854,822,4.982,835,3.709,926,2.828,927,5.702,928,3.217,929,6.035,930,6.035,931,3.614,932,6.273,933,4.703,940,3.818,958,4.38,959,4.38,960,4.38]],["title/classes/CreateUserDto.html",[11,0.196,806,2.327]],["body/classes/CreateUserDto.html",[3,0.076,4,0.068,5,0.051,7,0.243,8,0.011,10,0.155,11,0.317,13,0.006,14,0.006,59,1.292,95,1.951,96,1.167,106,2.245,115,0.365,118,1.052,121,1.273,136,1.968,140,0.712,141,1.044,162,1.725,180,1.815,181,4.3,190,0.965,212,1.648,238,1.645,256,3.481,262,2.481,268,2.101,276,2.027,285,3.295,294,3.588,297,2.191,324,2.449,351,1.371,371,2.176,412,0.995,427,2.58,446,3.132,503,1.371,522,3.326,536,1.508,537,1.645,553,0.699,560,3.269,589,1.82,631,1.7,716,2.349,760,3.487,762,2.023,763,1.725,786,2.436,788,1.918,789,3.83,793,3.96,794,1.815,795,4.119,796,3.96,797,2.737,798,2.892,799,2.892,800,3.295,801,2.182,802,2.892,803,1.342,804,2.182,805,2.892,806,2.481,807,2.436,808,3.83,809,3.96,810,3.96,811,3.751,812,5.439,813,3.073,814,3.29,815,3.481,816,3.481,817,3.876,818,3.96,819,3.876,820,2.737,821,2.892,822,2.892,823,1.918,824,1.918,825,1.918,826,3.073,827,2.038,828,3.073,829,2.182,835,3.751,933,2.362,953,2.362,961,2.97,962,2.604,963,2.604,964,2.97,965,2.97,966,2.97,967,2.97,968,2.97,969,2.97,970,2.97,971,2.97]],["title/controllers/DatabasesController.html",[0,1.078,972,3.085]],["body/controllers/DatabasesController.html",[0,1.631,2,1.78,3,0.164,4,0.146,5,0.11,7,0.303,8,0.011,9,0.895,10,0.164,11,0.297,13,0.01,14,0.01,127,2.981,588,2.871,589,2.582,972,5.498,973,5.571,974,6.356,975,5.137,976,5.571,977,6.356]],["title/modules/DatabasesModule.html",[15,0.988,30,2.881]],["body/modules/DatabasesModule.html",[2,1.849,3,0.133,4,0.119,5,0.09,7,0.337,8,0.011,9,0.729,10,0.133,11,0.242,13,0.009,14,0.009,15,1.711,17,2.105,18,2.178,19,2.34,20,2.34,21,2.178,22,3.283,23,2.34,30,5.705,41,2.983,42,2.34,43,2.257,45,2.43,51,2.63,52,1.451,140,0.803,143,1.494,264,2.34,322,4.263,323,3.554,324,1.969,325,4.263,326,3.554,346,2.744,347,2.744,348,2.953,349,3.805,358,4.477,381,4.12,972,5.339,975,5.219,976,4.541,978,4.541,979,4.541,980,5.18,981,5.18,982,4.53,983,3.805,984,4.12]],["title/injectables/DatabasesService.html",[112,0.806,975,2.712]],["body/injectables/DatabasesService.html",[3,0.089,4,0.08,5,0.06,7,0.312,8,0.011,9,0.489,10,0.089,11,0.162,12,1.974,13,0.006,14,0.006,49,4.516,50,2.121,52,0.972,56,1.692,57,1.238,58,1.692,59,1.001,88,2.174,95,1.128,96,1.364,103,1.585,107,2.016,112,0.964,113,1.238,115,0.427,116,1.29,118,0.859,120,0.891,121,0.916,139,0.944,140,0.836,141,0.473,142,0.706,143,1.449,164,1.493,193,3.549,229,1.46,235,2.549,255,3.641,262,1.031,264,1.568,270,1.897,271,3.484,323,2.381,324,2.724,326,2.381,351,1.538,358,3.587,360,3.997,361,4.149,362,4.698,371,1.704,373,2.381,374,2.016,380,2.241,381,2.76,384,1.839,385,2.241,386,4.339,388,2.76,394,2.76,410,2.76,435,1.923,466,3.997,522,1.923,589,2.4,593,2.016,623,1.808,716,3.121,760,3.431,762,2.27,811,3.272,817,3.814,819,3.814,820,3.071,827,2.381,847,3.245,900,2.121,975,3.245,983,2.549,985,3.043,986,6.476,987,7.165,988,3.043,989,5.178,990,5.908,991,5.026,992,3.471,993,5.026,994,2.381,995,4.339,996,2.76,997,5.026,998,3.043,999,3.471,1000,3.471,1001,3.471,1002,5.908,1003,3.471,1004,5.908,1005,3.471,1006,5.908,1007,3.471,1008,3.471,1009,3.471,1010,3.471,1011,3.471,1012,3.997,1013,3.043,1014,3.471,1015,3.471,1016,3.471,1017,3.471,1018,2.549,1019,3.471,1020,3.471,1021,3.471,1022,5.908,1023,3.043,1024,5.908,1025,5.908,1026,5.026,1027,5.908,1028,5.908,1029,5.026,1030,3.471,1031,3.471,1032,3.471,1033,3.471,1034,3.471,1035,3.471,1036,3.043,1037,3.471]],["title/classes/File.html",[5,0.073,11,0.196]],["body/classes/File.html",[3,0.172,4,0.153,5,0.141,8,0.01,10,0.172,11,0.313,13,0.01,14,0.01,553,1.575,1038,5.865]],["title/controllers/FilesController.html",[0,1.078,1039,3.085]],["body/controllers/FilesController.html",[0,1.096,2,1.196,3,0.11,4,0.098,5,0.129,7,0.317,8,0.011,9,0.601,10,0.11,11,0.2,13,0.007,14,0.007,57,1.523,98,1.905,115,0.525,116,1.492,118,1.08,120,1.905,121,1.253,127,2.003,136,2.019,139,1.93,140,0.784,141,0.967,142,1.444,167,3.08,168,2.169,177,2.083,179,1.929,183,2.366,189,2.262,190,1.388,252,2.445,433,2.21,503,2.344,561,3.396,575,5.257,578,3.744,579,3.744,582,3.744,583,2.93,588,1.929,589,1.735,590,3.744,591,3.744,604,5.096,605,3.744,624,2.984,625,2.445,637,1.929,640,1.796,641,3.553,643,2.083,645,3.553,647,2.366,648,2.481,653,1.796,672,3.553,673,2.61,677,2.481,1039,4.271,1040,3.744,1041,3.396,1042,4.271,1043,4.271,1044,4.271,1045,5.471,1046,4.271,1047,4.271,1048,5.096,1049,4.271,1050,4.855,1051,4.271,1052,5.096,1053,4.271,1054,4.271,1055,4.268,1056,3.744,1057,3.396,1058,3.396,1059,4.271,1060,4.271,1061,4.271,1062,4.271,1063,3.396,1064,4.271,1065,4.271,1066,4.271,1067,4.271,1068,4.271,1069,4.271,1070,4.271,1071,4.271]],["title/modules/FilesModule.html",[15,0.988,31,2.881]],["body/modules/FilesModule.html",[2,1.959,3,0.146,4,0.13,5,0.098,7,0.329,8,0.011,9,0.8,10,0.146,11,0.266,13,0.009,14,0.009,15,1.784,17,2.308,18,2.389,19,2.566,20,2.566,21,2.389,22,3.425,23,2.566,31,5.675,41,3.16,42,2.566,43,2.475,45,2.664,183,3.147,583,3.897,1039,5.568,1055,5.341,1056,4.98,1072,4.98,1073,4.98,1074,5.681,1075,5.681,1076,5.681,1077,5.139,1078,5.681,1079,5.681,1080,5.681]],["title/injectables/FilesService.html",[112,0.806,1055,2.712]],["body/injectables/FilesService.html",[3,0.123,4,0.11,5,0.134,7,0.283,8,0.011,9,0.674,10,0.123,11,0.224,13,0.008,14,0.008,98,1.98,112,1.204,113,1.707,115,0.589,116,1.611,118,1.122,120,2.07,121,1.196,139,2.021,140,0.821,141,1.012,142,1.512,164,1.423,252,2.639,433,2.386,503,2.422,623,1.92,624,3.124,625,2.639,631,2.609,637,2.835,640,2.639,643,3.06,651,2.086,653,2.014,840,5.291,1041,3.808,1045,5.533,1055,4.052,1057,4.991,1081,4.198,1082,6.276,1083,4.789,1084,4.789,1085,4.789,1086,4.789,1087,4.789,1088,7.713,1089,4.789,1090,4.198,1091,4.789]],["title/controllers/HealthController.html",[0,1.078,1092,3.085]],["body/controllers/HealthController.html",[0,1.501,2,1.638,3,0.151,4,0.134,5,0.101,7,0.311,8,0.011,9,0.823,10,0.151,11,0.273,12,2.297,13,0.009,14,0.009,98,1.501,115,0.719,116,1.828,118,0.85,120,1.501,127,2.742,136,1.59,176,3.944,179,2.641,193,3.339,515,5.125,910,5.159,1092,5.23,1093,5.125,1094,7.12,1095,5.847,1096,5.847,1097,7.12,1098,7.12,1099,7.12,1100,4.65,1101,5.847,1102,5.847,1103,5.847]],["title/modules/HealthModule.html",[15,0.988,32,2.881]],["body/modules/HealthModule.html",[2,2.084,3,0.162,4,0.144,5,0.109,7,0.321,8,0.011,9,0.885,10,0.162,11,0.294,13,0.01,14,0.01,15,1.751,17,2.555,32,5.103,45,2.95,1092,5.819,1100,5.002,1104,6.289,1105,6.289,1106,7.439]],["title/classes/HttpExceptionFilter.html",[11,0.196,1050,3.085]],["body/classes/HttpExceptionFilter.html",[3,0.139,4,0.124,5,0.128,7,0.275,8,0.011,9,0.76,10,0.139,11,0.252,13,0.009,14,0.009,115,0.664,116,1.74,118,0.785,120,1.386,139,1.469,140,0.597,141,0.736,142,1.099,146,4.105,183,2.992,212,1.988,227,2.44,262,1.604,268,2.533,270,1.902,285,3.3,328,4.295,542,4.105,543,2.742,547,2.992,553,1.271,556,6.18,560,2.122,563,3.967,666,3.967,821,3.487,872,4.295,900,4.143,931,4.143,1050,4.98,1058,5.391,1107,4.734,1108,7.41,1109,6.78,1110,6.495,1111,7.771,1112,5.401,1113,4.734,1114,4.734,1115,5.401,1116,4.734,1117,5.401,1118,5.401,1119,5.401,1120,5.401,1121,5.401,1122,5.401,1123,5.401,1124,5.401]],["title/interfaces/IUser.html",[135,1.546,1125,2.712]],["body/interfaces/IUser.html",[3,0.138,4,0.123,5,0.093,8,0.011,10,0.138,13,0.009,14,0.009,15,1.263,115,0.66,121,1.358,135,2.485,140,0.915,141,1.172,142,1.578,255,4.107,324,2.947,351,2.066,371,2.236,412,2.774,427,2.764,769,4.737,901,2.616,921,3.464,1125,3.464,1126,4.266,1127,4.703]],["title/classes/IsEndAfterStartConstraint.html",[11,0.196,899,3.085]],["body/classes/IsEndAfterStartConstraint.html",[3,0.083,4,0.074,5,0.056,7,0.229,8,0.011,10,0.083,11,0.337,13,0.006,14,0.006,88,1.185,95,2.031,96,1.265,98,1.221,103,1.015,106,2.124,115,0.396,116,1.221,118,0.692,120,1.221,121,1.21,139,1.294,140,0.691,141,0.908,142,0.968,164,1.856,181,1.87,182,2.079,199,2.079,212,1.185,226,1.047,228,1.57,229,1.354,230,1.968,234,4.787,236,2.209,238,3.866,262,2.41,268,2.231,270,1.452,276,2.252,290,2.079,294,2.52,297,2.709,344,2.365,374,2.763,405,2.149,419,2.079,420,1.57,427,1.696,450,4.97,454,2.763,455,3.495,465,2.32,492,2.561,499,1.968,522,1.784,536,1.635,537,1.784,553,0.758,560,3.229,631,1.015,666,2.365,739,3.495,745,2.52,762,1.455,767,3.31,784,2.209,789,3.661,794,1.968,798,3.072,799,3.072,800,2.907,802,3.072,803,2.556,805,2.079,807,1.455,808,3.61,815,3.072,816,3.072,823,2.079,824,3.072,825,2.079,843,2.907,844,4.499,845,2.365,846,4.97,847,2.079,848,3.784,849,2.365,850,2.561,851,2.365,852,2.907,853,5.302,854,4.96,860,4.17,864,2.823,865,4.17,867,2.823,872,2.561,873,2.561,875,2.823,877,2.561,879,2.561,881,2.365,882,2.365,884,4.17,886,4.499,887,3.495,888,3.784,889,4.96,890,6.328,891,4.96,892,4.96,893,2.561,894,2.823,895,2.823,896,2.823,897,2.823,898,2.823,899,3.495,900,3.819,901,2.32,902,4.17,903,5.478,904,2.823,905,4.17,906,2.823,907,2.823,908,4.96,909,2.823,910,2.079,911,4.17,912,4.96,913,2.823,914,2.365,915,2.365,916,4.17,917,2.823,1128,3.22,1129,3.22]],["title/classes/Job.html",[11,0.196,77,2.048]],["body/classes/Job.html",[3,0.087,4,0.078,5,0.059,7,0.2,8,0.011,10,0.15,11,0.231,13,0.006,14,0.006,52,0.952,59,1.427,77,2.846,103,1.071,109,1.725,115,0.418,118,1.211,121,1.291,136,2.265,140,0.832,141,1.167,142,1.654,226,1.104,268,1.593,270,0.872,276,0.98,348,2.605,351,1.514,371,1.683,405,2.896,412,2.148,420,3.669,427,2.081,446,1.973,451,1.725,465,2.413,477,2.542,482,1.8,553,0.8,631,2.021,708,2.542,744,2.846,746,2.542,757,2.636,761,3.233,762,2.636,763,1.973,764,3.233,765,5.293,767,4.129,769,3.724,770,3.918,780,2.076,781,2.874,783,2.076,784,2.331,785,2.331,786,2.896,846,4.641,847,3.768,848,4.641,849,4.287,850,4.641,851,4.287,852,3.566,853,4.641,1130,2.496,1131,3.398,1132,3.398,1133,3.398,1134,3.398,1135,3.398,1136,3.398,1137,3.398,1138,3.398,1139,3.398,1140,3.398,1141,3.398,1142,3.398,1143,3.398,1144,3.398,1145,3.398,1146,3.398,1147,3.398,1148,3.398,1149,2.331,1150,2.702,1151,3.398,1152,3.398,1153,2.331,1154,2.978]],["title/controllers/JobsController.html",[0,1.078,1155,3.085]],["body/controllers/JobsController.html",[0,0.983,2,1.073,3,0.099,4,0.088,5,0.066,7,0.308,8,0.011,9,0.539,10,0.099,11,0.179,13,0.007,14,0.007,57,1.365,77,3.787,80,2.95,98,1.832,115,0.471,116,1.384,118,1.038,120,1.832,121,1.266,127,1.796,135,3.029,136,1.942,139,1.942,140,0.789,141,0.972,142,1.452,143,2.417,164,1.601,167,2.856,168,2.737,176,2.986,177,1.867,178,3.781,179,1.73,184,1.668,189,2.029,190,1.244,252,2.267,433,2.372,503,2.376,508,3.008,588,1.73,589,1.556,623,1.65,624,2.624,625,2.267,628,2.34,630,2.34,631,2.334,634,3.294,636,3.294,637,1.73,640,1.61,641,2.34,643,1.867,645,2.34,647,2.121,648,2.224,651,1.668,653,1.61,658,2.34,669,2.34,670,2.34,672,2.34,673,2.34,675,2.473,677,2.224,843,4.524,1155,3.96,1156,3.357,1157,4.583,1158,3.357,1159,3.83,1160,2.627,1161,3.83,1162,3.83,1163,3.83,1164,2.627,1165,3.83,1166,5.328,1167,2.627,1168,3.83,1169,3.813,1170,3.357,1171,4.287,1172,3.83,1173,3.83,1174,3.046,1175,3.83,1176,3.698,1177,3.83,1178,3.83,1179,2.473,1180,3.83,1181,2.473,1182,3.83]],["title/modules/JobsModule.html",[15,0.988,33,2.881]],["body/modules/JobsModule.html",[2,1.937,3,0.144,4,0.128,5,0.097,7,0.327,8,0.011,9,0.785,10,0.144,11,0.261,13,0.009,14,0.009,15,1.769,17,2.265,18,2.345,19,2.519,20,2.519,21,2.345,22,3.396,23,2.519,33,5.649,41,3.124,42,2.519,43,2.429,45,2.615,51,2.831,52,1.562,77,2.719,140,0.764,346,2.954,348,2.265,535,3.825,688,2.954,807,2.519,901,2.719,1153,4.744,1155,5.522,1169,5.032,1170,4.888,1183,4.888,1184,4.888,1185,5.576,1186,5.576,1187,4.888,1188,4.096]],["title/injectables/JobsService.html",[112,0.806,1169,2.566]],["body/injectables/JobsService.html",[3,0.066,4,0.058,5,0.044,7,0.299,8,0.012,9,0.358,10,0.066,11,0.119,12,1.563,13,0.005,14,0.005,52,0.713,56,1.242,57,1.746,58,1.242,59,1.413,77,3.245,80,2.899,88,2.859,93,1.194,95,0.827,96,1,98,1.542,103,0.803,106,1.083,112,0.763,113,0.908,115,0.313,116,1.021,118,0.926,120,1.542,121,1.162,135,2.796,139,1.733,140,0.782,141,0.868,142,1.296,143,2.162,144,2.93,164,2.191,184,1.109,193,1.194,226,0.827,227,1.15,241,1.194,252,1.673,262,1.455,270,2.029,271,3.197,276,1.413,291,1.349,297,1.99,347,2.595,361,3.183,371,1.413,382,1.242,383,1.41,384,1.349,412,2.23,433,2.421,435,2.204,453,2.204,454,1.479,460,3.908,468,2.845,469,2.845,476,2.845,477,1.109,483,2.595,490,3.217,503,2.377,508,2.25,519,1.556,540,3.528,542,3.068,543,2.812,547,2.713,551,3.217,552,3.217,623,1.218,624,2.06,625,1.673,631,2.008,637,1.798,640,1.673,643,1.94,651,1.109,653,1.071,688,1.349,698,1.556,700,3.384,705,1.556,706,1.479,708,1.109,709,2.993,710,1.556,711,1.556,712,1.556,713,1.556,714,1.556,715,2.993,716,1.109,717,1.556,718,2.432,719,1.479,720,2.432,722,2.432,723,1.556,725,1.556,726,1.556,727,1.556,728,1.556,730,1.556,731,1.556,732,1.556,733,1.556,734,1.556,735,1.556,736,1.556,737,2.993,738,2.993,742,3.163,744,1.242,745,1.349,746,1.109,750,1.41,752,3.384,755,1.556,757,1.15,763,2.311,843,3.892,1149,2.73,1158,3.488,1166,4.724,1169,2.432,1171,3.165,1187,2.232,1189,2.232,1190,2.546,1191,2.546,1192,3.488,1193,2.546,1194,2.546,1195,2.546,1196,2.546,1197,2.546,1198,2.025,1199,2.546,1200,2.232,1201,1.87,1202,2.546,1203,2.546,1204,2.546,1205,2.546,1206,2.546,1207,2.546,1208,2.546,1209,2.232,1210,2.546,1211,2.546,1212,2.546,1213,2.546,1214,6.655,1215,4.899,1216,3.98,1217,2.546,1218,2.546,1219,2.546]],["title/injectables/JwtAuthGuard.html",[112,0.806,204,3.085]],["body/injectables/JwtAuthGuard.html",[0,1.036,3,0.187,4,0.092,5,0.07,7,0.305,8,0.011,9,0.568,10,0.104,11,0.189,12,1.585,13,0.007,14,0.007,98,1.647,103,1.763,112,1.073,113,1.439,115,0.496,116,1.435,118,0.933,120,1.435,121,0.625,139,1.745,140,0.709,141,0.874,142,1.306,143,2.098,160,4.713,164,1.661,176,2.235,179,1.823,183,2.235,196,3.537,199,2.605,204,4.107,217,3.209,224,2.964,229,1.697,242,2.343,245,2.466,261,3.209,264,3.287,270,1.932,276,1.164,281,3.537,283,2.964,296,2.964,315,2.605,379,4.447,451,2.049,460,3.399,479,2.605,495,3.209,555,2.526,562,2.964,588,1.823,910,3.61,983,2.964,1113,3.537,1220,6.073,1221,3.209,1222,5.592,1223,5.592,1224,5.592,1225,3.537,1226,5.986,1227,4.035,1228,5.592,1229,5.669,1230,4.035,1231,5.088,1232,5.592,1233,4.035,1234,6.073,1235,4.035,1236,2.964,1237,3.537,1238,3.209,1239,4.447,1240,3.209,1241,4.901,1242,4.035,1243,4.447,1244,5.592,1245,4.035,1246,4.035,1247,5.592,1248,4.035,1249,3.537,1250,4.035,1251,4.035,1252,4.035,1253,5.592,1254,4.035,1255,5.592,1256,4.035,1257,4.035,1258,6.417,1259,4.035,1260,4.035,1261,4.035,1262,4.035,1263,4.035,1264,4.035,1265,4.035,1266,4.035,1267,4.035,1268,4.035,1269,4.035,1270,5.592,1271,3.537]],["title/injectables/JwtStrategy.html",[112,0.806,310,2.881]],["body/injectables/JwtStrategy.html",[3,0.11,4,0.098,5,0.074,7,0.31,8,0.011,9,0.603,10,0.11,11,0.2,12,2.29,13,0.008,14,0.008,49,4.685,50,2.619,88,2.437,94,3.148,95,2.309,96,2.29,98,1.1,111,2.94,112,1.118,113,1.528,115,0.527,116,1.496,118,0.848,120,1.1,121,1.026,135,2.615,139,1.585,140,0.821,141,0.794,142,1.186,144,2.842,184,1.867,185,3.765,186,3.148,193,2.733,194,5.266,207,3.998,212,2.145,224,4.281,225,2.94,226,1.894,227,1.936,229,2.451,237,2.489,238,3.668,240,3.409,241,3.106,242,2.489,244,3.757,245,3.561,255,2.271,260,3.409,264,1.936,265,4.635,270,1.7,271,1.936,276,1.236,277,4.281,290,2.767,310,3.998,315,2.767,324,2.517,335,3.757,357,3.757,371,1.681,410,3.409,412,2.219,416,3.757,427,1.528,428,6.229,452,3.409,479,2.767,480,3.148,495,3.409,497,3.148,498,3.409,499,3.561,500,3.757,555,2.633,562,3.148,589,2.368,593,2.489,668,3.757,745,2.271,1272,3.757,1273,5.109,1274,4.286,1275,5.828,1276,4.286,1277,5.828,1278,3.757,1279,4.286,1280,4.286,1281,4.286,1282,4.286,1283,4.286,1284,4.286,1285,4.286,1286,3.409,1287,4.286,1288,4.286,1289,4.286,1290,4.286]],["title/injectables/LocalAuthGuard.html",[112,0.806,171,3.085]],["body/injectables/LocalAuthGuard.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,9,0.902,10,0.165,11,0.299,13,0.01,14,0.01,112,1.443,113,2.284,171,5.524,315,4.136,555,3.397,1221,5.095,1237,5.616,1291,5.616,1292,7.52]],["title/injectables/LocalStrategy.html",[112,0.806,311,2.881]],["body/injectables/LocalStrategy.html",[3,0.129,4,0.115,5,0.087,7,0.317,8,0.011,9,0.708,10,0.129,11,0.235,12,1.976,13,0.008,14,0.008,88,2.638,98,1.291,112,1.243,113,1.793,115,0.619,116,1.663,118,0.942,120,1.291,121,1.243,139,1.762,140,0.716,141,0.882,142,1.318,143,2.183,160,3.694,164,1.494,167,2.664,172,3.999,174,4.901,175,3.999,224,3.694,225,3.45,226,1.634,228,2.452,229,2.115,231,4.408,232,3.999,238,3.589,240,3.999,243,3.45,262,1.494,270,1.291,271,2.272,276,1.45,286,3.45,288,3.694,297,2.043,311,4.444,315,3.247,323,3.45,372,5.152,379,3.999,460,2.664,512,4.408,513,4.408,555,2.927,562,3.694,588,2.272,811,4.443,828,4.444,1273,5.679,1278,4.408,1293,4.408,1294,5.029,1295,5.029,1296,6.479,1297,5.029,1298,5.029,1299,5.029]],["title/controllers/MailController.html",[0,1.078,1300,3.085]],["body/controllers/MailController.html",[0,1.085,2,1.184,3,0.109,4,0.097,5,0.1,7,0.33,8,0.012,9,0.595,10,0.109,11,0.198,12,1.66,13,0.007,14,0.007,52,1.184,56,2.061,57,1.507,58,2.061,59,1.219,71,3.361,76,3.361,77,2.815,88,2.42,107,2.455,115,0.52,116,1.482,118,0.615,120,1.085,127,1.982,136,1.15,140,0.467,164,1.255,176,3.197,177,2.061,179,1.909,189,2.239,190,1.373,193,3.313,212,1.555,237,2.455,270,1.898,271,2.97,276,1.219,327,2.582,361,3.483,371,1.665,384,2.239,401,3.704,427,1.507,521,3.361,589,2.345,593,2.455,667,3.704,716,3.222,851,3.104,852,3.527,1149,2.899,1157,4.829,1188,3.104,1192,3.704,1200,3.704,1201,3.104,1231,3.104,1300,4.24,1301,3.704,1302,4.226,1303,7.065,1304,4.226,1305,4.226,1306,5.772,1307,4.226,1308,4.245,1309,3.704,1310,6.574,1311,3.361,1312,2.455,1313,2.899,1314,3.704,1315,3.361,1316,4.226,1317,4.226,1318,3.704,1319,3.704,1320,4.226,1321,4.226,1322,3.704,1323,4.226,1324,4.226,1325,5.06,1326,3.704,1327,4.226,1328,5.772,1329,4.226,1330,4.226,1331,4.226,1332,4.226,1333,4.226,1334,4.226,1335,4.226,1336,4.226,1337,4.226,1338,4.226,1339,4.226,1340,4.226,1341,4.226,1342,3.361,1343,4.226,1344,4.226,1345,4.226,1346,4.226,1347,4.226,1348,4.226,1349,5.763,1350,4.226,1351,4.226,1352,4.226]],["title/modules/MailModule.html",[15,0.988,34,2.881]],["body/modules/MailModule.html",[2,1.667,3,0.114,4,0.101,5,0.077,7,0.341,8,0.012,9,0.622,10,0.114,11,0.207,13,0.008,14,0.008,15,1.583,17,1.796,18,1.859,19,1.997,20,1.997,21,1.859,22,3.039,23,1.997,34,5.647,41,2.688,42,1.997,43,1.925,45,2.073,49,4.398,50,2.701,51,2.244,52,1.238,77,2.155,87,3.246,88,1.627,99,3.246,103,2.121,128,3.874,140,0.658,143,1.275,164,1.313,327,3.636,346,2.341,348,2.418,369,3.874,371,1.275,431,3.515,745,3.152,1110,3.874,1153,4.082,1169,4.728,1188,3.246,1300,4.941,1308,4.995,1309,3.874,1311,3.515,1312,2.567,1314,3.874,1315,3.515,1349,3.874,1353,3.874,1354,3.874,1355,4.728,1356,4.42,1357,4.42,1358,4.42,1359,3.515,1360,3.032,1361,5.951,1362,4.42,1363,3.032,1364,4.082,1365,4.42,1366,4.42,1367,4.42,1368,4.42,1369,4.42,1370,4.42,1371,4.42,1372,4.42,1373,4.42,1374,4.42,1375,4.42,1376,3.874,1377,4.42,1378,4.42,1379,4.42,1380,4.42,1381,4.42,1382,4.42,1383,4.42,1384,3.874]],["title/injectables/MailService.html",[112,0.806,1308,2.712]],["body/injectables/MailService.html",[3,0.169,4,0.151,5,0.114,7,0.266,8,0.011,9,0.926,10,0.169,11,0.308,13,0.01,14,0.01,112,1.466,113,2.347,1308,4.932,1385,5.769]],["title/injectables/MulterConfigService.html",[112,0.806,1077,3.085]],["body/injectables/MulterConfigService.html",[3,0.102,4,0.09,5,0.129,7,0.292,8,0.012,9,0.555,10,0.102,11,0.184,13,0.007,14,0.007,98,1.627,103,1.735,112,1.056,113,1.406,115,0.485,116,1.412,118,0.922,120,1.412,121,1.063,139,1.072,140,0.7,141,0.749,142,0.802,151,5.04,164,1.171,183,2.184,264,1.781,270,1.76,351,1.684,373,4.348,374,2.29,396,2.409,543,3.663,556,4.375,561,3.135,583,2.705,623,1.206,745,2.088,849,2.896,900,2.409,1036,4.823,1052,3.456,1063,3.135,1077,4.041,1114,3.456,1359,3.135,1360,3.774,1376,3.456,1386,3.456,1387,6.338,1388,6.859,1389,5.502,1390,3.943,1391,5.555,1392,5.502,1393,3.943,1394,3.943,1395,3.943,1396,5.502,1397,5.502,1398,5.502,1399,3.943,1400,3.943,1401,3.943,1402,3.943,1403,3.943,1404,3.943,1405,5.502,1406,3.943,1407,3.943,1408,5.502,1409,3.943,1410,3.943,1411,3.943,1412,3.943,1413,6.338,1414,3.943,1415,3.943,1416,3.943,1417,3.943,1418,3.943,1419,3.456,1420,3.943,1421,3.943,1422,3.943,1423,3.456,1424,3.943,1425,6.012,1426,3.943,1427,3.943,1428,3.943,1429,5.555,1430,3.943,1431,3.943,1432,3.943,1433,5.502,1434,5.502,1435,3.943,1436,3.943,1437,3.943,1438,5.502,1439,3.943,1440,5.502,1441,3.943,1442,3.456,1443,3.456,1444,3.456,1445,3.456,1446,3.456,1447,3.456,1448,3.456,1449,3.456,1450,3.456,1451,3.456,1452,3.456,1453,3.456,1454,3.456,1455,3.456,1456,5.502,1457,3.456,1458,3.943,1459,3.456,1460,3.456,1461,3.456,1462,4.823,1463,3.943]],["title/injectables/ParseIntPipeCustom.html",[112,0.806,654,3.085]],["body/injectables/ParseIntPipeCustom.html",[3,0.154,4,0.137,5,0.104,7,0.292,8,0.011,9,0.841,10,0.154,11,0.279,13,0.009,14,0.009,112,1.384,113,2.131,115,0.735,116,1.852,118,0.869,120,1.534,121,1.201,139,1.626,140,0.661,141,0.814,142,1.216,270,1.534,374,3.472,382,2.914,383,3.311,654,5.3,719,3.472,886,5.739,1240,6.165,1464,5.239,1465,7.216,1466,5.977,1467,7.216,1468,5.977,1469,5.977]],["title/classes/Permission.html",[11,0.196,264,1.897]],["body/classes/Permission.html",[3,0.103,4,0.092,5,0.069,7,0.225,8,0.011,10,0.164,11,0.26,13,0.007,14,0.007,15,1.624,52,1.121,59,1.603,93,2.607,103,1.262,115,0.492,118,1.186,121,1.293,136,2.219,140,0.83,141,1.158,142,1.598,226,1.3,239,2.711,263,3.182,264,2.886,270,1.027,276,1.154,348,2.595,351,1.701,371,1.842,405,2.511,412,2.14,420,3.661,421,3.182,451,2.032,465,1.951,477,2.783,482,2.12,494,3.182,553,0.942,622,3.182,708,2.783,744,3.115,746,2.783,757,2.886,761,3.539,764,3.539,765,5.229,767,3.977,769,3.71,770,3.904,780,2.445,781,3.229,783,2.445,786,2.886,820,2.445,901,3.115,921,4.124,982,2.745,994,2.745,1470,2.939,1471,4.001,1472,4.001,1473,4.001,1474,4.001,1475,4.001,1476,4.001,1477,4.001,1478,4.001,1479,4.001,1480,4.001,1481,4.001,1482,4.001,1483,2.939,1484,3.507]],["title/controllers/PermissionsController.html",[0,1.078,1485,3.085]],["body/controllers/PermissionsController.html",[0,0.994,2,1.085,3,0.1,4,0.089,5,0.067,7,0.309,8,0.011,9,0.545,10,0.1,11,0.181,13,0.007,14,0.007,57,1.381,80,2.964,98,1.84,115,0.476,116,1.395,118,1.042,120,1.84,121,1.268,127,1.816,135,2.952,136,1.95,139,1.95,140,0.792,141,0.976,142,1.458,143,2.36,164,1.614,167,3.325,168,2.759,169,3.395,177,1.888,178,3.605,179,1.749,184,1.687,189,2.052,190,1.259,252,2.285,255,3.325,264,3.518,433,2.386,503,2.383,508,3.019,588,1.749,589,1.573,623,1.921,624,2.64,625,2.285,628,2.366,630,2.366,631,2.343,634,3.32,636,3.32,637,1.749,640,1.628,641,2.366,643,1.888,645,2.366,647,2.145,648,2.249,651,1.687,653,1.628,658,2.366,669,2.366,670,2.366,672,2.366,673,2.366,675,2.5,677,2.249,918,4.797,1160,2.657,1164,2.657,1167,2.657,1176,3.728,1179,2.5,1181,2.5,1485,3.991,1486,3.395,1487,3.873,1488,3.873,1489,3.873,1490,3.08,1491,3.873,1492,3.873,1493,5.343,1494,3.873,1495,4.053,1496,3.395,1497,4.321,1498,3.873,1499,3.873,1500,3.873,1501,3.873,1502,3.873,1503,3.873,1504,3.873]],["title/modules/PermissionsModule.html",[15,0.988,35,2.881]],["body/modules/PermissionsModule.html",[2,1.937,3,0.144,4,0.128,5,0.097,7,0.327,8,0.011,9,0.785,10,0.144,11,0.261,13,0.009,14,0.009,15,1.769,17,2.265,18,2.345,19,2.519,20,2.519,21,2.345,22,3.396,23,2.519,35,5.649,41,3.124,42,2.519,43,2.429,45,2.615,51,2.831,52,1.562,140,0.764,264,2.519,346,2.954,348,2.265,535,3.825,688,2.954,807,2.519,901,2.719,982,4.744,984,4.434,1485,5.522,1495,5.317,1496,4.888,1505,4.888,1506,4.888,1507,5.576,1508,5.576,1509,4.888]],["title/injectables/PermissionsService.html",[112,0.806,1495,2.712]],["body/injectables/PermissionsService.html",[3,0.062,4,0.055,5,0.041,7,0.288,8,0.012,9,0.337,10,0.062,11,0.112,12,1.49,13,0.005,14,0.005,15,1.108,52,0.671,56,1.849,57,1.909,58,1.168,59,1.358,80,2.832,88,2.823,93,1.123,98,1.497,103,0.755,106,1.28,112,0.727,113,0.854,115,0.295,116,0.973,118,0.902,120,1.497,121,1.144,135,2.617,139,1.688,140,0.816,141,0.845,142,1.263,143,2.002,144,2.845,164,2.225,184,1.043,193,1.123,211,1.904,212,1.395,226,0.778,227,1.082,241,1.123,252,2.251,262,1.398,264,3.212,270,2.049,271,3.277,276,1.358,291,1.268,293,1.759,297,1.912,347,2.494,361,2.836,371,1.358,382,1.168,383,1.326,384,1.268,396,1.463,412,2.259,433,2.471,435,2.1,453,2.607,460,3.909,461,3.039,462,3.039,468,2.734,469,2.734,476,2.734,477,1.043,482,1.268,483,2.494,490,3.109,503,2.37,508,2.175,519,2.317,540,3.437,542,2.965,543,2.39,547,2.607,551,2.202,552,2.202,623,1.16,624,1.594,625,1.594,631,1.957,637,1.713,640,1.594,643,1.168,651,1.043,653,1.007,698,2.317,700,2.876,705,1.463,706,1.391,708,1.043,709,2.876,710,1.463,711,1.463,712,1.463,713,1.463,714,1.463,715,2.876,716,1.043,717,1.463,718,2.317,719,1.391,720,2.317,722,2.317,723,1.463,725,1.463,726,1.463,727,1.463,728,1.463,730,1.463,731,2.876,732,1.463,733,1.463,734,1.463,735,1.463,736,1.463,737,2.876,738,2.876,742,3.039,746,1.043,750,1.326,752,3.271,755,1.463,757,1.082,901,3.17,910,1.546,918,3.456,921,4.197,989,3.324,994,1.643,998,2.099,1234,2.099,1493,4.762,1495,2.448,1497,3.015,1509,2.099,1510,2.099,1511,2.395,1512,2.395,1513,3.792,1514,2.395,1515,3.015,1516,2.395,1517,2.395,1518,2.395,1519,2.395,1520,4.707,1521,2.099,1522,2.395,1523,2.395,1524,3.792,1525,4.707,1526,2.395,1527,2.395,1528,2.395,1529,2.395,1530,2.395,1531,2.099,1532,2.395,1533,2.099,1534,5.834,1535,4.707,1536,3.792,1537,3.792,1538,2.099,1539,2.395,1540,1.904,1541,2.395,1542,3.792,1543,2.395,1544,2.395,1545,2.395]],["title/classes/RegisterUserDto.html",[11,0.196,162,2.439]],["body/classes/RegisterUserDto.html",[3,0.08,4,0.071,5,0.054,7,0.248,8,0.011,10,0.158,11,0.322,13,0.006,14,0.006,59,1.333,95,1.992,96,1.216,106,2.247,115,0.381,118,1,121,1.28,136,1.871,140,0.725,141,1.02,162,2.684,180,1.892,181,4.14,190,1.006,212,1.701,238,1.715,256,3.569,262,2.485,268,1.452,276,1.984,285,3.378,294,3.644,297,2.246,324,1.756,351,1.414,371,2.199,412,1.037,427,2.338,446,3.211,503,0.947,522,3.396,536,1.572,537,1.715,553,0.729,560,3.286,589,1.877,631,1.743,716,2.408,760,3.56,762,2.087,763,1.798,786,2.087,788,1.999,789,3.854,793,4.06,794,1.892,795,4.205,796,4.06,797,2.824,798,2.983,799,2.983,800,3.378,801,2.274,802,2.983,803,1.399,804,2.274,805,2.983,806,1.715,807,2.497,808,3.854,809,4.06,810,4.06,811,3.81,812,5.501,813,3.17,814,3.394,815,3.569,816,3.569,817,3.958,818,4.06,819,3.958,820,1.892,821,1.999,822,1.999,823,1.999,824,1.999,825,1.999,826,3.17,827,2.124,828,3.17,829,2.274,835,3.633,953,2.462,962,2.714,963,2.714,1546,3.096,1547,3.096,1548,3.096,1549,3.096,1550,3.096,1551,3.096]],["title/interfaces/Response.html",[146,2.327,1125,2.712]],["body/interfaces/Response.html",[0,1.242,3,0.125,4,0.111,5,0.084,7,0.313,8,0.011,9,0.681,10,0.163,11,0.226,13,0.008,14,0.008,98,1.621,109,2.456,112,1.212,115,0.595,121,1.09,141,1.054,146,3.897,179,2.185,226,2.424,227,2.185,228,2.359,237,2.809,239,3.08,242,2.809,243,3.318,270,1.914,351,1.933,390,3.553,405,3.585,558,5.931,560,3.04,563,5.829,566,6.154,588,2.185,593,4.494,631,2.218,900,2.956,1125,3.123,1126,3.847,1226,5.594,1229,4.64,1231,3.553,1236,3.553,1243,3.847,1363,4.334,1552,3.847,1553,5.537,1554,5.537,1555,5.537,1556,5.537,1557,4.24,1558,3.553,1559,3.553,1560,4.24,1561,4.24,1562,4.24,1563,4.24,1564,4.24,1565,4.24,1566,4.24,1567,4.24]],["title/classes/Resume.html",[11,0.196,1568,2.566]],["body/classes/Resume.html",[3,0.093,4,0.083,5,0.062,7,0.267,8,0.011,10,0.155,11,0.241,13,0.007,14,0.007,52,1.01,59,1.49,77,1.758,103,1.137,115,0.444,118,1.194,121,1.272,136,2.233,140,0.667,141,1.169,142,1.556,226,1.172,270,0.926,348,2.452,351,1.581,371,2.156,405,2.334,412,2.208,420,3.539,427,1.286,451,1.831,465,1.758,477,2.629,482,1.91,504,4.141,553,0.849,690,3.161,708,2.629,744,2.943,746,2.871,757,2.727,761,3.343,764,3.651,765,5.217,767,3.96,769,3.828,770,4.436,780,2.203,781,3,783,2.203,786,3.649,929,4.433,930,4.433,931,4.028,932,4.8,1188,2.649,1315,2.868,1568,3.688,1569,2.649,1570,5.291,1571,5.548,1572,5.242,1573,3.606,1574,3.606,1575,3.606,1576,3.606,1577,3.606,1578,3.606,1579,3.606,1580,3.606,1581,3.606,1582,3.606,1583,3.606,1584,3.606,1585,3.606,1586,3.606,1587,3.606,1588,2.649,1589,3.606,1590,2.649,1591,3.161]],["title/controllers/ResumesController.html",[0,1.078,1592,3.085]],["body/controllers/ResumesController.html",[0,0.927,2,1.012,3,0.093,4,0.083,5,0.063,7,0.303,8,0.011,9,0.508,10,0.093,11,0.169,13,0.007,14,0.007,57,1.288,80,2.873,98,1.864,115,0.444,116,1.327,118,1.056,120,1.864,121,1.252,127,1.694,135,3.06,136,1.976,139,1.976,140,0.803,141,0.989,142,1.478,143,2.448,164,1.536,167,3.2,168,2.626,177,1.761,178,3.698,179,1.631,184,1.573,189,1.913,190,1.174,252,2.175,298,2.653,433,2.296,503,2.418,508,2.951,588,1.631,589,1.467,623,1.849,624,2.54,625,2.175,628,2.207,630,2.207,631,2.29,634,3.16,636,3.16,637,1.631,640,1.519,641,2.207,643,1.761,645,2.207,647,2,648,2.098,651,1.573,653,1.519,658,2.207,669,2.207,670,2.207,672,2.207,673,2.207,675,2.332,677,2.098,926,2.332,931,3.16,940,4.689,1160,2.478,1164,2.478,1167,2.478,1176,3.548,1179,2.332,1181,2.332,1490,2.872,1568,4.674,1592,3.798,1593,3.166,1594,6.119,1595,5.171,1596,3.166,1597,3.612,1598,3.612,1599,3.612,1600,3.612,1601,5.171,1602,3.612,1603,3.612,1604,3.612,1605,5.247,1606,3.612,1607,3.9,1608,3.166,1609,4.112,1610,3.612,1611,3.612,1612,3.612,1613,3.612,1614,3.612,1615,3.612,1616,3.612,1617,3.612,1618,3.612]],["title/modules/ResumesModule.html",[15,0.988,36,2.881]],["body/modules/ResumesModule.html",[2,1.937,3,0.144,4,0.128,5,0.097,7,0.327,8,0.011,9,0.785,10,0.144,11,0.261,13,0.009,14,0.009,15,1.769,17,2.265,18,2.345,19,2.519,20,2.519,21,2.345,22,3.396,23,2.519,36,5.649,41,3.124,42,2.519,43,2.429,45,2.615,51,2.831,52,1.562,140,0.764,346,2.954,348,2.265,535,3.825,688,2.954,807,2.519,901,2.719,1568,3.407,1590,5.08,1592,5.522,1607,5.317,1608,4.888,1619,4.888,1620,4.888,1621,5.576,1622,5.576,1623,4.888,1624,5.576]],["title/injectables/ResumesService.html",[112,0.806,1607,2.712]],["body/injectables/ResumesService.html",[3,0.056,4,0.05,5,0.038,7,0.279,8,0.012,9,0.306,10,0.056,11,0.102,12,1.378,13,0.005,14,0.005,52,0.608,56,1.059,57,1.573,58,1.059,59,1.272,80,2.724,88,2.846,93,1.645,95,0.706,96,0.853,98,1.525,103,1.106,106,1.377,112,0.673,113,0.774,115,0.267,116,0.9,118,0.909,120,1.525,121,1.163,135,2.69,139,1.701,140,0.819,141,0.852,142,1.272,143,2.108,144,2.898,164,2.23,184,0.946,193,1.019,226,1.14,227,1.584,228,1.059,229,1.855,241,1.645,242,1.262,252,1.475,257,1.727,262,1.651,270,2.001,271,3.117,276,1.46,291,1.151,297,2.057,347,2.944,361,2.944,371,1.714,382,1.059,383,1.203,384,1.151,412,2.252,421,2.789,422,1.904,433,2.259,435,1.943,451,1.103,453,3.292,454,1.262,460,3.872,464,1.727,468,2.562,469,2.562,476,4.008,477,1.528,483,2.337,490,3.227,494,1.727,503,2.385,504,2.406,508,2.057,519,1.327,521,1.727,530,1.904,536,1.103,540,3.292,542,3.078,543,2.821,547,2.443,551,2.941,552,2.941,593,2.037,623,1.073,624,1.855,625,1.475,631,1.874,637,1.584,640,1.475,643,1.71,651,0.946,653,0.913,688,1.151,698,1.327,700,3.094,705,1.327,706,1.262,708,0.946,709,2.143,710,2.143,711,1.327,712,1.327,713,1.327,714,1.327,715,2.695,716,0.946,717,1.327,718,2.143,719,1.262,720,2.143,722,2.143,723,1.327,725,1.327,726,1.327,727,1.327,728,1.327,730,1.327,731,1.327,732,1.327,733,1.327,734,1.327,735,1.327,736,1.327,737,3.094,738,3.094,742,2.848,744,2.151,745,1.858,746,1.922,750,1.203,752,3.094,755,1.327,757,0.981,764,1.943,767,1.858,785,1.49,873,1.727,929,1.595,930,1.595,931,3.396,940,3.837,1018,1.595,1201,1.595,1209,3.074,1360,2.406,1531,3.074,1533,1.904,1568,3.821,1570,3.074,1588,2.576,1596,3.074,1605,4.464,1607,2.264,1609,2.789,1623,1.904,1625,1.904,1626,3.507,1627,2.172,1628,2.172,1629,3.507,1630,2.172,1631,2.172,1632,2.172,1633,3.507,1634,2.172,1635,2.172,1636,2.172,1637,2.172,1638,2.172,1639,2.172,1640,3.507,1641,2.172,1642,2.172,1643,2.172,1644,2.172,1645,2.172,1646,2.172,1647,3.507,1648,6.253,1649,4.411,1650,2.172,1651,3.507,1652,2.172,1653,2.172,1654,2.172,1655,3.867,1656,2.172,1657,2.172,1658,1.904,1659,2.172,1660,2.172,1661,2.789,1662,2.172]],["title/classes/Role.html",[11,0.196,324,1.597]],["body/classes/Role.html",[3,0.09,4,0.08,5,0.06,7,0.24,8,0.011,10,0.152,11,0.235,13,0.006,14,0.006,52,0.975,59,1.87,93,1.633,95,1.637,103,1.098,106,0.947,109,1.767,110,2.388,115,0.428,118,1.154,121,1.215,136,2.159,140,0.793,141,1.151,142,1.541,210,2.768,212,1.281,226,2.107,227,2.275,229,1.464,230,3.077,232,2.768,233,2.557,241,1.633,254,2.388,255,3.799,256,2.247,258,2.768,263,2.768,264,3.341,270,0.893,276,1.453,287,3.051,290,2.247,324,2.249,325,2.247,342,2.557,348,2.404,351,1.541,371,1.707,385,2.247,390,2.557,391,3.051,397,2.768,405,2.929,412,1.983,420,3.497,451,2.557,465,2.456,477,2.578,482,1.844,483,1.844,496,3.051,497,2.557,498,2.768,508,1.414,536,1.767,553,0.819,688,1.844,708,2.578,744,2.885,746,2.578,750,1.928,757,2.673,761,3.278,762,2.673,764,3.278,765,5.147,767,3.799,769,3.437,770,3.963,780,2.127,781,2.925,783,2.127,786,3.24,807,2.275,847,3.82,881,3.699,983,2.557,984,5.157,1286,2.768,1571,4.005,1572,5.157,1663,2.557,1664,3.481,1665,3.481,1666,3.481,1667,3.481,1668,3.481,1669,3.481,1670,3.481,1671,3.481,1672,3.481,1673,3.481,1674,3.481,1675,3.051,1676,3.481,1677,3.481,1678,3.481,1679,6.485,1680,6.485,1681,3.481,1682,3.481,1683,5.036,1684,3.481,1685,3.481,1686,3.051,1687,3.051,1688,3.481,1689,3.481,1690,3.481,1691,3.481,1692,3.481]],["title/controllers/RolesController.html",[0,1.078,1693,3.085]],["body/controllers/RolesController.html",[0,0.999,2,1.09,3,0.1,4,0.089,5,0.067,7,0.309,8,0.011,9,0.548,10,0.1,11,0.182,13,0.007,14,0.007,57,1.387,80,2.971,98,1.843,115,0.479,116,1.399,118,1.044,120,1.843,121,1.269,127,1.825,135,2.955,136,1.953,139,1.953,140,0.794,141,0.978,142,1.461,143,2.362,164,1.62,167,2.888,168,2.768,177,1.897,178,3.613,179,1.758,184,1.695,185,3.334,189,2.061,190,1.265,252,2.293,324,2.964,433,2.392,503,2.386,508,3.024,588,1.758,589,1.581,623,1.668,624,2.646,625,2.293,628,2.378,630,2.378,631,2.346,634,3.332,636,3.332,637,1.758,640,1.636,641,2.378,643,1.897,645,2.378,647,2.156,648,2.26,651,1.695,653,1.636,658,2.378,669,2.378,670,2.378,672,2.378,673,2.378,675,2.513,677,2.26,941,4.805,1160,2.67,1164,2.67,1167,2.67,1174,3.095,1176,3.74,1179,2.513,1181,2.513,1490,3.095,1693,4.005,1694,3.411,1695,5.517,1696,3.411,1697,3.892,1698,3.892,1699,3.892,1700,3.892,1701,5.349,1702,3.892,1703,3.411,1704,4.336,1705,3.892,1706,3.892,1707,3.892,1708,3.892,1709,3.892,1710,3.892,1711,3.892]],["title/modules/RolesModule.html",[15,0.988,37,2.881]],["body/modules/RolesModule.html",[2,1.937,3,0.144,4,0.128,5,0.097,7,0.327,8,0.011,9,0.785,10,0.144,11,0.261,13,0.009,14,0.009,15,1.769,17,2.265,18,2.345,19,2.519,20,2.519,21,2.345,22,3.396,23,2.519,37,5.649,41,3.124,42,2.519,43,2.429,45,2.615,51,2.831,52,1.562,140,0.764,185,4.362,324,2.12,325,4.465,346,2.954,348,2.265,349,4.096,535,3.825,688,2.954,807,2.519,901,2.719,1693,5.522,1703,4.888,1712,5.576,1713,5.576,1714,5.576,1715,5.576,1716,4.888]],["title/injectables/RolesService.html",[112,0.806,185,2.225]],["body/injectables/RolesService.html",[3,0.062,4,0.055,5,0.042,7,0.294,8,0.012,9,0.34,10,0.062,11,0.113,12,1.499,13,0.005,14,0.005,15,0.568,52,0.676,56,1.177,57,1.687,58,1.177,59,1.365,80,2.841,88,2.828,93,1.132,98,1.503,103,0.761,106,1.287,112,0.732,113,0.861,115,0.297,116,0.979,118,0.906,120,1.503,121,1.146,135,2.623,139,1.694,140,0.817,141,0.848,142,1.267,143,2.007,144,2.856,164,2.257,184,1.051,185,2.021,193,1.132,199,1.558,212,0.888,226,0.784,227,1.09,228,1.861,241,1.132,252,1.604,255,1.279,262,1.406,270,2.025,271,3.285,276,1.365,291,1.279,297,1.922,324,2.57,347,2.507,361,2.849,362,3.034,371,1.365,382,1.861,383,1.337,384,1.279,385,1.558,387,2.116,394,1.919,412,2.265,433,2.367,435,2.114,453,3.612,460,4.025,461,2.464,462,2.464,466,3.034,467,1.919,468,2.748,469,2.748,476,2.748,477,1.051,483,2.507,490,3.123,503,2.374,508,2.185,519,1.475,540,3.449,542,2.979,543,2.73,547,2.621,551,3.123,552,3.123,623,1.168,624,1.604,625,1.604,631,1.963,637,1.724,640,1.604,643,1.861,651,1.051,653,1.015,698,2.332,700,2.891,705,1.475,706,1.402,708,1.051,709,2.891,710,1.475,711,1.475,712,1.475,713,1.475,714,1.475,715,2.891,716,1.051,717,1.475,718,2.332,719,1.402,720,2.332,722,2.332,723,1.475,725,1.475,726,1.475,727,1.475,728,1.475,730,1.475,731,1.475,732,1.475,733,1.475,734,1.475,735,1.475,736,1.475,737,2.891,738,2.891,742,3.055,746,1.051,750,1.337,752,3.286,755,2.332,757,1.09,901,1.177,921,1.558,941,4.02,944,2.116,995,2.803,1012,3.034,1360,1.656,1655,3.345,1661,1.919,1696,3.345,1701,4.638,1704,3.034,1716,2.116,1717,2.116,1718,2.414,1719,2.414,1720,2.414,1721,2.414,1722,2.414,1723,2.414,1724,2.414,1725,3.816,1726,2.414,1727,2.414,1728,2.414,1729,2.414,1730,2.414,1731,2.414,1732,6.227,1733,2.414,1734,3.345,1735,3.816,1736,3.816,1737,4.732,1738,3.816,1739,2.414,1740,2.414,1741,2.116,1742,2.414,1743,2.116,1744,2.414]],["title/classes/Subscriber.html",[11,0.196,1312,2.439]],["body/classes/Subscriber.html",[3,0.107,4,0.096,5,0.072,7,0.232,8,0.011,10,0.168,11,0.268,13,0.007,14,0.007,52,1.169,59,1.651,103,2.06,115,0.514,118,1.184,121,1.285,136,2.215,140,0.841,141,1.159,142,1.614,226,1.357,270,1.072,348,2.654,351,1.752,371,2.194,405,2.586,412,2.189,420,3.709,451,2.12,465,2.036,477,2.846,482,2.212,553,0.982,708,2.846,744,3.185,746,2.846,757,2.951,761,3.619,764,3.619,765,5.201,767,4.029,769,3.794,770,3.992,780,2.551,781,3.325,783,2.551,786,2.951,852,3.992,1312,3.794,1313,2.864,1364,2.864,1745,3.066,1746,4.175,1747,4.175,1748,4.175,1749,4.175,1750,3.659,1751,4.175,1752,4.175,1753,4.175,1754,4.175,1755,4.175,1756,4.175,1757,3.659,1758,3.659]],["title/controllers/SubscribersController.html",[0,1.078,1759,3.085]],["body/controllers/SubscribersController.html",[0,0.95,2,1.036,3,0.095,4,0.085,5,0.064,7,0.305,8,0.011,9,0.521,10,0.095,11,0.173,13,0.007,14,0.007,57,1.319,80,2.905,98,1.879,115,0.455,116,1.351,118,1.065,120,1.879,121,1.214,127,1.735,135,3.012,136,1.992,139,1.992,140,0.809,141,0.997,142,1.49,143,2.377,167,3.244,168,2.672,177,1.804,178,3.533,179,1.672,184,1.612,189,1.96,190,1.202,252,2.213,298,2.718,433,2.328,503,2.041,508,2.975,588,1.672,589,1.503,623,1.874,624,2.575,625,2.213,628,2.261,630,2.261,631,2.308,636,3.215,637,1.672,640,1.556,641,2.261,647,2.915,648,2.149,651,1.612,653,1.556,658,2.261,669,2.261,670,2.261,672,2.261,673,2.261,677,2.149,882,2.718,950,4.727,1063,6.317,1164,2.538,1179,2.389,1181,2.389,1312,4.714,1325,3.243,1355,3.741,1759,3.865,1760,3.243,1761,4.612,1762,3.243,1763,3.7,1764,3.7,1765,3.7,1766,3.7,1767,3.7,1768,3.243,1769,3.7,1770,3.7,1771,3.7,1772,3.7,1773,3.243,1774,5.023,1775,3.7,1776,3.7,1777,3.243,1778,4.184,1779,4.869,1780,3.7,1781,3.7,1782,3.7,1783,3.7,1784,3.7,1785,3.7,1786,3.7,1787,3.7,1788,3.7,1789,3.7,1790,3.7,1791,3.7]],["title/modules/SubscribersModule.html",[15,0.988,38,2.881]],["body/modules/SubscribersModule.html",[2,1.937,3,0.144,4,0.128,5,0.097,7,0.333,8,0.011,9,0.785,10,0.144,11,0.261,13,0.009,14,0.009,15,1.769,17,2.265,18,2.345,19,2.519,20,2.519,21,2.345,22,3.396,23,2.519,38,5.649,41,3.124,42,2.519,43,2.429,45,2.615,51,2.831,52,1.562,140,0.616,346,2.954,348,2.265,1312,3.239,1355,5.032,1363,3.825,1364,4.744,1384,4.888,1759,5.522,1777,4.888,1792,5.576,1793,5.576,1794,5.576,1795,5.576,1796,4.888]],["title/injectables/SubscribersService.html",[112,0.806,1355,2.566]],["body/injectables/SubscribersService.html",[3,0.063,4,0.056,5,0.043,7,0.29,8,0.012,9,0.347,10,0.063,11,0.115,12,1.523,13,0.005,14,0.005,52,0.69,56,1.201,57,1.709,58,1.201,59,1.383,80,2.863,88,2.914,93,1.155,98,1.612,103,1.222,106,1.055,112,0.744,113,0.878,115,0.303,116,0.995,118,0.956,120,1.612,121,1.086,135,2.775,139,1.788,140,0.822,141,0.895,142,1.337,143,2.068,144,3.063,164,2.208,184,1.073,193,1.155,226,0.8,227,1.751,241,1.155,252,2.016,262,1.424,270,2.046,271,3.303,276,1.118,286,1.69,291,1.305,297,1.575,347,2.54,361,2.881,371,2.068,382,1.89,383,1.364,384,1.305,412,2.104,419,1.59,433,2.388,435,2.148,453,2.148,454,1.431,460,3.938,461,1.59,462,1.59,468,2.785,469,2.785,476,2.785,477,1.073,483,2.54,490,3.435,503,2.194,508,2.209,519,1.505,540,3.771,542,3.276,543,3.003,547,2.656,551,3.435,552,3.435,623,1.186,624,1.63,625,1.63,631,1.98,637,1.751,640,1.63,651,1.073,653,1.036,698,2.369,700,2.93,705,1.505,706,1.431,708,1.073,709,4.16,710,1.505,711,1.505,712,1.505,713,1.505,714,1.505,715,2.93,716,1.073,717,1.505,718,2.369,719,1.431,720,2.369,722,2.369,723,1.505,725,1.505,726,1.505,727,1.505,728,1.505,730,1.505,731,1.505,732,1.505,733,1.505,734,1.505,735,1.505,736,1.505,737,2.369,738,2.369,742,2.503,746,1.073,750,1.364,752,3.323,755,1.505,757,1.113,852,2.369,950,4.055,1312,3.817,1313,1.69,1318,2.159,1319,3.398,1326,2.159,1355,2.369,1687,2.159,1734,3.398,1761,3.398,1762,3.398,1768,3.398,1773,3.398,1774,4.309,1778,3.083,1796,2.159,1797,2.159,1798,2.463,1799,2.463,1800,2.463,1801,2.463,1802,2.463,1803,2.463,1804,2.463,1805,2.463,1806,3.877,1807,2.463,1808,2.463,1809,2.463,1810,2.463,1811,2.463,1812,2.463,1813,3.877,1814,5.914,1815,3.877,1816,3.877,1817,2.463,1818,2.463,1819,2.463,1820,2.463,1821,2.463]],["title/injectables/TransformInterceptor.html",[112,0.806,1559,3.085]],["body/injectables/TransformInterceptor.html",[0,1.249,3,0.125,4,0.111,5,0.084,7,0.314,8,0.011,9,0.685,10,0.163,11,0.227,12,1.912,13,0.008,14,0.008,98,1.628,109,2.471,112,1.217,113,1.735,115,0.599,116,1.628,118,0.922,120,1.249,121,0.754,139,1.725,140,0.701,141,0.864,142,1.291,146,3.513,179,2.198,226,2.061,227,2.198,228,2.373,237,2.826,239,3.092,242,2.826,243,3.338,270,1.919,390,3.574,405,2.865,558,3.87,560,2.492,563,5.182,566,5.044,588,2.198,593,3.684,631,1.534,900,2.974,1125,3.142,1225,4.266,1226,6.322,1229,5.491,1231,4.658,1236,3.574,1243,3.87,1363,4.351,1552,3.87,1553,5.559,1554,6.553,1555,6.185,1556,5.559,1557,4.266,1558,3.574,1559,4.658,1560,6.185,1561,6.185,1562,4.266,1563,4.266,1564,4.266,1565,4.266,1566,4.266,1567,4.266,1822,4.866,1823,4.866,1824,4.866]],["title/classes/UpdateCloudinaryDto.html",[11,0.196,1825,3.34]],["body/classes/UpdateCloudinaryDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,830,4.706,832,5.095,1825,5.98,1826,5.616,1827,7.52,1828,3.721,1829,6.407]],["title/classes/UpdateCompanyDto.html",[11,0.196,644,2.881]],["body/classes/UpdateCompanyDto.html",[3,0.158,4,0.14,5,0.106,7,0.297,8,0.011,10,0.158,11,0.287,13,0.009,14,0.009,95,1.992,96,2.408,106,1.667,110,4.205,142,1.247,190,1.992,228,2.989,233,4.502,239,2.989,254,4.205,262,1.821,553,1.442,555,3.309,623,1.876,627,4.73,644,5.026,652,4.874,834,4.874,1828,4.255,1830,5.373,1831,7.326,1832,5.373,1833,6.129,1834,6.129,1835,6.129]],["title/classes/UpdateFileDto.html",[11,0.196,1045,2.881]],["body/classes/UpdateFileDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,840,4.395,842,5.095,1045,5.159,1057,5.095,1828,3.721,1836,5.616,1837,7.52]],["title/classes/UpdateJobDto.html",[11,0.196,1166,2.881]],["body/classes/UpdateJobDto.html",[3,0.157,4,0.14,5,0.106,7,0.296,8,0.011,10,0.157,11,0.285,13,0.009,14,0.009,95,1.982,106,1.659,110,4.183,142,1.241,190,1.982,226,2.373,227,2.755,229,2.564,233,4.479,446,3.542,499,3.726,553,1.435,555,3.299,623,1.866,843,3.726,845,4.479,1150,4.85,1166,5.01,1171,4.85,1515,4.85,1828,4.242,1832,5.346,1838,5.346,1839,7.304,1840,6.098,1841,6.098,1842,6.098]],["title/classes/UpdatePermissionDto.html",[11,0.196,1493,2.881]],["body/classes/UpdatePermissionDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,918,4.136,920,5.095,1493,5.159,1497,5.095,1828,3.721,1843,5.616,1844,7.52]],["title/classes/UpdateResumeDto.html",[11,0.196,1605,2.881]],["body/classes/UpdateResumeDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,926,4.136,928,4.706,1605,5.159,1609,5.095,1828,3.721,1845,5.616,1846,7.52]],["title/classes/UpdateRoleDto.html",[11,0.196,1701,2.881]],["body/classes/UpdateRoleDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,941,4.136,943,5.095,1701,5.159,1704,5.095,1828,3.721,1847,5.616,1848,7.52]],["title/classes/UpdateSubscriberDto.html",[11,0.196,1774,2.881]],["body/classes/UpdateSubscriberDto.html",[3,0.165,4,0.147,5,0.111,7,0.304,8,0.011,10,0.165,11,0.299,13,0.01,14,0.01,190,2.082,553,1.508,555,3.397,623,1.96,950,4.136,952,5.095,1774,5.159,1778,5.095,1828,3.721,1849,5.616,1850,7.52]],["title/classes/UpdateUserDto.html",[11,0.196,1851,2.881]],["body/classes/UpdateUserDto.html",[3,0.14,4,0.124,5,0.094,7,0.301,8,0.011,10,0.14,11,0.318,13,0.009,14,0.009,94,3.985,95,2.209,106,1.476,109,3.452,110,3.722,121,0.841,143,1.565,182,3.503,190,1.763,230,3.315,254,5.094,262,2.206,270,1.745,412,1.818,433,2.062,452,5.905,454,3.151,455,3.985,479,3.503,503,1.66,519,4.154,553,1.277,555,3.071,560,2.131,623,1.66,788,3.503,789,3.189,803,2.451,806,3.005,808,2.544,811,4.312,1018,4.994,1515,5.407,1658,5.959,1851,5.094,1852,4.756,1853,6.799,1854,5.425,1855,5.425,1856,7.425,1857,5.425,1858,5.425]],["title/classes/User.html",[11,0.196,143,1.211]],["body/classes/User.html",[3,0.085,4,0.075,5,0.057,7,0.232,8,0.011,10,0.148,11,0.268,13,0.006,14,0.006,52,0.922,59,1.653,95,1.069,96,1.293,103,2.217,106,0.895,109,2.454,115,0.405,118,1.192,121,1.291,136,2.23,140,0.824,141,1.161,142,1.517,143,1.94,212,1.779,226,1.571,229,1.384,239,1.605,268,2.267,270,0.845,276,1.653,293,2.417,300,4.209,322,2.125,324,2.4,326,2.258,342,2.417,348,2.733,349,2.417,351,1.479,371,2.028,380,2.125,405,2.184,412,2.116,420,3.636,427,2.043,446,1.911,451,2.454,465,3.28,477,2.751,479,2.125,482,2.561,536,1.671,537,1.823,553,0.774,631,1.524,708,2.496,744,2.794,746,2.496,750,1.823,757,2.588,760,3.328,761,3.174,764,3.498,765,5.209,767,3.726,769,3.668,770,4.11,780,2.011,781,3.328,782,2.885,783,2.954,784,3.316,785,3.316,786,3.284,811,3.174,817,3.699,819,3.699,1150,2.617,1571,3.844,1572,3.844,1750,4.237,1757,4.237,1859,2.417,1860,3.291,1861,3.291,1862,3.291,1863,3.291,1864,3.291,1865,3.291,1866,3.291,1867,3.291,1868,3.291,1869,3.291,1870,3.291,1871,3.291,1872,3.291,1873,3.291,1874,3.291,1875,3.291,1876,2.885]],["title/classes/UserLoginDto.html",[11,0.196,180,2.566]],["body/classes/UserLoginDto.html",[3,0.089,4,0.08,5,0.06,7,0.262,8,0.011,10,0.167,11,0.335,13,0.006,14,0.006,59,1.449,95,1.92,96,1.364,106,2.201,115,0.427,118,0.731,121,1.281,136,1.367,140,0.653,141,0.936,162,2.016,180,3.071,181,3.431,190,1.128,212,1.85,238,1.923,256,3.245,262,2.44,268,1.628,276,1.982,285,3.071,294,3.431,297,2.042,324,1.91,351,1.538,371,2.067,412,1.163,427,2.45,446,2.919,503,1.062,522,3.272,536,1.762,537,1.923,553,0.817,560,3.308,589,2.911,631,1.585,716,2.189,760,2.919,762,2.925,763,2.016,786,2.27,788,2.241,789,3.916,793,4.339,794,2.121,795,4.053,796,4.339,797,3.071,798,3.245,799,3.245,800,3.61,801,2.549,802,3.245,803,1.568,804,2.549,805,3.245,806,1.923,807,2.27,808,3.796,809,3.691,810,3.691,811,4.094,812,5.263,813,3.448,814,3.691,815,3.245,816,3.245,817,3.245,818,3.691,819,3.245,820,2.121,821,2.241,822,2.241,823,2.241,824,2.241,825,2.241,826,3.448,827,3.448,828,4.715,829,3.691,1877,5.026,1878,3.471,1879,3.471]],["title/controllers/UsersController.html",[0,1.078,1880,3.085]],["body/controllers/UsersController.html",[0,0.989,2,1.079,3,0.099,4,0.088,5,0.067,7,0.309,8,0.011,9,0.543,10,0.099,11,0.18,13,0.007,14,0.007,57,1.374,80,2.958,98,1.836,115,0.474,116,1.39,118,1.04,120,1.836,121,1.267,127,1.808,135,2.949,136,1.946,139,1.946,140,0.791,141,0.975,142,1.456,143,2.458,164,1.609,167,3.317,168,2.75,176,3,177,1.879,178,3.597,179,1.741,182,3.496,189,2.042,190,1.252,358,3.468,433,2.38,503,2.452,508,3.014,588,1.741,589,1.566,623,1.657,624,2.633,625,2.277,628,2.355,630,2.355,631,2.339,634,3.309,636,3.309,640,1.621,645,2.355,647,2.135,648,2.239,651,1.679,653,1.621,658,2.355,669,2.355,670,2.355,675,2.488,677,2.239,806,4.11,1160,2.644,1167,2.644,1174,3.065,1176,3.715,1179,2.488,1181,2.488,1483,4.599,1851,5.09,1880,3.978,1881,3.378,1882,4.747,1883,3.378,1884,3.854,1885,3.854,1886,3.378,1887,3.854,1888,3.854,1889,3.854,1890,3.854,1891,3.378,1892,3.854,1893,3.378,1894,3.378,1895,3.854,1896,3.854,1897,3.854,1898,3.854,1899,3.854,1900,3.854,1901,3.854,1902,3.854,1903,3.854,1904,3.854,1905,3.854]],["title/modules/UsersModule.html",[15,0.988,39,2.712]],["body/modules/UsersModule.html",[2,1.824,3,0.131,4,0.116,5,0.088,7,0.325,8,0.011,9,0.714,10,0.131,11,0.237,13,0.008,14,0.008,15,1.924,17,2.06,18,2.132,19,2.291,20,2.291,21,2.132,22,3.251,23,3.251,39,5.278,41,2.942,42,2.291,43,2.209,45,2.378,51,2.575,52,1.42,59,1.463,95,1.648,96,1.992,106,1.772,107,3.783,109,2.575,111,3.479,140,0.56,143,1.463,212,1.866,239,2.473,241,3.055,245,3.099,276,1.879,322,4.206,346,2.686,347,2.686,348,2.06,358,4.729,396,3.099,480,3.725,483,3.451,685,4.445,688,2.686,1271,4.445,1286,4.033,1483,4.784,1540,4.033,1880,5.286,1893,4.445,1906,4.445,1907,4.445,1908,5.071,1909,5.071,1910,5.071,1911,4.445,1912,5.071,1913,5.071,1914,5.071]],["title/injectables/UsersService.html",[112,0.806,358,2.327]],["body/injectables/UsersService.html",[3,0.048,4,0.043,5,0.032,7,0.272,8,0.012,9,0.263,10,0.048,11,0.087,12,1.217,13,0.004,14,0.004,52,0.523,56,1.51,57,1.648,58,1.51,59,1.333,80,2.552,88,2.806,93,0.875,94,1.371,95,1.006,96,0.733,98,1.684,106,1.08,107,1.799,111,2.125,112,0.594,113,0.665,115,0.23,116,0.795,118,0.979,120,1.574,121,1.258,135,2.414,139,1.73,140,0.799,141,0.867,142,1.295,143,2.056,144,2.696,149,1.484,164,2.202,182,2,193,0.875,212,0.687,228,0.91,229,0.785,235,4.943,236,4.364,237,1.084,239,0.91,241,0.875,242,1.084,245,1.14,252,0.785,253,1.484,257,2.463,262,1.74,270,2.052,271,3.267,276,1.689,277,1.371,283,1.371,291,0.988,297,2.083,300,4.061,324,1.177,347,2.448,351,0.948,358,1.715,360,2.463,361,2.716,371,2.022,373,2.125,374,1.799,380,2,382,2.5,383,1.034,384,0.988,388,1.484,393,1.636,396,1.14,405,1.399,412,2.255,433,2.418,435,2.199,453,2.84,454,1.084,459,4.846,460,3.926,461,2,462,2,463,2.715,464,2.463,465,1.51,467,3.675,468,2.684,469,2.684,472,4.846,475,1.636,476,2.684,477,0.813,482,0.988,490,2.684,503,2.242,508,1.878,529,1.484,540,3.396,542,2.56,543,2.347,547,2.56,548,3.48,551,2.684,552,2.684,623,0.948,624,1.302,625,1.302,631,1.743,640,1.302,651,0.813,653,0.785,688,0.988,698,1.892,700,2.426,705,1.14,706,1.084,708,1.729,709,2.824,710,1.14,711,1.14,712,1.14,713,1.14,714,1.14,715,2.426,716,0.813,717,1.14,718,1.892,719,1.084,720,1.892,722,1.892,723,1.14,725,1.14,726,1.14,727,1.14,728,1.14,730,1.14,731,1.14,732,1.14,733,1.14,734,1.14,735,1.14,736,1.14,737,2.824,738,2.426,744,1.51,745,0.988,746,0.813,752,2.426,755,1.892,757,0.843,761,1.034,785,1.28,806,3.063,811,2.56,813,1.28,988,1.636,1012,2.463,1018,1.371,1023,1.636,1201,1.371,1360,2.125,1538,1.636,1540,2.463,1661,3.675,1741,1.636,1743,1.636,1851,3.793,1882,2.715,1883,2.715,1886,2.715,1891,2.715,1894,1.636,1911,1.636,1915,1.636,1916,3.97,1917,3.97,1918,3.097,1919,3.097,1920,3.097,1921,1.866,1922,3.097,1923,1.866,1924,1.866,1925,1.866,1926,1.866,1927,3.097,1928,1.866,1929,3.097,1930,1.866,1931,1.866,1932,1.866,1933,1.866,1934,1.866,1935,1.866,1936,1.866,1937,1.866,1938,1.636,1939,3.097,1940,1.866,1941,3.097,1942,1.866,1943,1.866,1944,3.097,1945,1.866,1946,1.866,1947,1.866,1948,1.866,1949,1.866,1950,1.866,1951,3.97,1952,1.866,1953,1.866,1954,5.858,1955,3.97,1956,1.866,1957,1.866,1958,1.866,1959,1.866,1960,1.866,1961,3.097,1962,1.866,1963,1.866,1964,1.866,1965,1.866,1966,1.866,1967,1.866]],["title/coverage.html",[1968,4.571]],["body/coverage.html",[0,1.954,1,1.789,5,0.067,6,2.135,8,0.011,11,0.394,13,0.005,14,0.005,21,1.024,40,1.671,77,1.188,112,1.536,114,2.135,125,1.789,126,2.135,135,0.896,141,0.951,143,0.702,146,1.349,162,1.415,164,0.724,171,1.789,174,1.488,176,1.349,177,1.188,178,1.29,180,1.488,181,3.139,185,1.29,204,1.789,264,1.1,310,1.671,311,1.671,322,1.573,324,0.926,325,1.573,350,2.135,358,1.349,380,1.573,382,1.188,385,1.573,386,1.789,427,1.37,554,2.135,569,1.488,570,2.135,571,1.789,572,2.135,580,1.573,584,1.937,600,1.937,603,2.135,608,1.937,620,1.789,621,2.135,627,1.573,644,1.671,649,1.573,654,1.789,683,1.789,691,2.135,704,1.789,716,3.859,759,3.496,788,3.798,806,1.349,830,1.789,831,2.135,832,3.056,833,2.135,834,3.056,840,1.671,841,2.135,842,3.056,843,1.488,844,3.056,845,3.496,899,1.789,918,1.573,919,2.135,920,3.056,926,1.573,927,3.056,928,3.496,940,1.573,941,1.573,942,2.135,943,3.056,950,1.573,951,2.135,952,3.056,972,1.789,973,2.135,975,1.573,982,1.671,985,2.135,994,1.671,995,1.789,996,1.937,1038,2.135,1039,1.789,1040,2.135,1045,1.671,1050,1.789,1055,1.573,1058,1.937,1077,1.789,1081,2.135,1092,1.789,1093,2.135,1107,2.135,1125,2.481,1127,2.135,1130,3.496,1149,1.671,1153,1.671,1155,1.789,1156,2.135,1166,1.671,1169,1.488,1189,2.135,1198,1.937,1220,2.135,1221,3.056,1238,1.937,1239,1.937,1272,2.135,1291,2.135,1293,2.135,1300,1.789,1301,2.135,1308,1.573,1312,1.415,1313,1.671,1355,1.488,1364,1.671,1385,2.135,1386,2.135,1464,2.135,1470,3.496,1485,1.789,1486,2.135,1493,1.671,1495,1.573,1510,2.135,1552,3.056,1558,1.789,1559,1.789,1568,1.488,1569,3.496,1588,1.789,1590,1.789,1592,1.789,1593,2.135,1605,1.671,1607,1.573,1625,2.135,1663,3.496,1693,1.789,1694,2.135,1701,1.671,1717,2.135,1745,3.496,1759,1.789,1760,2.135,1774,1.671,1779,1.937,1797,2.135,1825,1.937,1826,2.135,1830,2.135,1836,2.135,1838,2.135,1843,2.135,1845,2.135,1847,2.135,1849,2.135,1851,1.671,1852,2.135,1859,3.496,1880,1.789,1881,2.135,1915,2.135,1968,1.937,1969,2.135,1970,2.436,1971,2.436,1972,8.592,1973,6.782,1974,6.98,1975,4.76,1976,6.251,1977,5.883,1978,2.135,1979,2.135,1980,6.782,1981,2.135,1982,8.007,1983,2.135,1984,2.135,1985,6.98,1986,4.76,1987,5.883,1988,4.172,1989,5.736,1990,2.135,1991,2.436,1992,2.135,1993,2.436,1994,2.436,1995,2.436,1996,2.436,1997,2.436,1998,2.436,1999,2.436]],["title/dependencies.html",[18,2.126,2000,3.068]],["body/dependencies.html",[8,0.011,9,0.729,11,0.309,13,0.009,14,0.009,18,2.178,50,3.165,52,1.451,56,2.526,57,1.847,58,2.526,59,1.904,71,4.12,73,4.12,76,4.12,172,5.251,183,2.869,190,1.683,207,3.554,225,4.986,291,2.744,315,3.345,318,4.12,320,4.12,327,3.165,436,4.541,508,2.105,569,3.165,583,3.554,609,4.541,706,3.009,794,3.165,803,2.34,1100,4.12,1236,3.805,1240,4.12,1311,4.12,1363,3.554,1521,4.541,1938,4.541,2001,5.18,2002,7.269,2003,5.18,2004,6.603,2005,5.18,2006,5.18,2007,5.18,2008,5.18,2009,5.18,2010,5.18,2011,5.18,2012,5.18,2013,5.18,2014,5.18,2015,5.18,2016,5.18,2017,5.18,2018,5.18,2019,5.18,2020,5.18,2021,5.18,2022,5.18,2023,5.18,2024,5.18,2025,5.18,2026,5.18,2027,5.18,2028,5.18,2029,5.18,2030,5.18,2031,5.18,2032,5.18,2033,5.18,2034,5.18,2035,5.18,2036,5.18,2037,5.18]],["title/miscellaneous/functions.html",[2038,2.26,2039,4.432]],["body/miscellaneous/functions.html",[8,0.01,13,0.01,14,0.01,21,3.425,115,0.828,1992,5.898,2038,4.344,2039,5.898,2040,6.729]],["title/index.html",[115,0.431,2041,3.5,2042,3.5]],["body/index.html",[4,0.094,8,0.011,13,0.007,14,0.007,43,3.291,77,2.749,124,5.66,275,3.579,327,4.821,431,3.247,762,1.844,826,4.776,893,3.247,910,4.878,1013,3.579,1090,3.579,1157,2.999,1249,3.579,1322,6.787,1342,5.537,1359,3.247,1419,3.579,1686,3.579,1968,3.247,1969,4.941,2043,4.083,2044,4.083,2045,6.457,2046,5.637,2047,4.083,2048,4.083,2049,4.083,2050,5.637,2051,4.083,2052,4.083,2053,6.963,2054,4.083,2055,7.89,2056,4.083,2057,4.083,2058,4.083,2059,5.637,2060,4.083,2061,5.637,2062,4.083,2063,6.457,2064,4.083,2065,5.637,2066,4.083,2067,4.083,2068,4.083,2069,4.083,2070,6.963,2071,7.555,2072,4.083,2073,5.637,2074,4.083,2075,4.083,2076,4.083,2077,4.083,2078,4.083,2079,5.637,2080,6.963,2081,4.083,2082,5.637,2083,4.083,2084,5.637,2085,7.555,2086,6.963,2087,4.083,2088,5.637,2089,4.083,2090,4.083,2091,4.083,2092,4.083,2093,6.963,2094,4.083,2095,4.083,2096,4.083,2097,4.083,2098,5.637,2099,4.083,2100,4.083,2101,4.083,2102,4.083,2103,4.083,2104,5.637,2105,4.083,2106,4.083,2107,4.083,2108,5.637,2109,4.083,2110,4.083,2111,5.637,2112,4.083,2113,4.083,2114,4.083,2115,4.083,2116,4.083,2117,4.083,2118,4.083,2119,4.083,2120,5.637,2121,4.083,2122,3.579,2123,4.083,2124,4.083,2125,6.457,2126,4.083,2127,4.083,2128,4.083,2129,4.083,2130,4.083,2131,5.637,2132,4.083,2133,4.083,2134,4.083,2135,4.083,2136,4.083,2137,5.637,2138,5.637,2139,4.083,2140,4.083,2141,4.083,2142,4.083,2143,4.083,2144,4.083,2145,4.083,2146,4.083,2147,4.083,2148,4.083,2149,3.579,2150,4.083,2151,4.083,2152,4.083,2153,4.083,2154,4.083,2155,4.083,2156,3.579]],["title/modules.html",[17,2.335]],["body/modules.html",[8,0.009,13,0.009,14,0.009,16,4.213,17,2.33,27,3.934,28,3.934,29,3.934,30,3.934,31,3.934,32,3.934,33,3.934,34,3.934,35,3.934,36,3.934,37,3.934,38,3.934,39,3.703,1342,6.926,2122,5.027,2157,8.71,2158,8.71,2159,8.737,2160,5.735]],["title/overview.html",[2161,5.039]],["body/overview.html",[2,1.115,8,0.011,13,0.007,14,0.007,15,0.937,16,6.411,17,1.618,18,1.674,19,1.799,20,1.799,21,1.674,22,1.799,23,1.799,24,3.49,25,3.49,26,3.49,27,5.719,28,5.142,29,4.967,30,5.275,31,4.967,32,4.371,33,4.967,34,5.464,35,4.967,36,4.967,37,4.967,38,4.967,39,4.965,40,4.371,41,2.503,42,1.799,43,1.734,113,1.42,174,4.699,185,3.649,306,3.49,307,3.49,308,3.49,310,4.371,311,4.371,358,4.344,396,2.433,553,0.937,580,4.965,596,3.49,597,3.49,598,3.49,649,4.114,679,3.49,680,3.49,975,4.114,978,3.49,979,3.49,1055,4.114,1072,3.49,1073,3.49,1126,3.166,1169,4.209,1183,3.49,1184,3.49,1308,4.114,1353,3.49,1354,3.49,1355,4.209,1495,4.114,1505,3.49,1506,3.49,1607,4.114,1619,3.49,1620,3.49,1906,3.49,1907,3.49,2161,3.49,2162,5.54,2163,3.982,2164,3.982]],["title/properties.html",[351,1.547,2000,3.068]],["body/properties.html",[8,0.011,13,0.01,14,0.01,351,2.042,762,3.014,2149,5.849,2156,5.849,2165,6.673,2166,6.673,2167,6.673]],["title/miscellaneous/typealiases.html",[2038,2.26,2168,5.056]],["body/miscellaneous/typealiases.html",[8,0.01,13,0.009,14,0.009,115,0.745,141,0.824,380,4.694,385,4.694,608,5.782,704,5.34,759,4.445,781,4.932,994,4.988,1130,4.445,1149,4.988,1313,4.988,1470,4.445,1569,4.445,1588,5.34,1663,4.445,1745,4.445,1859,4.445,1978,5.305,1979,6.373,2038,3.908,2169,6.052,2170,6.052,2171,5.305,2172,5.305,2173,5.305,2174,5.305,2175,5.305,2176,5.305,2177,5.305,2178,6.052,2179,6.052]],["title/miscellaneous/variables.html",[2038,2.26,2180,4.432]],["body/miscellaneous/variables.html",[5,0.055,8,0.011,13,0.003,14,0.003,15,1.823,49,1.938,57,2.212,77,2.092,87,1.012,88,0.507,98,0.814,99,1.012,103,1,115,0.169,121,0.783,140,0.856,141,0.794,143,1.457,144,0.672,151,1.095,160,1.012,164,0.409,168,2.717,176,1.325,177,1.167,178,1.267,255,2.273,264,1.938,270,0.814,322,1.545,324,1.44,325,1.545,371,2.244,373,4.877,374,4.129,386,1.757,396,1.462,412,2.808,417,6.789,420,0.672,427,1.53,433,1.788,477,3.374,503,1.44,560,0.94,569,0.842,584,1.903,593,0.8,600,1.903,622,3.412,623,1.44,634,2.875,647,2.606,683,1.757,708,3.374,716,3.374,744,3.777,745,4.122,746,0.6,759,1.012,761,4.29,764,4.29,787,1.207,901,3.777,921,5.001,931,0.842,982,1.641,995,1.757,996,1.903,1041,1.095,1048,1.207,1116,1.207,1130,1.012,1153,1.641,1154,1.207,1157,3.151,1198,1.903,1229,1.012,1238,1.903,1239,1.903,1241,1.207,1364,1.641,1391,1.207,1423,1.207,1425,2.097,1429,1.207,1442,1.207,1443,1.207,1444,1.207,1445,1.207,1446,1.207,1447,1.207,1448,1.207,1449,1.207,1450,1.207,1451,1.207,1452,1.207,1453,1.207,1454,1.207,1455,1.207,1457,1.207,1459,1.207,1460,1.207,1461,1.207,1462,2.097,1470,1.012,1483,3.151,1484,1.207,1558,2.33,1568,2.621,1569,1.012,1590,1.757,1591,1.207,1594,4.43,1663,1.012,1675,1.207,1695,4.124,1745,1.012,1758,1.207,1779,1.903,1859,1.012,1876,1.207,1981,1.207,1983,1.207,1984,2.097,1988,1.207,1989,1.207,1990,1.207,2038,0.889,2171,1.207,2172,1.207,2173,1.207,2174,1.207,2175,1.207,2176,1.207,2177,1.207,2180,1.207,2181,3.172,2182,1.377,2183,1.377,2184,5.054,2185,1.377,2186,1.377,2187,1.377,2188,2.393,2189,7.781,2190,7.781,2191,8.37,2192,8.37,2193,1.377,2194,1.377,2195,7.745,2196,1.377,2197,2.393,2198,1.377,2199,3.172,2200,2.393,2201,1.377,2202,2.393,2203,1.377,2204,2.393,2205,1.377,2206,2.393,2207,2.393,2208,1.377,2209,3.172,2210,2.393,2211,1.377,2212,2.393,2213,1.377,2214,2.393,2215,1.377,2216,2.393,2217,1.377,2218,1.377,2219,1.377,2220,2.393,2221,1.377,2222,2.393,2223,2.393,2224,1.377,2225,3.172,2226,2.393,2227,1.377,2228,2.393,2229,1.377,2230,2.393,2231,1.377,2232,2.393,2233,1.377,2234,2.393,2235,2.393,2236,1.377,2237,4.705,2238,2.393,2239,1.377,2240,3.172,2241,2.393,2242,1.377,2243,2.393,2244,1.377,2245,2.393,2246,1.377,2247,1.377,2248,2.393,2249,1.377,2250,2.393,2251,2.393,2252,1.377,2253,2.393,2254,1.377,2255,3.172,2256,2.393,2257,1.377,2258,2.393,2259,1.377,2260,2.393,2261,1.377,2262,2.393,2263,2.393,2264,1.377,2265,2.393,2266,1.377,2267,3.172,2268,2.393,2269,1.377,2270,2.393,2271,1.377,2272,2.393,2273,1.377,2274,1.377,2275,1.377,2276,1.377,2277,1.377,2278,1.377,2279,1.377,2280,1.377,2281,1.377,2282,1.377,2283,1.377,2284,1.377,2285,1.377,2286,1.377,2287,1.377,2288,1.377,2289,1.377,2290,1.377,2291,1.377,2292,1.377,2293,1.377,2294,1.377,2295,1.377,2296,1.377,2297,1.377,2298,1.377,2299,1.377,2300,1.377,2301,1.377,2302,1.377,2303,1.377,2304,1.377,2305,1.377,2306,1.377,2307,1.377,2308,1.377,2309,1.377,2310,1.377,2311,1.377]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":716,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2166,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["0.14.2",{"_index":2017,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2016,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":453,"title":{"classes/Company-1.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["1.0.38",{"_index":2013,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":2020,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":719,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["1000",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":1462,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2008,"title":{},"body":{"dependencies.html":{}}}],["11.1.5",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":829,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["14",{"_index":2162,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574798358.jpg",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574900663.jpg",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574998397.png",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575062887.png",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575180007.png",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575233601.jpg",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575294231.png",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575455267.jpg",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575523674.jpg",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686706116042.png",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1d",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.2",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2027,"title":{},"body":{"dependencies.html":{}}}],["2.7.0",{"_index":2018,"title":{},"body":{"dependencies.html":{}}}],["2.lấy",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["20",{"_index":2163,"title":{},"body":{"overview.html":{}}}],["200",{"_index":565,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["2023",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2mb",{"_index":1463,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["3",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["3.0.2",{"_index":2015,"title":{},"body":{"dependencies.html":{}}}],["34",{"_index":2164,"title":{},"body":{"overview.html":{}}}],["4",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.1",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["4.3.2",{"_index":2021,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":2023,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":564,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["401",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1306,"title":{},"body":{"controllers/MailController.html":{}}}],["5.4.0",{"_index":2014,"title":{},"body":{"dependencies.html":{}}}],["5:00",{"_index":1323,"title":{},"body":{"controllers/MailController.html":{}}}],["6.0.0",{"_index":2009,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2011,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["60000",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["648ab415f4328bd3153ee211",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["686b45a2619a849333e34325",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":1026,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.5",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["7.8.2",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["8.16.4",{"_index":2026,"title":{},"body":{"dependencies.html":{}}}],["8.6",{"_index":749,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["96",{"_index":1031,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id,name,email,role",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["action",{"_index":1088,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1379,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":1019,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["address",{"_index":760,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["adds",{"_index":1089,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":1012,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":1023,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":995,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":1020,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":1029,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":817,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["alias",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2169,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedfiletypes",{"_index":1443,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["allowedfiletypes.includes(fileextension",{"_index":1457,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["allowing",{"_index":2099,"title":{},"body":{"index.html":{}}}],["already",{"_index":1036,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["amazing",{"_index":2143,"title":{},"body":{"index.html":{}}}],["amzon",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ang",{"_index":1540,"title":{},"body":{"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_secret",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":921,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":793,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":656,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":1060,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":1172,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1316,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1498,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1610,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1705,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1780,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1895,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1347,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apple",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":2071,"title":{},"body":{"index.html":{}}}],["applications",{"_index":2050,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":40,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":705,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(query",{"_index":712,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["args",{"_index":903,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["args.object",{"_index":905,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["args.value",{"_index":913,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["arguments",{"_index":1250,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["argumentshost",{"_index":1111,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":914,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["array'})@ismongoid({each",{"_index":948,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["array'})@isstring({each",{"_index":880,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["async",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["attack",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["au",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1221,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":1227,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:19",{"_index":1230,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:31",{"_index":1233,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":125,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":1237,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1222,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1292,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":27,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2149,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":174,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":2160,"title":{},"body":{"modules.html":{}}}],["await",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":2088,"title":{},"body":{"index.html":{}}}],["b",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{}}}],["back_end",{"_index":1252,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["backers",{"_index":2144,"title":{},"body":{"index.html":{}}}],["badrequestcustom",{"_index":382,"title":{"classes/BadRequestCustom.html":{}},"body":{"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["badrequestcustom('công",{"_index":754,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestcustom('email",{"_index":1808,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestcustom('id",{"_index":738,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestcustom('job",{"_index":1218,"title":{},"body":{"injectables/JobsService.html":{}}}],["badrequestcustom('không",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestcustom('người",{"_index":1963,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestcustom('permission",{"_index":1544,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestcustom('refresh",{"_index":1967,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestcustom('resume",{"_index":1653,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestcustom('role",{"_index":1740,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestcustom('subscriber",{"_index":1819,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestcustom('user",{"_index":1662,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestcustom(`công",{"_index":743,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestcustom(`không",{"_index":742,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["badrequestcustom(err.message",{"_index":1529,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestcustom(error.message",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('refresh",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('token",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["bao",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/PermissionsService.html":{}}}],["based",{"_index":1249,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["basename",{"_index":1438,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1938,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["biến",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["biết",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"classes/Permission.html":{},"classes/Role.html":{}}}],["board",{"_index":2136,"title":{},"body":{"index.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["boolean(isinit",{"_index":1001,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1413,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":2159,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2157,"title":{},"body":{"modules.html":{}}}],["building",{"_index":2046,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":1009,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["buộc",{"_index":1834,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["báo",{"_index":1687,"title":{},"body":{"classes/Role.html":{},"injectables/SubscribersService.html":{}}}],["bên",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["bản",{"_index":1523,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["bảo",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["bất",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["bắt",{"_index":1833,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["bằng",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{}}}],["c",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1554,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1223,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1228,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1408,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["catch(exception",{"_index":1109,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":1115,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cau",{"_index":1367,"title":{},"body":{"modules/MailModule.html":{}}}],["cập",{"_index":1269,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cb",{"_index":1425,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["cb(null",{"_index":1429,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["ch",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["channel",{"_index":2113,"title":{},"body":{"index.html":{}}}],["check",{"_index":910,"title":{},"body":{"classes/CreateJobDto.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"index.html":{}}}],["checkcompany",{"_index":740,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["checkemail",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["checkemailexist",{"_index":1918,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkemailexist(email",{"_index":1922,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkexist",{"_index":1655,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["checkexistdocument",{"_index":1734,"title":{},"body":{"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["checkexistpermission",{"_index":1536,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkjob",{"_index":1214,"title":{},"body":{"injectables/JobsService.html":{}}}],["checkjob.isdeleted",{"_index":1217,"title":{},"body":{"injectables/JobsService.html":{}}}],["checkpermission",{"_index":1534,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkpermission.isdeleted",{"_index":1543,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkresume",{"_index":1648,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkresume.history",{"_index":1650,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkresume.isdeleted",{"_index":1652,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkrole",{"_index":1732,"title":{},"body":{"injectables/RolesService.html":{}}}],["checkrole.isdeleted",{"_index":1739,"title":{},"body":{"injectables/RolesService.html":{}}}],["checkrole.name",{"_index":1742,"title":{},"body":{"injectables/RolesService.html":{}}}],["checksubscriber",{"_index":1814,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["checksubscriber.isdeleted",{"_index":1818,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["checkuser",{"_index":1954,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.createdby",{"_index":1961,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.email",{"_index":1964,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.isdeleted",{"_index":1962,"title":{},"body":{"injectables/UsersService.html":{}}}],["chiếu",{"_index":1682,"title":{},"body":{"classes/Role.html":{}}}],["cho",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["chính",{"_index":906,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["chúng",{"_index":1856,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["chưa",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["chạy",{"_index":664,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["chọn",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":11,"title":{"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":553,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["click",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["clicks",{"_index":2098,"title":{},"body":{"index.html":{}}}],["client",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/LocalStrategy.html":{}}}],["cloud",{"_index":2083,"title":{},"body":{"index.html":{}}}],["cloud_name",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary",{"_index":569,"title":{"classes/Cloudinary.html":{}},"body":{"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.config",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary.controller",{"_index":602,"title":{},"body":{"modules/CloudinaryModule.html":{}}}],["cloudinary.dto",{"_index":1829,"title":{},"body":{"classes/UpdateCloudinaryDto.html":{}}}],["cloudinary.dto.ts",{"_index":832,"title":{},"body":{"classes/CreateCloudinaryDto.html":{},"classes/UpdateCloudinaryDto.html":{},"coverage.html":{}}}],["cloudinary.service",{"_index":581,"title":{},"body":{"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{}}}],["cloudinary.uploader.upload_stream",{"_index":613,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary/cloudinary",{"_index":601,"title":{},"body":{"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{}}}],["cloudinary/cloudinary.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["cloudinary/file",{"_index":585,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["cloudinarycontroller",{"_index":571,"title":{"controllers/CloudinaryController.html":{}},"body":{"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"coverage.html":{}}}],["cloudinarymodule",{"_index":28,"title":{"modules/CloudinaryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CloudinaryModule.html":{},"modules.html":{},"overview.html":{}}}],["cloudinaryprovider",{"_index":600,"title":{},"body":{"modules/CloudinaryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloudinaryresponse",{"_index":608,"title":{},"body":{"injectables/CloudinaryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cloudinaryservice",{"_index":580,"title":{"injectables/CloudinaryService.html":{}},"body":{"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cloudinarymodule",{"_index":596,"title":{},"body":{"modules/CloudinaryModule.html":{},"overview.html":{}}}],["cluster_cloudinarymodule_exports",{"_index":598,"title":{},"body":{"modules/CloudinaryModule.html":{},"overview.html":{}}}],["cluster_cloudinarymodule_providers",{"_index":597,"title":{},"body":{"modules/CloudinaryModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":679,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":680,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":978,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":979,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1072,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1073,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":1183,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":1184,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1353,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1354,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1505,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1506,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1619,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1620,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1712,"title":{},"body":{"modules/RolesModule.html":{}}}],["cluster_rolesmodule_providers",{"_index":1713,"title":{},"body":{"modules/RolesModule.html":{}}}],["cluster_subscribersmodule",{"_index":1792,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1793,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_usersmodule",{"_index":1906,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1907,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1908,"title":{},"body":{"modules/UsersModule.html":{}}}],["co",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["code",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{}}}],["coi",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["collection",{"_index":1683,"title":{},"body":{"classes/Role.html":{}}}],["come",{"_index":2105,"title":{},"body":{"index.html":{}}}],["companies",{"_index":622,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":682,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":650,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":620,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":29,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":649,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":427,"title":{"classes/Company.html":{},"classes/Company-1.html":{}},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":652,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":834,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":837,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":838,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":839,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":836,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":690,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":704,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":929,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":695,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":683,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["companytype",{"_index":854,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["comparesync",{"_index":1935,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1953,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":661,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('cloudinary_api_key",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('cloudinary_api_secret",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('cloudinary_name",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('email_auth_pass",{"_index":1375,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1374,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1372,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1383,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_expire",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_url",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1348,"title":{},"body":{"controllers/MailController.html":{}}}],["conflict",{"_index":1537,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["conflictexception",{"_index":1520,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["connection",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1422,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1403,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":897,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1294,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":693,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":1190,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(message",{"_index":557,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["constructor(permissionmodel",{"_index":1511,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":588,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":1225,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1627,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1718,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1798,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":988,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["contains",{"_index":1417,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1644,"title":{},"body":{"injectables/ResumesService.html":{}}}],["context",{"_index":1231,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1244,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1243,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1246,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":1562,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cloudinary",{"_index":587,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["controller('companies",{"_index":657,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":977,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":1061,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":1101,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":1173,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1317,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1499,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1611,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1706,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1781,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1896,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["countpermission",{"_index":1004,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":1006,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":1002,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["courses",{"_index":2119,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1968,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":623,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":1174,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":626,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create(createfiledto",{"_index":1082,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":1158,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1487,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["create(createroledto",{"_index":1696,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1762,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1596,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1883,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(dto",{"_index":1513,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createcloudinarydto",{"_index":830,"title":{"classes/CreateCloudinaryDto.html":{}},"body":{"classes/CreateCloudinaryDto.html":{},"classes/UpdateCloudinaryDto.html":{},"coverage.html":{}}}],["createcompany",{"_index":692,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompany(createcompanydto",{"_index":696,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto",{"_index":627,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1404,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":708,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":840,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":843,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createjobdto.company.logo",{"_index":1204,"title":{},"body":{"injectables/JobsService.html":{}}}],["createmulteroptions",{"_index":1388,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":918,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":926,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":941,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1725,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":950,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuser",{"_index":1947,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser._id",{"_index":1948,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser.createdat",{"_index":1949,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusercvdto",{"_index":940,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":806,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1943,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":1946,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["cron(\"0",{"_index":1321,"title":{},"body":{"controllers/MailController.html":{}}}],["csdl",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["ctx",{"_index":1116,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1118,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cua",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["cung",{"_index":895,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["current",{"_index":733,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":700,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["custom",{"_index":666,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/CreateJobDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["các",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["cách",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["cái",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"classes/Permission.html":{},"injectables/ResumesService.html":{}}}],["còn",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{}}}],["cònigmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["công",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["cấp",{"_index":824,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["cần",{"_index":1018,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["của",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["d",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["dang",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["danh",{"_index":879,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["data",{"_index":593,"title":{},"body":{"controllers/CloudinaryController.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.secure_url",{"_index":595,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["database",{"_index":1690,"title":{},"body":{"classes/Role.html":{}}}],["databases",{"_index":974,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":981,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":976,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":972,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":30,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":975,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":767,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date(enddate",{"_index":909,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date(obj.startdate",{"_index":907,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date(value",{"_index":916,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date.now()}${extname",{"_index":1441,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{}}}],["de",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["decode._id",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorator",{"_index":894,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["decorators",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":2115,"title":{},"body":{"index.html":{}}}],["default",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":718,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defaultmessage",{"_index":912,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["defaultmessage(args",{"_index":911,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["defaultpage",{"_index":715,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete('/:id",{"_index":1904,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('/:id')@responsemessage('delete",{"_index":1889,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":641,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1164,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["deletedat",{"_index":761,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":757,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1421,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2070,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2087,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2079,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":2097,"title":{},"body":{"index.html":{}}}],["description",{"_index":762,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":1424,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":2060,"title":{},"body":{"index.html":{}}}],["development",{"_index":2057,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2127,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1376,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1412,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["discord",{"_index":2112,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":1398,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dive",{"_index":2114,"title":{},"body":{"index.html":{}}}],["diện",{"_index":782,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["doc",{"_index":1449,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":750,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{}}}],["document.isdeleted",{"_index":753,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["documentation",{"_index":1969,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["docx",{"_index":1450,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":1515,"title":{},"body":{"injectables/PermissionsService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["dto/create",{"_index":651,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/parseint.pipe",{"_index":655,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["dto/update",{"_index":653,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["dán",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["dùng",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/UsersService.html":{}}}],["dùng/ứng",{"_index":1014,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dưới",{"_index":668,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/JwtStrategy.html":{}}}],["dạng",{"_index":821,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dấu",{"_index":784,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/User.html":{}}}],["dụng",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":2066,"title":{},"body":{"index.html":{}}}],["each",{"_index":915,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["eexist",{"_index":1409,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":2047,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2077,"title":{},"body":{"index.html":{}}}],["email",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":1305,"title":{},"body":{"controllers/MailController.html":{}}}],["end",{"_index":908,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["end_date",{"_index":860,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["enddate",{"_index":846,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":1565,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["enotdir",{"_index":1414,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enpoind",{"_index":1263,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ensure",{"_index":2075,"title":{},"body":{"index.html":{}}}],["ensureexists",{"_index":1389,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1392,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enterprise",{"_index":2130,"title":{},"body":{"index.html":{}}}],["env",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["equal",{"_index":1959,"title":{},"body":{"injectables/UsersService.html":{}}}],["err",{"_index":1234,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{}}}],["err.message",{"_index":1530,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["error",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error('upload",{"_index":617,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["error(`vai",{"_index":1726,"title":{},"body":{"injectables/RolesService.html":{}}}],["error.code",{"_index":1407,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["error.message",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":826,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["exception",{"_index":1113,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{}}}],["exception.filter",{"_index":1059,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception.filter.ts",{"_index":1107,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":1112,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1119,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":1121,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":1108,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exec",{"_index":731,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":1229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":1524,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["existnamerole",{"_index":1736,"title":{},"body":{"injectables/RolesService.html":{}}}],["exists",{"_index":1405,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["experience",{"_index":2117,"title":{},"body":{"index.html":{}}}],["expire",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresin",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":575,"title":{},"body":{"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/FilesController.html":{}}}],["extend",{"_index":1841,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["extends",{"_index":555,"title":{},"body":{"classes/BadRequestCustom.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1433,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1434,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1281,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":618,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["false",{"_index":745,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":2091,"title":{},"body":{"index.html":{}}}],["features",{"_index":2101,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["few",{"_index":2093,"title":{},"body":{"index.html":{}}}],["field",{"_index":785,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"injectables/ResumesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto",{"_index":1057,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":842,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":1066,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.originalname",{"_index":1452,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["fileextension",{"_index":1451,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["filefilter",{"_index":1442,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":582,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{}}}],["filename",{"_index":1052,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":1041,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":1075,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":1056,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":1039,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1461,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["filesmodule",{"_index":31,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":1055,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadoptions",{"_index":584,"title":{},"body":{"controllers/CloudinaryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.companyid",{"_index":1645,"title":{},"body":{"injectables/ResumesService.html":{}}}],["filter.current",{"_index":713,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":714,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter['company._id",{"_index":1210,"title":{},"body":{"injectables/JobsService.html":{}}}],["filteremail",{"_index":1956,"title":{},"body":{"injectables/UsersService.html":{}}}],["finalname",{"_index":1440,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1656,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":725,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":624,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":698,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall(page",{"_index":630,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findbyid(id",{"_index":1952,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":673,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findone(id",{"_index":637,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["finduser",{"_index":1882,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduser(@param('id",{"_index":1901,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(id",{"_index":1886,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduserbyrefreshtoken",{"_index":1916,"title":{},"body":{"injectables/UsersService.html":{}}}],["focus",{"_index":2100,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1426,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["follow",{"_index":2133,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1235,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('bạn",{"_index":1265,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["framework",{"_index":2045,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["fs",{"_index":1397,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1401,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":1013,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["function",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2039,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2096,"title":{},"body":{"index.html":{}}}],["gan",{"_index":1288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gender",{"_index":819,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["gensaltsync",{"_index":1936,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1940,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/:id",{"_index":1900,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id')@public()@responsemessage('fetch",{"_index":1887,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":672,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get(':id')@public",{"_index":638,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":1162,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1490,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["get(':id')@responsemessage('findone",{"_index":1766,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('account",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":1095,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('test",{"_index":1304,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1160,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get()@responsemessage('findall",{"_index":1764,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get()@responsemessage('get",{"_index":632,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["gethashpassword",{"_index":1919,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethashpassword(password",{"_index":1927,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":117,"title":{},"body":{"injectables/AppService.html":{}}}],["gethistoryjob",{"_index":1595,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjob(@userdecorator",{"_index":1617,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjob(user",{"_index":1600,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjobbyuserid",{"_index":1626,"title":{},"body":{"injectables/ResumesService.html":{}}}],["gethistoryjobbyuserid(id",{"_index":1633,"title":{},"body":{"injectables/ResumesService.html":{}}}],["getprofile",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@userdecorator",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrootpath",{"_index":1387,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":2041,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1761,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["getuserskills(@userdecorator",{"_index":1784,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1768,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["ghi",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["gi",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateRoleDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["gia",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["gian",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["giao",{"_index":1913,"title":{},"body":{"modules/UsersModule.html":{}}}],["gif",{"_index":1447,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["giúp",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["giải",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["giới",{"_index":818,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["global",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{}}}],["google",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":2122,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2140,"title":{},"body":{"index.html":{}}}],["gui",{"_index":1369,"title":{},"body":{"modules/MailModule.html":{}}}],["gán",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["gần",{"_index":1659,"title":{},"body":{"injectables/ResumesService.html":{}}}],["gặp",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["gọi",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["gốc",{"_index":1842,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["gồm",{"_index":1522,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["gửi",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["h",{"_index":1016,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["hack",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["hacker",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlebars",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1361,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1224,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1232,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":1303,"title":{},"body":{"controllers/MailController.html":{}}}],["hands",{"_index":2116,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2106,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1941,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync",{"_index":1937,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1942,"title":{},"body":{"injectables/UsersService.html":{}}}],["hay",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["header",{"_index":1279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["health",{"_index":1094,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1105,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1097,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1098,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1092,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":32,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":2024,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":2120,"title":{},"body":{"index.html":{}}}],["here",{"_index":2147,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":1416,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hieu",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["hinh",{"_index":1368,"title":{},"body":{"modules/MailModule.html":{}}}],["history",{"_index":1570,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hop",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["host",{"_index":1110,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{}}}],["host.switchtohttp",{"_index":1117,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hoặc",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["httpexception",{"_index":556,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["httpexception('invalid",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexceptionfilter",{"_index":1050,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":2153,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":561,"title":{},"body":{"classes/BadRequestCustom.html":{},"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["httpstatus.bad_request",{"_index":567,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["httpstatus.ok",{"_index":568,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1459,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["hydrateddocument",{"_index":781,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàm",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["hãy",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hơn",{"_index":816,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["hạn",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["hết",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["hồi",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["hợp",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["i'm",{"_index":1022,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":1282,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1432,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1436,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["imagesjob",{"_index":1199,"title":{},"body":{"injectables/JobsService.html":{}}}],["implements",{"_index":900,"title":{},"body":{"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":115,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":2081,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":2103,"title":{},"body":{"index.html":{}}}],["init",{"_index":1037,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":996,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":112,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":689,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":1200,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":998,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1637,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["injectmodel(subscriber.name",{"_index":1318,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":2095,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":2056,"title":{},"body":{"index.html":{}}}],["interact",{"_index":2123,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1560,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1823,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":1125,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":1126,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":1458,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["is_public_key",{"_index":1238,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":1239,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":847,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":887,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isboolean",{"_index":888,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isdate",{"_index":889,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isdate({message",{"_index":862,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdelete",{"_index":752,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isdeleted",{"_index":744,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":795,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isempty",{"_index":957,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["isendafterstart",{"_index":898,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isendafterstartconstraint",{"_index":899,"title":{"classes/IsEndAfterStartConstraint.html":{}},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"coverage.html":{}}}],["iserror",{"_index":558,"title":{},"body":{"classes/BadRequestCustom.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["isexist",{"_index":1258,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isexistemail",{"_index":1806,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["isglobal",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":999,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isint",{"_index":796,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ismongoid",{"_index":797,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnan(val",{"_index":1469,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["isnotempty",{"_index":789,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":835,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotemptyobject",{"_index":798,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":965,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isobject",{"_index":799,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isok",{"_index":566,"title":{},"body":{"classes/BadRequestCustom.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ispublic",{"_index":1241,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":1247,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":800,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1877,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidfiletype",{"_index":1456,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["isvalidpassword",{"_index":1920,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1929,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1411,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item",{"_index":1260,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["item.apipath",{"_index":1261,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["item.method",{"_index":1262,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["iuser",{"_index":135,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["job",{"_index":77,"title":{"classes/Job.html":{}},"body":{"modules/AppModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["job.company.name",{"_index":1334,"title":{},"body":{"controllers/MailController.html":{}}}],["job.dto",{"_index":1171,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":845,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:23",{"_index":1129,"title":{},"body":{"classes/IsEndAfterStartConstraint.html":{}}}],["job.dto.ts:31",{"_index":1128,"title":{},"body":{"classes/IsEndAfterStartConstraint.html":{}}}],["job.dto.ts:40",{"_index":871,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":883,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:51",{"_index":857,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:54",{"_index":876,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:57",{"_index":874,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":869,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:63",{"_index":858,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:66",{"_index":870,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:71",{"_index":885,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:77",{"_index":863,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:81",{"_index":868,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":1188,"title":{},"body":{"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["job.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1335,"title":{},"body":{"controllers/MailController.html":{}}}],["job.skills",{"_index":1336,"title":{},"body":{"controllers/MailController.html":{}}}],["jobdocument",{"_index":1149,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":930,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":1192,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":1157,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":1186,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":1170,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":1153,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":1155,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":33,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":1169,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1330,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.length",{"_index":1332,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((job",{"_index":1333,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1359,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1377,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1430,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpeg",{"_index":1445,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["jpg",{"_index":1444,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_refresh_expire",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":204,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1280,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":310,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/SubscribersService.html":{}}}],["kamil",{"_index":2150,"title":{},"body":{"index.html":{}}}],["key",{"_index":2072,"title":{},"body":{"index.html":{}}}],["kh",{"_index":1835,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["khai",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/Role.html":{}}}],["khau",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["khi",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Role.html":{},"classes/UpdateUserDto.html":{}}}],["khoa",{"_index":1030,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["khoa@gmail.com",{"_index":827,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["khoa@gmail.com3e34325",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khoalon89@gmail.com",{"_index":1341,"title":{},"body":{"controllers/MailController.html":{}}}],["khong",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/RolesService.html":{}}}],["không",{"_index":1266,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["khác",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["khẩu",{"_index":810,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["khớp",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["kieu",{"_index":825,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["kiểu",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{},"classes/Company.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["kiện",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["ko",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["kèm",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["l",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["la",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["lay",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["lazada",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["le",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["learn",{"_index":2109,"title":{},"body":{"index.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":848,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["license",{"_index":2156,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2138,"title":{},"body":{"index.html":{}}}],["limit",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":727,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["limits",{"_index":1460,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["linkedin",{"_index":2134,"title":{},"body":{"index.html":{}}}],["list",{"_index":633,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["listnameimages",{"_index":1198,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listnameimages.length",{"_index":1203,"title":{},"body":{"injectables/JobsService.html":{}}}],["listnameimages[math.floor(math.random",{"_index":1202,"title":{},"body":{"injectables/JobsService.html":{}}}],["literal",{"_index":769,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["local",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":171,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":311,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":849,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":986,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":993,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["login(user",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":763,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["logout",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":2082,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2132,"title":{},"body":{"index.html":{}}}],["loại",{"_index":1658,"title":{},"body":{"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{}}}],["luc",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["luôn",{"_index":1285,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["lây",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{}}}],["lên",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["lưu",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"classes/Role.html":{}}}],["lương",{"_index":875,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["lượng",{"_index":872,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["lại",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["lấy",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["lắm",{"_index":1657,"title":{},"body":{"injectables/ResumesService.html":{}}}],["lệ'})@isnotempty({message",{"_index":953,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["lệ'})@isobject({message",{"_index":855,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["lệ'})@validatenested()@type(undefined",{"_index":856,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["lỗi",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["lớn",{"_index":815,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["m",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateJobDto.html":{}}}],["ma",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["mail",{"_index":1302,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1357,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1309,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1300,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1358,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1370,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1310,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":34,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1308,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":660,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["makes",{"_index":2089,"title":{},"body":{"index.html":{}}}],["male",{"_index":1027,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["managing",{"_index":2102,"title":{},"body":{"index.html":{}}}],["map",{"_index":1556,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1566,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["mat",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":723,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mau",{"_index":2085,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["mb",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":560,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":732,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1240,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/ParseIntPipeCustom.html":{},"dependencies.html":{}}}],["method",{"_index":901,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mili",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["min",{"_index":801,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["min(0",{"_index":814,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["miscellaneous",{"_index":2038,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2137,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2059,"title":{},"body":{"index.html":{}}}],["model",{"_index":688,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1311,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1362,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":822,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongodb",{"_index":1912,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoose",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1589,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":786,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":737,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":1099,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":2080,"title":{},"body":{"index.html":{}}}],["ms",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms.stringvalue",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["multer",{"_index":1399,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":1078,"title":{},"body":{"modules/FilesModule.html":{}}}],["multer.memorystorage",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multerconfigservice",{"_index":1077,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":1076,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":1079,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1391,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["multeroptionsfactory",{"_index":1396,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":2151,"title":{},"body":{"index.html":{}}}],["mình",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{}}}],["mảng",{"_index":1679,"title":{},"body":{"classes/Role.html":{}}}],["mật",{"_index":809,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mặt",{"_index":1685,"title":{},"body":{"classes/Role.html":{}}}],["mỗi",{"_index":881,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Role.html":{}}}],["một",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["mới",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company.html":{},"injectables/PermissionsService.html":{},"classes/User.html":{}}}],["mục",{"_index":804,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["n",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["name",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nay",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["ne",{"_index":1538,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":2128,"title":{},"body":{"index.html":{}}}],["nest",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nested_obj",{"_index":805,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nestframework",{"_index":2155,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1553,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1236,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":583,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1100,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["netflix",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newjob",{"_index":1205,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob._id",{"_index":1207,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob.createdat",{"_index":1208,"title":{},"body":{"injectables/JobsService.html":{}}}],["newresume",{"_index":1638,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume._id",{"_index":1641,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume.createdat",{"_index":1642,"title":{},"body":{"injectables/ResumesService.html":{}}}],["next",{"_index":1561,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1564,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{}}}],["nghĩa",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["ngoài",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["nguyên",{"_index":813,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["nguyên'})@min(0",{"_index":963,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ngăn",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["người",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["ngẫu",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["nh",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["nhau",{"_index":1914,"title":{},"body":{"modules/UsersModule.html":{}}}],["nhiên",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["nhu",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["nhưng",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Role.html":{}}}],["nhất",{"_index":1660,"title":{},"body":{"injectables/ResumesService.html":{}}}],["nhận",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CompaniesService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubscribersService.html":{}}}],["nhập",{"_index":1858,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["những",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["nice",{"_index":1346,"title":{},"body":{"controllers/MailController.html":{}}}],["node.js",{"_index":2044,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":1032,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":2055,"title":{},"body":{"index.html":{}}}],["null",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":631,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nào",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"classes/Permission.html":{},"injectables/ResumesService.html":{}}}],["này",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["nâng",{"_index":823,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nên",{"_index":663,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["nói",{"_index":1286,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Role.html":{},"modules/UsersModule.html":{}}}],["năng",{"_index":877,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["nếu",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/UsersService.html":{}}}],["obj",{"_index":904,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["object",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["object_id",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["objectid",{"_index":1680,"title":{},"body":{"classes/Role.html":{}}}],["objuser",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1555,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offer",{"_index":2135,"title":{},"body":{"index.html":{}}}],["official",{"_index":2086,"title":{},"body":{"index.html":{}}}],["offset",{"_index":717,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit",{"_index":1855,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype",{"_index":1854,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1853,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":987,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":2139,"title":{},"body":{"index.html":{}}}],["optional",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1380,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2161,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["oạn",{"_index":1677,"title":{},"body":{"classes/Role.html":{}}}],["p",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["package",{"_index":2000,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":636,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["pages",{"_index":735,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":734,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":634,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":648,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":675,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":706,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1415,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":1053,"title":{},"body":{"controllers/FilesController.html":{}}}],["parseint(value",{"_index":1468,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["parseintpipecustom",{"_index":654,"title":{"injectables/ParseIntPipeCustom.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/ParseIntPipeCustom.html":{},"coverage.html":{}}}],["parser",{"_index":2019,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2129,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1828,"title":{},"body":{"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createcloudinarydto",{"_index":1827,"title":{},"body":{"classes/UpdateCloudinaryDto.html":{}}}],["partialtype(createcompanydto",{"_index":1831,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1837,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1839,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1844,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1846,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1848,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1850,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1278,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1273,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":811,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":647,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":645,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1167,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1775,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1360,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1439,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1435,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.company",{"_index":1290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1448,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":1640,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":264,"title":{"classes/Permission.html":{}},"body":{"controllers/AuthController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission._id",{"_index":1527,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.createdat",{"_index":1528,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.dto",{"_index":1497,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":920,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":923,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":924,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":925,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":922,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.find",{"_index":1259,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":984,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":994,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":989,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1508,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":1496,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":982,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1485,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":35,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1495,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phai",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["phép",{"_index":1124,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["phia",{"_index":1251,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["photoshop",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phép",{"_index":1743,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["phúp",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["phải",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["pipe",{"_index":662,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["platform",{"_index":2084,"title":{},"body":{"index.html":{}}}],["please",{"_index":2111,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["png",{"_index":1446,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["pop",{"_index":1454,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["populate",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate('permissions",{"_index":1691,"title":{},"body":{"classes/Role.html":{}}}],["populate(population",{"_index":730,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":711,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["possible",{"_index":2078,"title":{},"body":{"index.html":{}}}],["post",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"skills",{"_index":1783,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1601,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('logout",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@responsemessage('logout",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1769,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":590,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{}}}],["post('upload')@useinterceptors(undefined",{"_index":576,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["post('upload')@useinterceptors(undefined)@responsemessage('upload",{"_index":1047,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":628,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["pr",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1382,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1400,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":2061,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":2043,"title":{},"body":{"index.html":{}}}],["project",{"_index":2053,"title":{},"body":{"index.html":{}}}],["projection",{"_index":1531,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["promise",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/LocalStrategy.html":{}}}],["promise((resolve",{"_index":610,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["prop",{"_index":765,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1750,"title":{},"body":{"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":770,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":351,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":687,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@apibody({type",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('get",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1431,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["qu",{"_index":1123,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["qua",{"_index":1201,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":850,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["query",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":669,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":670,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["questions",{"_index":2110,"title":{},"body":{"index.html":{}}}],["quyền",{"_index":1267,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["quyền",{"_index":820,"title":{},"body":{"classes/Company-1.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ra",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["ra(ne",{"_index":1958,"title":{},"body":{"injectables/UsersService.html":{}}}],["rate",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["re",{"_index":748,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["read",{"_index":2146,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":589,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":2069,"title":{},"body":{"index.html":{}}}],["real",{"_index":2124,"title":{},"body":{"index.html":{}}}],["receiver",{"_index":1351,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1402,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1572,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1226,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(registeruserdto",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":162,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.password",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.role",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject",{"_index":611,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["reject(error",{"_index":614,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["reject(new",{"_index":616,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["remove",{"_index":625,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":677,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":640,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":1091,"title":{},"body":{"injectables/FilesService.html":{}}}],["replay",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":2052,"title":{},"body":{"index.html":{}}}],["req",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["req.body",{"_index":1897,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.user",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1427,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":1254,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":1256,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1410,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1757,"title":{},"body":{"classes/Subscriber.html":{},"classes/User.html":{}}}],["requiring",{"_index":2092,"title":{},"body":{"index.html":{}}}],["res",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve(result",{"_index":615,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["resources",{"_index":2104,"title":{},"body":{"index.html":{}}}],["response",{"_index":146,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.status(status).json",{"_index":1120,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.statuscode",{"_index":1567,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["response.ts",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["response_message",{"_index":1558,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":658,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":1181,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":1176,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('findall",{"_index":1786,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('findone",{"_index":1788,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('get",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('logout",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":1320,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":1179,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":1062,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["result.matchedcount",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1568,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1609,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":928,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:12",{"_index":938,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:15",{"_index":937,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:19",{"_index":934,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":936,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:28",{"_index":960,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:32",{"_index":958,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:36",{"_index":959,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:6",{"_index":935,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":939,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1624,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1588,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1629,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1594,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1622,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1608,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1590,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1592,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":36,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1607,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":324,"title":{"classes/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role._id",{"_index":1728,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.createdat",{"_index":1729,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.dto",{"_index":1704,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":943,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":946,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":949,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":947,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":945,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{}}}],["roledocument",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["roles",{"_index":1695,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1715,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1703,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1693,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":37,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":185,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["run",{"_index":1322,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["runs",{"_index":2076,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1363,"title":{},"body":{"modules/MailModule.html":{},"interfaces/Response.html":{},"modules/SubscribersModule.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1557,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rằng",{"_index":1681,"title":{},"body":{"classes/Role.html":{}}}],["rồi",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MailController.html":{},"injectables/ResumesService.html":{}}}],["rộng",{"_index":1840,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["s",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":851,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1939,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1418,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":997,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sau",{"_index":1678,"title":{},"body":{"classes/Role.html":{}}}],["scalable",{"_index":2048,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":780,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":787,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":1154,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1484,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1591,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1675,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1758,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1876,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":684,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":1187,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1509,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1623,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1716,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1796,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1911,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["se",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["second",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["seconds",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1283,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1373,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1661,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select('skills",{"_index":1821,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["select(projection",{"_index":1533,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["sendmail",{"_index":1337,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"index.html":{}}}],["service",{"_index":685,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/UsersModule.html":{}}}],["set",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["setmetadata(is_public_key",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":2054,"title":{},"body":{"index.html":{}}}],["shopee",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":2049,"title":{},"body":{"index.html":{}}}],["sign(payload",{"_index":1287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["signoptions",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":2094,"title":{},"body":{"index.html":{}}}],["single",{"_index":1048,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["sinh",{"_index":686,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["skill",{"_index":882,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/SubscribersController.html":{}}}],["skill')@skipcheckpermission",{"_index":1770,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skills",{"_index":852,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":726,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1779,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sl",{"_index":1151,"title":{},"body":{"classes/Job.html":{}}}],["soft",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdelete",{"_index":1965,"title":{},"body":{"injectables/UsersService.html":{}}}],["softdeletemodel",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":710,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":728,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Cloudinary.html":{},"controllers/CloudinaryController.html":{},"modules/CloudinaryModule.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCloudinaryDto.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCloudinaryDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["split",{"_index":1453,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":2142,"title":{},"body":{"index.html":{}}}],["src/.../cloudinary",{"_index":2170,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cloudinary.ts",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../company.schema.ts",{"_index":2171,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imagesjob.ts",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":2172,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":2173,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":2174,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":2175,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":2176,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2177,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":114,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:65",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:131",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:146",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:200",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":1220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1291,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1272,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:24",{"_index":1276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1293,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:14",{"_index":1297,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":1295,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/cloudinary/cloudinary.controller.ts",{"_index":572,"title":{},"body":{"controllers/CloudinaryController.html":{},"coverage.html":{}}}],["src/cloudinary/cloudinary.controller.ts:12",{"_index":577,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["src/cloudinary/cloudinary.module.ts",{"_index":599,"title":{},"body":{"modules/CloudinaryModule.html":{}}}],["src/cloudinary/cloudinary.service.ts",{"_index":603,"title":{},"body":{"injectables/CloudinaryService.html":{},"coverage.html":{}}}],["src/cloudinary/cloudinary.service.ts:8",{"_index":606,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/cloudinary/cloudinary/cloudinary",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cloudinary/cloudinary/cloudinary.ts",{"_index":1981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cloudinary/cloudinary/file",{"_index":1983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cloudinary/dto/create",{"_index":831,"title":{},"body":{"classes/CreateCloudinaryDto.html":{},"coverage.html":{}}}],["src/cloudinary/dto/update",{"_index":1826,"title":{},"body":{"classes/UpdateCloudinaryDto.html":{},"coverage.html":{}}}],["src/cloudinary/entities/cloudinary.entity.ts",{"_index":570,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts",{"_index":621,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:26",{"_index":629,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:35",{"_index":635,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:46",{"_index":639,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:52",{"_index":646,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:61",{"_index":642,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":681,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":691,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:115",{"_index":702,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:13",{"_index":694,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:19",{"_index":697,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:35",{"_index":699,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:66",{"_index":701,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:83",{"_index":703,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":833,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/parseint.pipe.ts",{"_index":1464,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{},"coverage.html":{}}}],["src/companies/dto/parseint.pipe.ts:6",{"_index":1466,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["src/companies/dto/update",{"_index":1830,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1587,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":759,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":766,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":774,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":776,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":771,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":779,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:35",{"_index":773,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":768,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":778,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":772,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:51",{"_index":775,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":777,"title":{},"body":{"classes/Company.html":{}}}],["src/core/http",{"_index":1058,"title":{},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1552,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:23",{"_index":1822,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:26",{"_index":1824,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/customexceptions/badrequestcustom",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["src/customexceptions/badrequestcustom.ts",{"_index":554,"title":{},"body":{"classes/BadRequestCustom.html":{},"coverage.html":{}}}],["src/customexceptions/badrequestcustom.ts:3",{"_index":559,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["src/databases/databases.controller.ts",{"_index":973,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":980,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":985,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:16",{"_index":991,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:32",{"_index":992,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{}}}],["src/databases/sample.ts",{"_index":1988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1989,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":841,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1836,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":1038,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":1040,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:31",{"_index":1051,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:38",{"_index":1042,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:43",{"_index":1043,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:48",{"_index":1046,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:53",{"_index":1044,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":1074,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":1081,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":1084,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":1085,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":1087,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":1086,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":1083,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1386,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":1395,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:16",{"_index":1393,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:40",{"_index":1390,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":1093,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:15",{"_index":1096,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1104,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":844,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1838,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/imagesjob.ts",{"_index":1990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":1156,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:29",{"_index":1159,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:35",{"_index":1161,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:47",{"_index":1163,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:53",{"_index":1168,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:63",{"_index":1165,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":1185,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service",{"_index":1365,"title":{},"body":{"modules/MailModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":1189,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:128",{"_index":1196,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:14",{"_index":1191,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":1193,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:41",{"_index":1194,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:81",{"_index":1195,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:98",{"_index":1197,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1315,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":1130,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":1145,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":1131,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":1141,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":1144,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":1143,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":1140,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":1136,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":1146,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":1137,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":1138,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":1132,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:49",{"_index":1147,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":1134,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":1133,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:62",{"_index":1148,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:69",{"_index":1135,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:76",{"_index":1139,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":1142,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1301,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:31",{"_index":1307,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1356,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1385,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1992,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":919,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1843,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1486,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:26",{"_index":1488,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:35",{"_index":1489,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:45",{"_index":1491,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:51",{"_index":1494,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:61",{"_index":1492,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1507,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1510,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:102",{"_index":1519,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:13",{"_index":1512,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:149",{"_index":1518,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:18",{"_index":1514,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:53",{"_index":1516,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:85",{"_index":1517,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":983,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1470,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1471,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1477,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1478,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1472,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:24",{"_index":1480,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1474,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:30",{"_index":1473,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:37",{"_index":1481,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:44",{"_index":1475,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:51",{"_index":1476,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1479,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":927,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1845,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1593,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:25",{"_index":1597,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:34",{"_index":1598,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:45",{"_index":1599,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:51",{"_index":1606,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:61",{"_index":1604,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:67",{"_index":1603,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1621,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1625,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:109",{"_index":1636,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:13",{"_index":1628,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:149",{"_index":1635,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1630,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:185",{"_index":1634,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:50",{"_index":1631,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:92",{"_index":1632,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1569,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1578,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1586,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1585,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1582,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1573,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1581,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1579,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1574,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:42",{"_index":1583,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1576,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:48",{"_index":1575,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1584,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:62",{"_index":1577,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:69",{"_index":1580,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":942,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1847,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1694,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:26",{"_index":1697,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1698,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:42",{"_index":1699,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:48",{"_index":1702,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:58",{"_index":1700,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":1714,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1717,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:137",{"_index":1723,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:14",{"_index":1719,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1720,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:45",{"_index":1721,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:76",{"_index":1722,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:96",{"_index":1724,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1663,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1671,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1668,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1669,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1672,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1664,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:25",{"_index":1673,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1666,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:31",{"_index":1665,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:38",{"_index":1674,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:45",{"_index":1667,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:52",{"_index":1670,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":951,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1849,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1314,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1745,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1753,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1754,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1746,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:21",{"_index":1755,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1748,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:27",{"_index":1747,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:34",{"_index":1756,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:41",{"_index":1749,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:48",{"_index":1752,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1751,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1760,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:25",{"_index":1763,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:35",{"_index":1771,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:41",{"_index":1765,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:51",{"_index":1767,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:58",{"_index":1776,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:67",{"_index":1772,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1794,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service",{"_index":1366,"title":{},"body":{"modules/MailModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1797,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:124",{"_index":1804,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:13",{"_index":1799,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:160",{"_index":1803,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:18",{"_index":1800,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:44",{"_index":1801,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:75",{"_index":1802,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:92",{"_index":1805,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1852,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1859,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1870,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1867,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1871,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1861,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1868,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1860,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1862,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1873,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1872,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1863,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1874,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1869,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":1864,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:56",{"_index":1875,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:63",{"_index":1866,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:70",{"_index":1865,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1881,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:25",{"_index":1884,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":1885,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":1888,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:49",{"_index":1892,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:59",{"_index":1890,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":1127,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1909,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1915,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:106",{"_index":1930,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:110",{"_index":1923,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:116",{"_index":1932,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":1921,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":1931,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1928,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:215",{"_index":1934,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:238",{"_index":1933,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1924,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":1925,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:86",{"_index":1926,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":893,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"index.html":{}}}],["start:prodrun",{"_index":2062,"title":{},"body":{"index.html":{}}}],["start_date",{"_index":884,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["startdate",{"_index":853,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["started",{"_index":2042,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2051,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":931,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":563,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":2131,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2073,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1423,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["straightforward",{"_index":2090,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["streamifier",{"_index":609,"title":{},"body":{"injectables/CloudinaryService.html":{},"dependencies.html":{}}}],["streamifier.createreadstream(file.buffer).pipe(uploadstream",{"_index":619,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["strict",{"_index":1381,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1344,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1327,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1352,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1329,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1312,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber._id",{"_index":1810,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.createdat",{"_index":1811,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto",{"_index":1778,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":952,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:11",{"_index":955,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:15",{"_index":954,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:20",{"_index":956,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1384,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1313,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1319,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1325,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1795,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1777,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1364,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1759,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":38,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1355,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/MailModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1328,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":1063,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{},"controllers/SubscribersController.html":{}}}],["successfully')@usefilters(new",{"_index":1049,"title":{},"body":{"controllers/FilesController.html":{}}}],["sunday",{"_index":1324,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":562,"title":{},"body":{"classes/BadRequestCustom.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1245,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supper",{"_index":1284,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1342,"title":{},"body":{"controllers/MailController.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":2158,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1406,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sánh",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["sẵn",{"_index":1339,"title":{},"body":{"controllers/MailController.html":{}}}],["sửa",{"_index":1541,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["t",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{}}}],["ta",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["table",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2074,"title":{},"body":{"index.html":{}}}],["targetdirectory",{"_index":1394,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetenpoint",{"_index":1255,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetenpoint.startswith('/api/v1/auth",{"_index":1264,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":1253,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1343,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1349,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1378,"title":{},"body":{"modules/MailModule.html":{}}}],["ten",{"_index":1350,"title":{},"body":{"controllers/MailController.html":{}}}],["terminusmodule",{"_index":1106,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":2065,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":2068,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2067,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2063,"title":{},"body":{"index.html":{}}}],["th",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["tham",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/Role.html":{}}}],["thanks",{"_index":2141,"title":{},"body":{"index.html":{}}}],["thao",{"_index":1688,"title":{},"body":{"classes/Role.html":{}}}],["thay",{"_index":1692,"title":{},"body":{"classes/Role.html":{}}}],["theo",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["thi",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.registeruser(registeruserdto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1298,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cloudinaryservice.uploadfile(file",{"_index":594,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["this.companiesservice.createcompany(createcompanydto",{"_index":659,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(page",{"_index":671,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":674,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":678,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":676,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":724,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":707,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":721,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":741,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":751,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":758,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":756,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone(filter",{"_index":747,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('init_password",{"_index":1025,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_expire",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":1000,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":1103,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1428,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":1067,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":1068,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":1071,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":1070,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":1945,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":1102,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":1213,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":1206,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1331,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":1212,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":1215,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":1219,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone(filter",{"_index":1216,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":1175,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(page",{"_index":1177,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":1178,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":1182,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":1180,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":1035,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.login(payload",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice.sendmail",{"_index":1340,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1525,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":1005,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1526,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1532,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":1010,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1535,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":1008,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1545,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone(filter",{"_index":1542,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1500,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(page",{"_index":1501,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1502,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1504,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1503,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1563,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":1248,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1242,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1647,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1639,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1646,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1649,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1654,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone(filter",{"_index":1651,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1612,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(page",{"_index":1613,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1614,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.gethistoryjobbyuserid(user._id",{"_index":1618,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1616,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1615,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1731,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":1007,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1727,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1730,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1735,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id).populate",{"_index":1733,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["this.rolemodel.insertmany",{"_index":1011,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1744,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone(filter",{"_index":1738,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":1289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1707,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(page",{"_index":1708,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1709,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1711,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1710,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1813,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1809,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1326,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1812,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findbyid(id",{"_index":1815,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1807,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1820,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone(filter",{"_index":1816,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1782,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(page",{"_index":1787,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1789,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getuserskills(user",{"_index":1785,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1791,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1790,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1951,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":1003,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1950,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1955,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1944,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(filteremail",{"_index":1960,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":1021,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1966,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone(filter",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":1024,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.checkemailexist(email",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1898,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(page",{"_index":1899,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(id",{"_index":1902,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(userid",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.gethashpassword",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1905,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1903,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuserrefreshtoken(_id",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["thiết",{"_index":1857,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thiếu",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["thoi",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle(5",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thu",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["thuc",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["thuộc",{"_index":1150,"title":{},"body":{"classes/Job.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{}}}],["thành",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{}}}],["thái",{"_index":865,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["thêm",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["thích",{"_index":1676,"title":{},"body":{"classes/Role.html":{}}}],["thông",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["thấy",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":1017,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thời",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["thực",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"classes/Role.html":{}}}],["tiki",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiktok",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2125,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":783,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateUserDto.html":{}}}],["title",{"_index":1643,"title":{},"body":{"injectables/ResumesService.html":{}}}],["tiêm",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["tiếp",{"_index":1271,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{}}}],["token",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["token')@get('refresh",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["tolowercase",{"_index":1455,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":736,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":720,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":722,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":2148,"title":{},"body":{"index.html":{}}}],["tr",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"injectables/UsersService.html":{}}}],["trang",{"_index":864,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["transform",{"_index":886,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/ParseIntPipeCustom.html":{}}}],["transform(value",{"_index":1465,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["transformer",{"_index":794,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1559,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1371,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Job.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["true",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":1268,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["truyen",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MailController.html":{}}}],["truyền",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["try",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trying",{"_index":1420,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tránh",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["trên",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["trước",{"_index":665,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["trường",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["trạng",{"_index":867,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["trống",{"_index":808,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":878,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":866,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["trống'})@isint({message",{"_index":962,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống'})@ismongoid({message",{"_index":933,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["trống'})@transform",{"_index":861,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ttl",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["tu",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{}}}],["tuyen",{"_index":1152,"title":{},"body":{"classes/Job.html":{}}}],["tuyển",{"_index":873,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/ResumesService.html":{}}}],["tuổi",{"_index":812,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["twitter",{"_index":2154,"title":{},"body":{"index.html":{}}}],["ty",{"_index":739,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["type",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CloudinaryController.html":{},"injectables/CloudinaryService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2168,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1521,"title":{},"body":{"injectables/PermissionsService.html":{},"dependencies.html":{}}}],["types.objectid(id",{"_index":1539,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["types/passport",{"_index":2012,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1686,"title":{},"body":{"classes/Role.html":{},"index.html":{}}}],["tác",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"classes/Role.html":{}}}],["tên",{"_index":807,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"classes/RegisterUserDto.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserLoginDto.html":{}}}],["tìm",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tính",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["tương",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/TransformInterceptor.html":{}}}],["tại",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["tất",{"_index":1832,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{}}}],["tồn",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tới",{"_index":1270,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tức",{"_index":1684,"title":{},"body":{"classes/Role.html":{}}}],["u",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"username",{"_index":1299,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('refresh_token",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":1571,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":2064,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CloudinaryController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2167,"title":{},"body":{"properties.html":{}}}],["update",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":1069,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":643,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1773,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1891,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecloudinarydto",{"_index":1825,"title":{"classes/UpdateCloudinaryDto.html":{}},"body":{"classes/UpdateCloudinaryDto.html":{},"coverage.html":{}}}],["updatecompanydto",{"_index":644,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":764,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":746,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":1045,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":1166,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1493,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1605,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1701,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.name",{"_index":1737,"title":{},"body":{"injectables/RolesService.html":{}}}],["updates",{"_index":1090,"title":{},"body":{"injectables/FilesService.html":{},"index.html":{}}}],["updatesubscriberdto",{"_index":1774,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1851,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.email",{"_index":1957,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefreshtoken",{"_index":1917,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload.options",{"_index":586,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["upload.options.ts",{"_index":1984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadapierrorresponse",{"_index":2179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uploadapiresponse",{"_index":2178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uploadedfile",{"_index":579,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{}}}],["uploadfile",{"_index":604,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1065,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":605,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/FilesController.html":{}}}],["uploadimage",{"_index":573,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["uploadimage(@uploadedfile",{"_index":592,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["uploadimage(file",{"_index":574,"title":{},"body":{"controllers/CloudinaryController.html":{}}}],["uploadstream",{"_index":612,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["upsert",{"_index":1817,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":932,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["useclass",{"_index":1080,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["usefilters",{"_index":1054,"title":{},"body":{"controllers/FilesController.html":{}}}],["usefilters(new",{"_index":1064,"title":{},"body":{"controllers/FilesController.html":{}}}],["useguards",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":578,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":591,"title":{},"body":{"controllers/CloudinaryController.html":{},"controllers/FilesController.html":{}}}],["user",{"_index":143,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@post('register",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1602,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.company",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.company._id",{"_index":1211,"title":{},"body":{"injectables/JobsService.html":{}}}],["user.createdat",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":788,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":790,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:22",{"_index":792,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:24",{"_index":791,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:29",{"_index":969,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":967,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":970,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":964,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":968,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:47",{"_index":961,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":971,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:57",{"_index":966,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:62",{"_index":1550,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:66",{"_index":1548,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:69",{"_index":1551,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:74",{"_index":1547,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:77",{"_index":1549,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:80",{"_index":1546,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:87",{"_index":1879,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:95",{"_index":1878,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":709,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.refreshtoken",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.company?._id",{"_index":1209,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["user?.permissions",{"_index":1257,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":1033,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdecorator",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":180,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@useguards(localauthguard)@useguards(throttlerguard)@post('/login')@responsemessage('user",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":828,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["userrole",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["userrole._id",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole?._id",{"_index":1034,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["users",{"_index":1483,"title":{},"body":{"classes/Permission.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1910,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1894,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1893,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1880,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":990,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":39,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":358,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":2126,"title":{},"body":{"index.html":{}}}],["v",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["v2",{"_index":607,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["va",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["vai",{"_index":944,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/RolesService.html":{}}}],["val",{"_index":1467,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["validate",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validate(enddate",{"_index":902,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validate(isendafterstartconstraint",{"_index":917,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validate(isendafterstartconstraint)@isnotempty({message",{"_index":859,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["validate(payload",{"_index":1275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1296,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":802,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":896,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validationarguments",{"_index":890,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validator",{"_index":803,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":891,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validatorconstraintinterface",{"_index":892,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["value",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["vao",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["variable",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2180,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vd",{"_index":1482,"title":{},"body":{"classes/Permission.html":{}}}],["version",{"_index":2165,"title":{},"body":{"properties.html":{}}}],["vi",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["video",{"_index":2118,"title":{},"body":{"index.html":{}}}],["vien",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["vietnam",{"_index":1028,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["visit",{"_index":2108,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2121,"title":{},"body":{"index.html":{}}}],["viên",{"_index":1015,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viết",{"_index":667,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/MailController.html":{}}}],["việc",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["viện",{"_index":1338,"title":{},"body":{"controllers/MailController.html":{}}}],["voi",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["void",{"_index":1114,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["vs",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["vào",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["vượt",{"_index":1122,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["với",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{}}}],["watch",{"_index":2058,"title":{},"body":{"index.html":{}}}],["website",{"_index":2152,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1345,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1437,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["working",{"_index":2107,"title":{},"body":{"index.html":{}}}],["world",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["xac",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["xem",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["xoa",{"_index":1741,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["xung",{"_index":729,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["xuống",{"_index":1689,"title":{},"body":{"classes/Role.html":{}}}],["xác",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["xóa",{"_index":755,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["y",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["you'd",{"_index":2145,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1419,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CloudinaryModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n\n@Controller()\nexport class AppController {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCloudinaryModule\n\nCloudinaryModule\n\nAppModule -->\n\nCloudinaryModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CloudinaryModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Connection } from 'mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\nimport { CloudinaryModule } from './cloudinary/cloudinary.module';\n\n@Module({\n  imports: [\n    //- cron job\n    ScheduleModule.forRoot(),\n\n    //- rate limit\n    ThrottlerModule.forRoot({\n      throttlers: [\n        {\n          ttl: 60000,\n          limit: 3,\n        },\n      ],\n    }),\n\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection: Connection) => {\n          //- điều này giúp sử dụng soft delete\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    //- configModule giúp sử dụng file .env\n    ConfigModule.forRoot({\n      isGlobal: true, //---> This is a global configuration để có thể sử dụng cònigModule trong các module khác\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n    CloudinaryModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World with Nest!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req: any, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ApiBody({type: UserLoginDto})@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Post('/login')@ResponseMessage('User login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ResponseMessage('Logout User')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: any, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get User by refresh token')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport {\n  Public,\n  ResponseMessage,\n  userDecorator,\n} from 'src/decorator/customize';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n\n  //-route nay se de public khong can xac thuc access_token voi JwtAuthGuard\n  @Public()\n  @ApiBody({ type: UserLoginDto }) //- vi dang login voi jwt thi phai khai bao type cho body\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  // @Throttle(5, 60) //- co the ghi de nhu nay\n  @Post('/login')\n  @ResponseMessage('User login')\n  handleLogin(@Req() req: any, @Res({ passthrough: true }) response: Response) {\n    //- req.user được passport tự động trả về khi xác thực thành công người dùng ở hàm validate của file Strategy, nó sẽ lấy giá trị trả về của hàm validate dán vào req.user\n    return this.authService.login(req.user, response);\n  }\n\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('register')\n  handleRegister(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.registerUser(registerUserDto);\n  }\n\n  @Get('account')\n  async getProfile(@userDecorator() user: IUser) {\n    //- để any vì ở hàm findOne có trả về thêm trường permissions bằng populate, nhưng biến temp lại không biết có thêm permission vì bên logic của findOne đau có định nghĩa\n    const temp = (await this.roleService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n\n  //- xử lý refresh token khi access_token hết hạn gặp lỗi 401 ( 401 là lỗi ko truyền access_token hoặc access_token hết hạn )\n  //-khi nhận code 401, client (frontend) sẽ TỰ ĐỘNG gọi API refresh_token, sử dụng token này để đổi lấy {access_token, refresh_token} mới.\n  @Public() //- phải để public vì khi này access_token đâu còn hợp lệ\n  @ResponseMessage('Get User by refresh token')\n  @Get('refresh')\n  async handleRefreshToken(\n    @Req() request: any,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n\n    return await this.authService.processNewToken(refreshToken, response);\n  }\n\n  @Post('logout')\n  @ResponseMessage('Logout User')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @userDecorator() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nAuthModule -->\n\nRolesService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    UsersModule,\n    PassportModule,\n    //-khai bao jwt cho nestjs\n    //- dung async de lay secret va expire tu env\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn:\n            ms(\n              (configService.get('JWT_ACCESS_EXPIRE') ??\n                '1d') as ms.StringValue, //-ép kiểu về ms.StringValue vì ms nó nhận ms.StringValue click vào ms để xem\n            ) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, RolesService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService, roleService: RolesService, jwtService: JwtService, userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(registerUserDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:146\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\nimport { Response } from 'express';\nimport ms from 'ms';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private roleService: RolesService,\n    private jwtService: JwtService,\n    @InjectModel(User.name) private userModel: SoftDeleteModel, //- tiêm vào để có thể tương tác vs csdl\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n\n  //-email va pass la 2 tham so ma thu vien passport se truyen vao\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.checkEmailExist(email);\n    if (user) {\n      //- co user\n      const isValid: boolean = this.usersService.isValidPassword(\n        pass,\n        user.password,\n      );\n      if (isValid) {\n        //-mat khau dung\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n\n        return objUser;\n      }\n    }\n    return null;\n  }\n\n  //-bất kỳ object nào có những 4 trường (_id,name,email,role) đều đủ điều kiện để được coi là IUser\n  async login(user: any, response: Response) {\n    const { _id, name, email, role, permissions, company } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n      company,\n    };\n\n    const refreshToken = this.createRefreshToken(payload);\n\n    //- update user with refreshToken\n    await this.usersService.updateUserRefreshToken(_id, refreshToken);\n\n    //-set refresh_token to cookie\n    response.clearCookie('refresh_token');\n    response.cookie('refresh_token', refreshToken, {\n      httpOnly: true,\n      //- maxAge là thoi gian hieu luc cua cookie tính theo ms\n      maxAge: ms(\n        this.configService.get('JWT_REFRESH_EXPIRE') as ms.StringValue,\n      ),\n    });\n\n    //- ngoài việc nhả ra token cho client thì ta trả thêm 1 số thông tin đi kèm\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions,\n        company,\n      },\n    };\n  }\n\n  async registerUser(registerUserDto: any) {\n    const email = registerUserDto.email;\n\n    const checkEmail = await this.usersService.checkEmailExist(email);\n    if (checkEmail) {\n      throw new BadRequestCustom(\n        'Email đã tồn tại hãy chọn một email khác!',\n        !!checkEmail,\n      );\n    }\n\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    if (!userRole) {\n      throw new BadRequestCustom('Không tìm thấy role người dùng!', !!userRole);\n    }\n\n    registerUserDto.role = userRole._id;\n\n    const hashPassword: string = this.usersService.getHashPassword(\n      registerUserDto.password,\n    );\n    registerUserDto.password = hashPassword;\n\n    const user = await this.userModel.create({\n      ...registerUserDto,\n      role: userRole._id,\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt,\n    };\n  }\n\n  createRefreshToken = (payload: any) => {\n    //- đây là cách để mình tạo ra refresh_token với jwt\n    const refreshToken = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(\n          this.configService.get(\n            'JWT_REFRESH_EXPIRE',\n          ) as ms.StringValue,\n        ) / 1000, //- ms: mili-seconds còn jwt là second (1 second = 1000 mili-seconds)\n    });\n\n    return refreshToken;\n  };\n\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      //-gia ma refresh_token để xem nó có hợp lệ hay ko (ko hợp lệ khi ko đúng định dang, hoặc refresh_token hết thời hạn - cái thời hạn đó do mình gán khi lưu vào cookie ở hàm login bên trên)\n      //1. giải mã\n      const decode = this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      //2.Lấy user id\n      const userId = decode._id;\n\n      if (!userId) {\n        throw new BadRequestException('Token payload thiếu userId');\n      }\n\n      // 3. Query user theo userId\n      const user = await this.usersService.findUser(userId);\n      if (!user) {\n        throw new BadRequestException('User không tồn tại');\n      }\n\n      // 4. So sánh xem token client gửi lên có khớp với cái lưu ở DB không\n      //    (tránh replay attack: token có thể bị hack rồi gọi lại API)\n      //- Cách này chỉ đảm bảo hacker không thể dùng một token “ngẫu nhiên” hay token cũ đã bị thu hồi, nhưng không ngăn được nếu hacker dùng token hợp lệ( chưa hết hạn refresh_token )\n      if (user.refreshToken !== refreshToken) {\n        throw new BadRequestException('Refresh token không khớp');\n      }\n\n      //-update refresh_token\n      const _id = user.id; //- cú phúp này lây ra id cơ sở dữ liệu (vì _id của mongoose là Object_id)\n      const { email, name, role } = user;\n\n      const userRole = user.role as unknown as { _id: string; name: string };\n      const temp = await this.roleService.findOne(userRole._id);\n\n      const payload = {\n        sub: 'token login',\n        iss: 'from server',\n        _id,\n        name,\n        email,\n        role,\n        permissions: temp?.permissions ?? [],\n        company: user.company ?? [],\n      };\n\n      const result = await this.login(payload, response);\n\n      return result;\n    } catch (error) {\n      throw new UnauthorizedException('Refresh_token khong hop le!');\n    }\n  };\n\n  logout = async (response: Response, user: IUser) => {\n    try {\n      const filter = { _id: user._id };\n      const update = {\n        $set: {\n          refreshToken: '',\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n      response.clearCookie('refresh_token');\n\n      if (result.matchedCount == 1) return 'OK';\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestCustom.html":{"url":"classes/BadRequestCustom.html","title":"class - BadRequestCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customExceptions/BadRequestCustom.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, isError)\n                    \n                \n                        \n                            \n                                Defined in src/customExceptions/BadRequestCustom.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isError\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class BadRequestCustom extends HttpException {\n  constructor(message: string, isError = true) {\n    super(\n      {\n        statusCode: isError ? 400 : 200,\n        message,\n        isOk: !isError,\n        isError,\n      },\n      isError ? HttpStatus.BAD_REQUEST : HttpStatus.OK,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cloudinary.html":{"url":"classes/Cloudinary.html","title":"class - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cloudinary/entities/cloudinary.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cloudinary {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CloudinaryController.html":{"url":"controllers/CloudinaryController.html","title":"controller - CloudinaryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CloudinaryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cloudinary/cloudinary.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cloudinary\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/cloudinary/cloudinary.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseInterceptors, UploadedFile } from '@nestjs/common';\nimport { CloudinaryService } from './cloudinary.service';;\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { fileUploadOptions } from './cloudinary/file-upload.options';\n\n@Controller('cloudinary')\nexport class CloudinaryController {\n  constructor(private readonly cloudinaryService: CloudinaryService) {}\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('fileUpload', fileUploadOptions))\n  async uploadImage(@UploadedFile() file: Express.Multer.File) {\n    const data = await this.cloudinaryService.uploadFile(file);\n    return data.secure_url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CloudinaryModule.html":{"url":"modules/CloudinaryModule.html","title":"module - CloudinaryModule","body":"\n                   \n\n\n\n\n    Modules\n    CloudinaryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CloudinaryModule\n\n\n\ncluster_CloudinaryModule_providers\n\n\n\ncluster_CloudinaryModule_exports\n\n\n\n\nCloudinaryService \n\nCloudinaryService \n\n\n\nCloudinaryModule\n\nCloudinaryModule\n\nCloudinaryService  -->\n\nCloudinaryModule->CloudinaryService \n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nCloudinaryModule -->\n\nCloudinaryService->CloudinaryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cloudinary/cloudinary.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CloudinaryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CloudinaryController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CloudinaryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CloudinaryService } from './cloudinary.service';\nimport { CloudinaryProvider } from './cloudinary/cloudinary';\nimport { CloudinaryController } from './cloudinary.controller';\n\n@Module({\n  providers: [CloudinaryService, CloudinaryProvider],\n  exports: [CloudinaryService, CloudinaryProvider],\n  controllers: [CloudinaryController],\n})\nexport class CloudinaryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CloudinaryService.html":{"url":"injectables/CloudinaryService.html","title":"injectable - CloudinaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CloudinaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cloudinary/cloudinary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cloudinary/cloudinary.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { v2 as cloudinary } from 'cloudinary';\nimport { CloudinaryResponse } from './cloudinary/cloudinary-response';\nimport streamifier from 'streamifier';\n\n@Injectable()\nexport class CloudinaryService {\n  uploadFile(file: Express.Multer.File): Promise {\n    return new Promise((resolve, reject) => {\n      const uploadStream = cloudinary.uploader.upload_stream(\n        (error, result) => {\n          if (error) return reject(error);\n          if (result) {\n            resolve(result as CloudinaryResponse);\n          } else {\n            reject(new Error('Upload failed with no result'));\n          }\n        },\n      );\n\n      streamifier.createReadStream(file.buffer).pipe(uploadStream);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get list companies with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ParseIntPipeCustom } from './dto/ParseInt.pipe';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new company')\n  create(\n    @Body() createCompanyDto: CreateCompanyDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.companiesService.createCompany(createCompanyDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Get list companies with paginate')\n  findAll(\n    //- vì trong main mình có config pipe global nên nó chạy trước cả pipe custom mình viết dưới này. Nếu để type tham số là string thì nó sẽ không chạy pipe global. Còn nếu để number thì nó sẽ chạy pipe global trước khi chạy pipe custom, đó là cách chạy của NestJS.\n    @Query('current', new ParseIntPipeCustom()) page: number,\n    @Query('pageSize', new ParseIntPipeCustom()) limit: number,\n    @Query() query: string,\n  ) {\n    return this.companiesService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  //- update Companies\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  imports: [\n    //- Đăng ký schema CompanySchema với Mongoose để sử dụng trong service\n    //- NestJS sẽ tự sinh ra một provider cho model Company\n    //- @InjectModel(Company.name) ở service sẽ lấy đúng provider đó\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCompany\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCompany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCompany(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n\n  async createCompany(createCompanyDto: CreateCompanyDto, user: IUser) {\n    try {\n      const result = await this.companyModel.create({\n        ...createCompanyDto,\n        createdBy: {\n          _id: user._id,\n          name: user.name,\n          email: user.email,\n        },\n      });\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any) //- xung đột type hàm sort của mongoose với sort của aqp\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id công ty không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkCompany = await this.companyModel.findById(id);\n      if (!checkCompany) {\n        throw new BadRequestCustom(`Không tìm thấy công ty với id ${id}`);\n      }\n\n      return checkCompany;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID Không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkCompany = await this.companyModel.findById(id);\n      if (!checkCompany) {\n        throw new BadRequestCustom(`Công ty có id: ${id} không tồn tại!`, !!id);\n      }\n\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateCompanyDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.companyModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      //- phải Re-throw để có thể nhận được trên response client\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID Không hợp lệ!', !!id);\n    }\n\n    //- 8.6\n\n    try {\n      const document = await this.companyModel.findOne({ _id: id });\n      if (!document) {\n        throw new BadRequestCustom(`Công ty có id: ${id} không tồn tại!`, !!id);\n      }\n\n      const isDelete = document.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Công ty này đã được xóa', !!isDelete);\n      }\n\n      await this.companyModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            deletedBy: {\n              _id: user._id,\n              name: user.name,\n              email: user.email,\n            },\n          },\n        },\n      );\n\n      const result = await this.companyModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument; //- đây là một kiểu dữ liệu mới được tạo ra từ HydratedDocument để đại diện cho một document của Company\n\n@Schema({ timestamps: true }) //- đánh dấu class Company là một schema trong mongoose timestamps: true sử dụng cho field createdAt và updatedAt\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company); //- tạo ra một schema từ class Company\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCloudinaryDto.html":{"url":"classes/CreateCloudinaryDto.html","title":"class - CreateCloudinaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCloudinaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cloudinary/dto/create-cloudinary.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCloudinaryDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Tên công ty không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công ty không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Mô tả công ty không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo công ty không được để trống' })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject({}, {message: 'Thông tin công ty không hợp lệ'})@IsObject({message: 'Thông tin công ty không hợp lệ'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEndAfterStartConstraint)@IsNotEmpty({message: 'End_Date không được để trống'})@Transform( => )@IsDate({message: 'End_Date không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Trang thái công việc không được để trống'})@IsBoolean({message: 'Trạng thái công việc không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ công việc không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên công việc không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Số lượng tuyển không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Lương không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Kỹ năng không được để trống'})@IsArray({message: 'Skills có định danh là array'})@IsString({each: true, message: 'Mỗi skill sẽ phải là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start_Date không được để trống'})@Transform( => )@IsDate({message: 'Start_Date không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Validate,\n  ValidateNested,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { Company as CompanyType } from 'src/users/dto/create-user.dto';\n\n//- start validate date\n//-@ValidatorConstraint là decorator do class-validator cung cấp, dùng để đánh dấu một class là một custom validation constraint.\n@ValidatorConstraint({ name: 'isEndAfterStart', async: false })\nclass IsEndAfterStartConstraint implements ValidatorConstraintInterface {\n  //- implements method\n  validate(endDate: string, args: ValidationArguments) {\n    const obj = args.object as any; //- args.object là object chính là createJobDto\n    const startDate = new Date(obj.startDate);\n    const end = new Date(endDate);\n    return end > startDate; //check xem endDate lớn hơn startDate hay khong\n  }\n\n  //- implements method\n  defaultMessage(args: ValidationArguments) {\n    //-Khi validate() trả về false, class-validator sẽ gọi defaultMessage()\n    return `endDate (${args.value}) phải lớn hơn startDate!`;\n  }\n}\n//- end validate date\n\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Tên công việc không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n\n  @IsNotEmptyObject({}, { message: 'Thông tin công ty không hợp lệ' })\n  @IsObject({ message: 'Thông tin công ty không hợp lệ' })\n  @ValidateNested()\n  @Type(() => CompanyType) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: CompanyType;\n\n  @IsNotEmpty({ message: 'Lương không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Số lượng tuyển không được để trống' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Mô tả không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công việc không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Start_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'Start_Date không hợp lệ' })\n  startDate: Date;\n\n  @Validate(IsEndAfterStartConstraint)\n  @IsNotEmpty({ message: 'End_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'End_Date không hợp lệ' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'Trang thái công việc không được để trống' })\n  @IsBoolean({ message: 'Trạng thái công việc không hợp lệ' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Method quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'Tên quyền không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath quyền không được để trống' })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'Method quyền không được để trống' })\n  method: string;\n\n  @IsNotEmpty({ message: 'Module quyền không được để trống' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống ' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả vai trò không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive vai trò không được để trống'})@IsBoolean({message: 'isActive phải có giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên vai trò không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions vai trò không được để trống'})@IsArray({message: 'isActive phải có dạng Array'})@IsMongoId({each: true, message: 'each permissions phải là dạng object id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'Tên vai trò không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Mô tả vai trò không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive vai trò không được để trống' })\n  @IsBoolean({ message: 'isActive phải có giá trị boolean' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permissions vai trò không được để trống' })\n  @IsArray({ message: 'isActive phải có dạng Array' })\n  @IsMongoId({ each: true, message: 'each permissions phải là dạng object id' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Kỹ năng không được để trống'})@IsArray({message: 'Skills có định danh là array'})@IsString({each: true, message: 'Mỗi skill sẽ phải là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEmail,\n  IsEmpty,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống ' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tuổi không được để trống'})@IsInt({message: 'Tuổi phải là số nguyên'})@Min(0, {message: 'Tuổi phải lớn hơn hoặc bằng 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Giới tính không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quyền không được để trống'})@IsMongoId({message: 'Role định dạng là mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.countDocuments({});\n      const countPermission = await this.permissionModel.countDocuments({});\n      const countRole = await this.roleModel.countDocuments({});\n\n      //create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        //bulk create\n      }\n\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/Ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: [], //không set quyền, chỉ cần add ROLE\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm Khoa\",\n            email: 'khoa@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 96,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)@ResponseMessage('Upload single file successfully')@UseFilters(new HttpExceptionFilter())\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n  UseFilters,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HttpExceptionFilter } from 'src/core/http-exception.filter';\n\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  @ResponseMessage('Upload single file successfully')\n  @UseFilters(new HttpExceptionFilter())\n  uploadFile(@UploadedFile() file: Express.Multer.File) {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from \"@nestjs/terminus\";\nimport { Public } from \"src/decorator/customize\";\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http-exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    //- custom response filter\n    response.status(status).json({\n      error: exception.message,\n      statusCode: status,\n      message:\n        'Dung lượng file vượt quá cho phép hoặc file không đúng định dạng',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    method: string;\n    module: string;\n  }[];\n\n  company?: {\n    _id: string;\n    name: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEndAfterStartConstraint.html":{"url":"classes/IsEndAfterStartConstraint.html","title":"class - IsEndAfterStartConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEndAfterStartConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(endDate: string, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/dto/create-job.dto.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Validate,\n  ValidateNested,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { Company as CompanyType } from 'src/users/dto/create-user.dto';\n\n//- start validate date\n//-@ValidatorConstraint là decorator do class-validator cung cấp, dùng để đánh dấu một class là một custom validation constraint.\n@ValidatorConstraint({ name: 'isEndAfterStart', async: false })\nclass IsEndAfterStartConstraint implements ValidatorConstraintInterface {\n  //- implements method\n  validate(endDate: string, args: ValidationArguments) {\n    const obj = args.object as any; //- args.object là object chính là createJobDto\n    const startDate = new Date(obj.startDate);\n    const end = new Date(endDate);\n    return end > startDate; //check xem endDate lớn hơn startDate hay khong\n  }\n\n  //- implements method\n  defaultMessage(args: ValidationArguments) {\n    //-Khi validate() trả về false, class-validator sẽ gọi defaultMessage()\n    return `endDate (${args.value}) phải lớn hơn startDate!`;\n  }\n}\n//- end validate date\n\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Tên công việc không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n\n  @IsNotEmptyObject({}, { message: 'Thông tin công ty không hợp lệ' })\n  @IsObject({ message: 'Thông tin công ty không hợp lệ' })\n  @ValidateNested()\n  @Type(() => CompanyType) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: CompanyType;\n\n  @IsNotEmpty({ message: 'Lương không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Số lượng tuyển không được để trống' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Mô tả không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công việc không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Start_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'Start_Date không hợp lệ' })\n  startDate: Date;\n\n  @Validate(IsEndAfterStartConstraint)\n  @IsNotEmpty({ message: 'End_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'End_Date không hợp lệ' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'Trang thái công việc không được để trống' })\n  @IsBoolean({ message: 'Trạng thái công việc không hợp lệ' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop() //- đánh dấu thuộc tính name là một field trong schema\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: number; //- sl tuyen\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  startDate?: Date;\n\n  @Prop()\n  endDate?: Date;\n\n  @Prop()\n  isActive?: boolean;\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job); //- tạo ra một schema từ class Job\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch jobs with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('fetch a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport {\n  Public,\n  ResponseMessage,\n  userDecorator,\n} from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new Job')\n  create(@Body() createJobDto: CreateJobDto, @userDecorator() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch jobs with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n    @userDecorator() user: IUser,\n  ) {\n    return this.jobsService.findAll(page, limit, query, user);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('fetch a job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a job')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a job')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }]), //- method .name lây tên model\n  ],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { listNameImages } from './imagesJob';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model JobDocument\n  ) {}\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    try {\n      const logo =\n        listNameImages[Math.floor(Math.random() * listNameImages.length)];\n      createJobDto.company.logo = logo;\n      const newJob = await this.jobModel.create({\n        ...createJobDto,\n        createdBy: {\n          _id: user._id,\n          name: user.name,\n          email: user.email,\n        },\n      });\n\n      return {\n        _id: newJob._id,\n        createdAt: newJob.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(\n    currentPage: number,\n    limit: number,\n    query: string,\n    user: IUser,\n  ) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    if (user?.company?._id) {\n      filter['company._id'] = user.company._id;\n    }\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkJob = await this.jobModel.findById(id);\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      return checkJob;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n    try {\n      const checkJob = await this.jobModel.findById(id);\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateJobDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.jobModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkJob = await this.jobModel.findById(id);\n\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      const isDelete = checkJob.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Job này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.jobModel.updateOne(filter, update);\n\n      const result = await this.jobModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    //- lấy ra metadata\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any, info: any, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    //- check permission phia back_end\n    const targetMethod = request.method;\n    const targetEnpoint = request.route?.path as string;\n\n    const permission = user?.permissions ?? [];\n    let isExist = permission.find(\n      (item: Permission) =>\n        item.apiPath === targetEnpoint && item.method === targetMethod,\n    );\n\n    //- public enpoind nay khong can check permission\n    if (targetEnpoint.startsWith('/api/v1/auth')) isExist = true;\n\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException('Bạn không có quyền truy cập');\n    }\n\n    return user; //- tới đây là ko còn lỗi => gán lại vào req.user và đi tiếp tới controller\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly roleService: RolesService,\n  ) {\n    //- giải mã jwt token\n    //- sử dụng ExtractJwt để lấy token từ header\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET') as string,\n    });\n  }\n\n  //- supper trên sẽ giúp ta decode và tự động dán vào payload cho hàm validate bên dưới và gọi nó luôn\n  async validate(payload: IUser) {\n    //- nói cách khác payload nó là data mà bên sign(payload) sử dụng\n    const { _id, name, email, role } = payload;\n\n    //- gan them permission cho req.user\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.roleService.findOne(userRole._id)).toObject();\n\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: temp?.permissions ?? [],\n      company: payload.company ?? []\n    }; //- nó sẽ gán vào req.user đấy\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/users/schemas/user.schema';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  //- nhận giá trị username và password từ request body client gửi lên\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password); //- xác thực\n    if (!user) {\n      throw new UnauthorizedException(\"Username or Password không hợp lệ!\");\n    }\n    return user; //req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 5 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport {\n  Subscriber,\n  SubscriberDocument,\n} from 'src/subscribers/schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron(\"0 5 0 * * 0\") //- run at 5:00 AM every Sunday\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills.length > 0) {\n        const jobs = jobWithMatchingSkills.map((job) => ({\n          name: job.name,\n          company: job.company.name,\n          salary: `${job.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n          skills: job.skills,\n        }));\n\n        //- hàm sendMail là thư viện đã viết sẵn cho rồi\n        await this.mailerService.sendMail({\n          to: 'khoalon89@gmail.com',\n          from: '\"Support Team\" ',\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job', //- ten file template,\n          context: {\n            //- truyen data qua template\n            receiver: subs.name,\n            jobs: jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJobsService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nMailModule -->\n\nSubscribersService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                        \n                            MailService\n                        \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\nimport { JobsService } from 'src/jobs/jobs.service';\nimport { SubscribersService } from 'src/subscribers/subscribers.service';\n\n@Module({\n  imports: [\n    //- cau hinh server gui email\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService, JobsService, SubscribersService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        const allowedFileTypes = [\n          'jpg',\n          'jpeg',\n          'png',\n          'gif',\n          'pdf',\n          'doc',\n          'docx',\n        ];\n        const fileExtension = file.originalname\n          .split('.')\n          .pop()\n          ?.toLowerCase() as string;\n        const isValidFileType = allowedFileTypes.includes(fileExtension);\n\n        if (!isValidFileType) {\n          cb(\n            new HttpException(\n              'Invalid file type',\n              HttpStatus.UNPROCESSABLE_ENTITY,\n            ),\n            false,\n          );\n        } else cb(null, true);\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 2, // 2MB\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseIntPipeCustom.html":{"url":"injectables/ParseIntPipeCustom.html","title":"injectable - ParseIntPipeCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseIntPipeCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/ParseInt.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/dto/ParseInt.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\n\n@Injectable()\nexport class ParseIntPipeCustom {\n  transform(value: string, metadata: any) {\n    const val = parseInt(value, 10);\n    if (isNaN(val) || val \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string; //- cái này để biết quyền này là của module nào vd: của users, companies, ...\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission); //- tạo ra một schema từ class Permission\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission  by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new permission!')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch permissions with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.permissionsService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission  by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission!')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a permission')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }]), //- method .name lây tên model\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose, { Types } from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(dto: CreatePermissionDto, user: IUser) {\n    const { apiPath, method, name, module } = dto;\n\n    // 1. Check tồn tại (bao gồm cả bản đã soft-delete)\n    const existing = await this.permissionModel\n      .findOne({ apiPath, method })\n      .exec();\n    if (existing) {\n      throw new ConflictException(\n        `Permission cho [${method} ${apiPath}] đã tồn tại`,\n      );\n    }\n\n    // 2. Tạo mới\n    try {\n      const permission = await this.permissionModel.create({\n        name,\n        apiPath,\n        method,\n        module,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n      return {\n        _id: permission._id,\n        createdAt: permission.createdAt,\n      };\n    } catch (err) {\n      throw new BadRequestCustom(err.message, !!err.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population, projection } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.permissionModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id permission không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkPermission = await this.permissionModel.findById(id);\n      if (!checkPermission) {\n        throw new BadRequestCustom(`Không tìm thấy permission với id ${id}`);\n      }\n\n      return checkPermission;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(\n    id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    const { apiPath, method, name, module } = updatePermissionDto;\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Permission không hợp lệ!', !!id);\n    }\n\n    const checkExistPermission = await this.permissionModel.findById(id);\n    if (!checkExistPermission) {\n      throw new BadRequestCustom(`Không tìm thấy Permission với id ${id}`);\n    }\n\n    const conflict = await this.permissionModel\n      .findOne({\n        apiPath,\n        method,\n        _id: { $ne: new Types.ObjectId(id) }, //- bỏ đứa đang sửa đi\n      })\n      .exec();\n    if (conflict) {\n      throw new ConflictException(\n        `Permission cho [${method} ${apiPath}] đã tồn tại`,\n      );\n    }\n\n    try {\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          ...updatePermissionDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.permissionModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {}\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id permission không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkpermission = await this.permissionModel.findById(id);\n\n      if (!checkpermission) {\n        throw new BadRequestCustom(`Không tìm thấy permission với id ${id}`);\n      }\n\n      const isDelete = checkpermission.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Permission này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.permissionModel.updateOne(filter, update);\n\n      const result = await this.permissionModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tuổi không được để trống'})@IsInt({message: 'Tuổi phải là số nguyên'})@Min(0, {message: 'Tuổi phải lớn hơn hoặc bằng 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Giới tính không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            isError\n                                        \n                                \n                                \n                                        \n                                            isOk\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOk:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n  isOk: boolean;\n  isError: boolean;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    \n    const response = context.switchToHttp().getResponse();\n    const message =\n      this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ?? '';\n\n    return next.handle().pipe(\n      //- data trong hàm map của rxJs lấy giá trị return của endpoint tương ứng ở controller\n      map((data: T) => {\n        const statusCode = response.statusCode;\n        const isOk = statusCode \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume); //- tạo ra một schema từ class Resume\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getHistoryJob\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHistoryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoryJob(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get Resumes by User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(\n    @Body() createUserCvDto: CreateUserCvDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.create(createUserCvDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all resumes with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.findAll(page, limit, query, user);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status resume')\n  update(\n    @Param('id') id: string,\n    @Body() updateResumeDto: UpdateResumeDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a resume by id')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get Resumes by User')\n  getHistoryJob(@userDecorator() user: IUser) {\n    return this.resumesService.getHistoryJobByUserId(user._id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]), //- method .name lây tên model\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getHistoryJobByUserId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHistoryJobByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoryJobByUserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport aqp from 'api-query-params';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model ResumeDocument\n  ) {}\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    try {\n      const newResume = await this.resumeModel.create({\n        ...createUserCvDto,\n        email: user.email,\n        userId: user._id,\n        status: 'PENDING',\n        history: [\n          {\n            status: 'PENDING',\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user._id,\n              name: user.name,\n            },\n          },\n        ],\n        createdBy: {\n          _id: user._id,\n          email: user._id,\n          name: user.name,\n        },\n      });\n\n      return {\n        _id: newResume._id,\n        createdAt: newResume.createdAt,\n      };\n    } catch (error) {}\n  }\n\n  async findAll(\n    currentPage: number,\n    limit: number,\n    query: string,\n    user: IUser,\n  ) {\n    //- projection: chọn field trả về (ví dụ { title: 1, content: 1 })\n    const { filter, sort, population, projection } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    if (user?.company?._id) {\n      filter.companyId = user?.company?._id;\n    }\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      return checkResume;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n    const { status } = updateResumeDto;\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      const data = {\n        status,\n        updatedAt: new Date(),\n        updatedBy: {\n          _id: user._id,\n          email: user._id,\n          name: user.name,\n        },\n      };\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          status,\n          updatedBy: {\n            _id: user._id,\n            email: user._id,\n            name: user.name,\n          },\n          history: [...checkResume.history, data],\n        },\n      };\n\n      const result = await this.resumeModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      const isDelete = checkResume.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Resume này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.resumeModel.updateOne(filter, update);\n\n      const result = await this.resumeModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async getHistoryJobByUserId(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id User không hợp lệ!', !!id);\n    }\n    try {\n      const checkExist = await this.resumeModel\n        .find({\n          userId: id,\n          isDeleted: false, //- không cần lắm vì nó tự loại ra đứa nào có isDeleted == true rồi\n        })\n        .sort('-createdAt') //- lấy những cái gần nhất\n        .populate([\n          {\n            path: 'companyId',\n            select: { name: 1 },\n          },\n          {\n            path: 'jobId',\n            select: { name: 1 },\n          },\n        ]);\n\n      if (!checkExist) {\n        throw new BadRequestCustom('User này chưa có ứng tuyển nào!', !!id);\n      }\n\n      return checkExist;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role); //- tạo ra một schema từ class Role\n\n/*\n\n Giải thích đoạn code sau:  \n @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n permissions: Permission[];\n\n  type: [mongoose.Schema.Types.ObjectId]\n  Cho biết trường này là một mảng các ObjectId.\n\n  ref: Permission.name\n  Nói với Mongoose rằng mỗi ObjectId trong mảng sẽ tham chiếu đến collection được đặt tên bằng Permission.name (tức tên model “Permission”).\n\n  permissions: Permission[];\n  Về mặt TypeScript, khai báo kiểu mảng Permission[] để dễ thao tác (nhưng thực ra khi lưu xuống database là mảng ObjectId).\n\n  Khi gọi .populate('permissions') trên query, Mongoose sẽ tự động “thay” mỗi ObjectId thành document tương ứng từ collection permissions.\n*/\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch roles with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @userDecorator() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch roles with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.rolesService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('fetch a role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a role')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a role')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]), //- method .name lây tên model\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    try {\n      const checkExist = await this.roleModel.findOne({\n        name: createRoleDto.name,\n      });\n      if (checkExist) {\n        throw new Error(`Vai trò ${createRoleDto.name} đã tồn tại!`);\n      }\n\n      const Role = await this.roleModel.create({\n        ...createRoleDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n\n      return {\n        _id: Role._id,\n        createdAt: Role.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Role không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkRole = await this.roleModel.findById(id).populate({\n        path: 'permissions',\n        select: { _id: 1, name: 1, method: 1, apiPath: 1, module: 1 },\n      });\n      if (!checkRole) {\n        throw new BadRequestCustom(`Không tìm thấy Role với id ${id}`);\n      }\n\n      return checkRole;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkExistDocument = await this.roleModel.findById(id);\n      if (!checkExistDocument) {\n        throw new BadRequestCustom(`Không tìm thấy role với id ${id}`, !!id);\n      }\n\n      // const existNameRole = await this.roleModel.findOne({\n      //   name: updateRoleDto.name,\n      // });\n\n      // if (existNameRole) {\n      //   throw new BadRequestCustom(\n      //     `Vai trò ${updateRoleDto.name} đã tồn tại!`,\n      //     !!updateRoleDto.name,\n      //   );\n      // }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          ...updateRoleDto,\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n            name: user.name,\n          },\n        },\n      };\n\n      const result = await this.roleModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Role không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkRole = await this.roleModel.findById(id);\n\n      if (!checkRole) {\n        throw new BadRequestCustom(`Không tìm thấy Role với id ${id}`);\n      }\n\n      const isDelete = checkRole.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Role này đã được xóa', !!isDelete);\n      }\n\n      //- khong cho xoa admin\n      if (checkRole.name === ADMIN_ROLE) {\n        throw new BadRequestCustom('Không được phép xóa Role admin!', !!checkRole);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.roleModel.updateOne(filter, update);\n\n      const result = await this.roleModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber); //- tạo ra một schema từ class Subscriber\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('findAll subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('FindOne subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get subscriber skill')@skipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@skipCheckPermission()@ResponseMessage('Update subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, skipCheckPermission, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('Create subscriber successfully')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post(\"skills\")\n  @ResponseMessage('Get subscriber skill')\n  @skipCheckPermission()\n  getUserSkills(@userDecorator() user: IUser) {\n    return this.subscribersService.getUserSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage('findAll subscriber successfully')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.subscribersService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('FindOne subscriber successfully')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @skipCheckPermission()\n  @ResponseMessage('Update subscriber successfully')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete subscriber successfully')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getUserSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    try {\n      const { name, email, skills } = createSubscriberDto;\n      const isExistEmail = await this.subscriberModel.findOne({ email });\n      if (isExistEmail) {\n        throw new BadRequestCustom('Email đăng ký nhận thông báo đã tồn tại');\n      }\n      const subscriber = await this.subscriberModel.create({\n        name,\n        email,\n        skills,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n      return {\n        _id: subscriber._id,\n        createdAt: subscriber.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.subscriberModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id subscriber không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkSubscriber = await this.subscriberModel.findById(id);\n      if (!checkSubscriber) {\n        throw new BadRequestCustom(`Không tìm thấy subscriber với id ${id}`);\n      }\n\n      return checkSubscriber;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    try {\n      const checkExistDocument = await this.subscriberModel.find({\n        email: user.email,\n      });\n      if (!checkExistDocument) {\n        throw new BadRequestCustom(\n          `Không tìm thấy subscriber với email ${user.email}`,\n          !!user.email,\n        );\n      }\n\n      const filter = { email: user.email };\n      const update = {\n        $set: {\n          ...updateSubscriberDto,\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n            name: user.name,\n          },\n        },\n      };\n\n      const result = await this.subscriberModel.updateOne(filter, update, {\n        upsert: true,\n      });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id subscriber không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkSubscriber = await this.subscriberModel.findById(id);\n\n      if (!checkSubscriber) {\n        throw new BadRequestCustom(`Không tìm thấy subscriber với id ${id}`);\n      }\n\n      const isDelete = checkSubscriber.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Subscriber này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.subscriberModel.updateOne(filter, update);\n\n      const result = await this.subscriberModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async getUserSkills(user: IUser) {\n    try {\n      const result = await this.subscriberModel\n        .findOne({ email: user.email })\n        .select('skills');\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n  isOk: boolean;\n  isError: boolean;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    \n    const response = context.switchToHttp().getResponse();\n    const message =\n      this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ?? '';\n\n    return next.handle().pipe(\n      //- data trong hàm map của rxJs lấy giá trị return của endpoint tương ứng ở controller\n      map((data: T) => {\n        const statusCode = response.statusCode;\n        const isOk = statusCode \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCloudinaryDto.html":{"url":"classes/UpdateCloudinaryDto.html","title":"class - UpdateCloudinaryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCloudinaryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cloudinary/dto/update-cloudinary.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCloudinaryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCloudinaryDto } from './create-cloudinary.dto';\n\nexport class UpdateCloudinaryDto extends PartialType(CreateCloudinaryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n//- tất cả các trường của CreateCompanyDto trở thành không bắt buộc (optional) kh sử dụng PartialType\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n//- PartialType sẽ mở rộng (extend) DTO gốc và tự động đặt tất cả các thuộc tính thành optional.\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  // @IsNotEmpty({ message: 'Id không được để trống' })\n  // _id: string;\n}\n//- omit sẽ giúp chúng ta loại bỏ các trường không cần thiết trong DTO\n//- ở đây chúng ta loại bỏ trường password trong DTO UpdateUserDto\n//- chúng ta sẽ không cần nhập trường password khi update thông tin user\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument; //- đây là một kiểu dữ liệu mới được tạo ra từ HydratedDocument để đại diện cho một document của User\n\n@Schema({ timestamps: true }) //- đánh dấu class User là một schema trong mongoose timestamps: true sử dụng cho field createdAt và updatedAt\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true }) //- đánh dấu thuộc tính name là một field trong schema\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  isDeleted?: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  deletedAt?: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User); //- tạo ra một schema từ class User\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'khoa@gmail.com', description: 'userName'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch users with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@Public()@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ResponseMessage('Delete a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage('Create a new User')\n  create(@Body() createUserDto: CreateUserDto, @userDecorator() user: IUser) {\n    //- @Body() === req.body\n    return this.usersService.create(createUserDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch users with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.usersService.findAll(page, limit, query);\n  }\n\n  @Get('/:id')\n  @Public()\n  @ResponseMessage('Fetch user by id')\n  findUser(@Param('id') id: string) {\n    return this.usersService.findUser(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a User')\n  update(\n    @Body() updateUserDto: UpdateUserDto,\n    @userDecorator() user: IUser,\n    @Param('id') id: string,\n  ) {\n    return this.usersService.update(updateUserDto, user, id);\n  }\n\n  @Delete('/:id')\n  @ResponseMessage('Delete a User')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), //- import model mongoose  vào để nó có thể sử dụng nó trong service của users module. Nói cách khác là đang để cho 2 module là mongodb module với users module có thể giao tiếp với nhau\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByRefreshToken\n                            \n                            \n                                updateUserRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmailExist\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExist(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n            \n                \ngetHashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hashPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:238\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:215\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport mongoose from 'mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model UserDocument\n  ) {}\n\n  getHashPassword(password: string): string {\n    const salt: string = genSaltSync(10);\n    const hash: string = hashSync(password, salt);\n    return hash;\n  }\n\n  async create(createUserDto: CreateUserDto, user: IUser) {\n    const email = createUserDto.email;\n\n    const checkEmail = await this.userModel.findOne({ email });\n    if (checkEmail) {\n      throw new BadRequestCustom(\n        'Email đã tồn tại hãy chọn một email khác!',\n        !!checkEmail,\n      );\n    }\n\n    const hashPassword: string = this.getHashPassword(createUserDto.password);\n    createUserDto.password = hashPassword;\n\n    const createUser = await this.userModel.create({\n      ...createUserDto,\n      createdBy: {\n        _id: user._id,\n        name: user.name,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: createUser._id,\n      createdAt: createUser.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findUser(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n\n    try {\n      const user = await this.userModel\n        .findById(id)\n        .select('-password')\n        .populate({ path: 'role', select: { name: 1, _id: 1 } });\n      if (!user) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!', !!user);\n      }\n\n      return user;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  isValidPassword(password: string, hashPassword: string): boolean {\n    return compareSync(password, hashPassword);\n  }\n\n  async checkEmailExist(email: string) {\n    return await this.userModel\n      .findOne({ email })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser, id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom(\n        'Id người dùng không hợp lệ!',\n        !!id,\n      );\n    }\n    try {\n      const checkUser = await this.userModel.findById(id);\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const filterEmail = {\n        email: updateUserDto.email,\n        _id: { $ne: id }, //- trừ đứa đang cần update ra(ne--->not equal)\n      };\n      const checkEmail = await this.userModel.findOne(filterEmail);\n      if (checkEmail) {\n        throw new BadRequestCustom(\n          'Email đã tồn tại hãy chọn một email khác!',\n          !!checkEmail,\n        );\n      }\n\n      //- nếu có thì để nguyên không thì lấy người tạo là người đang login\n      const createdBy = checkUser.createdBy\n        ? checkUser.createdBy\n        : {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          };\n\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateUserDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n          createdBy,\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkUser = await this.userModel.findById(id);\n\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const isDelete = checkUser.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Người dùng này đã được xóa', !!isDelete);\n      }\n\n      //- ko cho xoa admin\n      if (checkUser.email === 'admin@gmail.com') {\n        throw new BadRequestCustom(\n          'Không được phép xóa người admin!',\n          !!checkUser,\n        );\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.userModel.updateOne(filter, update);\n\n      //- hàm softDelete là của soft-delete-plugin-mongoose nó sẽ giúp thêm 2 field deletedAt và isDeleted vào csdl\n      const result = await this.userModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  updateUserRefreshToken = async (id: string, refreshToken: string) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n    try {\n      const checkUser = await this.userModel.findById(id);\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          refreshToken,\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  };\n\n  findUserByRefreshToken = async (refreshToken: string) => {\n    if (!refreshToken) {\n      throw new BadRequestCustom('Refresh token không hợp lệ!', !!refreshToken);\n    }\n    return await this.userModel.findOne({ refreshToken });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cloudinary/cloudinary.controller.ts\n            \n            controller\n            CloudinaryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cloudinary/cloudinary.service.ts\n            \n            injectable\n            CloudinaryService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/cloudinary/cloudinary/cloudinary-response.ts\n            \n            type alias\n            CloudinaryResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/cloudinary/cloudinary/cloudinary.ts\n            \n            variable\n            CloudinaryProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/cloudinary/cloudinary/file-upload.options.ts\n            \n            variable\n            fileUploadOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cloudinary/dto/create-cloudinary.dto.ts\n            \n            class\n            CreateCloudinaryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cloudinary/dto/update-cloudinary.dto.ts\n            \n            class\n            UpdateCloudinaryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cloudinary/entities/cloudinary.entity.ts\n            \n            class\n            Cloudinary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/ParseInt.pipe.ts\n            \n            injectable\n            ParseIntPipeCustom\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customExceptions/BadRequestCustom.ts\n            \n            class\n            BadRequestCustom\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            skipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            userDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            IsEndAfterStartConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/imagesJob.ts\n            \n            variable\n            listNameImages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 2.0.2\n        \n            @nestjs/common : ^11.1.5\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.1.5\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : 2.1.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.1.5\n        \n            @nestjs/schedule : 6.0.0\n        \n            @nestjs/swagger : 11.2.0\n        \n            @nestjs/terminus : 11.0.0\n        \n            @nestjs/throttler : 6.4.0\n        \n            @types/passport-local : ^1.0.38\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : ^3.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            cloudinary : ^2.7.0\n        \n            cookie-parser : ^1.4.7\n        \n            cron : 4.3.2\n        \n            handlebars : 4.7.8\n        \n            helmet : 8.1.0\n        \n            mongoose : ^8.16.4\n        \n            ms : 2.1.3\n        \n            nodemailer : 7.0.5\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.2\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n        \n            streamifier : ^0.1.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CloudinaryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CloudinaryModule\n\n\n\ncluster_CloudinaryModule_exports\n\n\n\ncluster_CloudinaryModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCloudinaryModule\n\nCloudinaryModule\n\nAppModule -->\n\nCloudinaryModule->AppModule\n\n\n\n\n\nCloudinaryService \n\nCloudinaryService \n\nCloudinaryService  -->\n\nCloudinaryModule->CloudinaryService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nAuthModule -->\n\nRolesService->AuthModule\n\n\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nCloudinaryModule -->\n\nCloudinaryService->CloudinaryModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\nMailModule -->\n\nJobsService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nMailModule -->\n\nSubscribersService->MailModule\n\n\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CloudinaryResponse   (src/.../cloudinary-response.ts)\n                        \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cloudinary/cloudinary/cloudinary-response.ts\n    \n    \n        \n            \n                \n                    \n                    CloudinaryResponse\n                \n            \n            \n                \n                            UploadApiResponse | UploadApiErrorResponse\n\n                \n            \n        \n    \n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CloudinaryProvider   (src/.../cloudinary.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            fileUploadOptions   (src/.../file-upload.options.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            listNameImages   (src/.../imagesJob.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            skipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            userDecorator   (src/.../customize.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/cloudinary/cloudinary/cloudinary.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CloudinaryProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: 'CLOUDINARY',\n  useFactory: async (configService: ConfigService) => {\n    return cloudinary.config({\n      cloud_name: configService.get('CLOUDINARY_NAME'),\n      api_key: configService.get('CLOUDINARY_API_KEY'),\n      api_secret: configService.get('CLOUDINARY_API_SECRET'),\n    });\n  },\n  inject: [ConfigService],\n}\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/cloudinary/cloudinary/file-upload.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileUploadOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MulterModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  storage: multer.memoryStorage(),\n  fileFilter: (req, file, cb) => {\n    const allowedFileTypes = [\n      'jpg',\n      'jpeg',\n      'png',\n      'gif',\n      'pdf',\n      'doc',\n      'docx',\n    ];\n    const fileExtension = file.originalname\n      .split('.')\n      .pop()\n      ?.toLowerCase() as string;\n    if (!allowedFileTypes.includes(fileExtension)) {\n      return cb(\n        new HttpException('Invalid file type', HttpStatus.UNPROCESSABLE_ENTITY),\n        false,\n      );\n    }\n    cb(null, true);\n  },\n  limits: {\n    fileSize: 2 * 1024 * 1024, // 2 MB\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/jobs/imagesJob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listNameImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'amzon-1686574798358.jpg',\n  'apple-1686574900663.jpg',\n  'google-1686574998397.png',\n  'lazada-1686575062887.png',\n  'netflix-1686706116042.png',\n  'photoshop-1686575180007.png',\n  'pr-1686575233601.jpg',\n  'shopee-1686575294231.png',\n  'tiki-1686575455267.jpg',\n  'tiktok-1686575523674.jpg',\n]\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
