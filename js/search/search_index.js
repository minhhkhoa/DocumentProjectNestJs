var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.065,1,3.01]],["body/controllers/AppController.html",[0,1.93,1,5.453,2,1.823,3,0.183,4,0.163,5,0.123,6,5.618,7,0.246,8,0.012,9,0.925,10,0.183,11,0.286,12,2.45,13,0.011,14,0.011]],["title/modules/AppModule.html",[15,0.97,16,3.01]],["body/modules/AppModule.html",[1,4.328,2,1.441,3,0.101,4,0.09,5,0.097,7,0.318,8,0.012,9,0.511,10,0.101,11,0.158,13,0.007,14,0.007,15,1.523,16,6.203,17,1.454,18,1.508,19,1.629,20,1.629,21,1.508,22,2.723,23,1.629,24,3.104,25,3.104,26,3.104,27,4.849,28,4.849,29,4.849,30,4.849,31,4.849,32,4.849,33,4.849,34,4.849,35,4.849,36,4.849,37,4.849,38,4.556,39,4.849,40,2.332,41,1.629,42,1.567,43,3.55,44,2.723,45,3.55,46,3.55,47,5.187,48,4.138,49,2.143,50,1.769,51,0.946,52,3.55,53,3.55,54,3.55,55,2.428,56,1.749,57,1.696,58,1.397,59,6.478,60,3.55,61,3.55,62,3.55,63,3.55,64,3.55,65,3.55,66,3.55,67,3.55,68,3.55,69,3.55,70,2.809,71,3.55,72,2.809,73,3.55,74,2.809,75,1.696,76,3.55,77,3.55,78,2.159,79,3.55,80,2.532,81,3.104,82,2.809,83,1.849,84,3.55,85,3.55,86,1.222,87,3.55,88,4.442,89,2.414,90,3.55,91,3.104,92,3.55,93,2.809,94,1.354,95,3.55,96,3.55,97,3.55,98,3.104,99,1.629,100,3.706,101,1.793,102,2.186,103,3.55,104,0.916,105,2.809,106,3.104,107,3.55,108,3.55,109,1.073,110,3.104,111,3.55,112,0.888,113,2.034,114,3.55,115,2.414,116,2.414]],["title/injectables/AppService.html",[39,2.806,117,0.777]],["body/injectables/AppService.html",[3,0.175,4,0.156,5,0.118,7,0.235,8,0.012,9,0.886,10,0.175,11,0.274,13,0.01,14,0.01,39,4.957,104,1.589,117,1.373,118,2.191,119,5.381,120,0.709,121,1.941,122,8.028,123,0.855,124,6.156,125,1.64,126,1.012,127,6.156,128,6.156,129,5.381]],["title/controllers/AuthController.html",[0,1.065,130,3.01]],["body/controllers/AuthController.html",[0,0.777,2,0.853,3,0.086,4,0.076,5,0.086,7,0.285,8,0.012,9,0.433,10,0.086,11,0.134,12,1.147,13,0.006,14,0.006,72,2.38,86,1.036,89,3.061,91,2.63,94,2.564,99,2.065,101,1.63,102,1.108,104,1.654,109,1.63,112,1.498,120,0.347,121,1.199,123,0.89,125,1.707,130,3.283,131,2.63,132,1.437,133,2.63,134,4.501,135,4.501,136,5.393,137,5.393,138,4.501,139,3.008,140,2.482,141,1.654,142,4.501,143,3.008,144,1.818,145,0.681,146,0.9,147,1.328,148,2.109,149,2.243,150,3.008,151,4.909,152,3.008,153,3.008,154,4.267,155,3.008,156,5.233,157,3.008,158,3.008,159,3.008,160,3.008,161,3.008,162,5.393,163,3.008,164,3.008,165,3.008,166,3.852,167,3.008,168,1.36,169,3.008,170,3.008,171,2.344,172,1.567,173,5.233,174,3.008,175,2.194,176,2.38,177,3.008,178,3.255,179,2.38,180,3.668,181,1.437,182,2.344,183,1.327,184,2.717,185,1.723,186,1.922,187,1.816,188,1.278,189,2.344,190,2.194,191,3.008,192,4.501,193,1.567,194,0.97,195,3.008,196,3.008,197,2.065,198,2.38,199,3.008,200,3.935,201,2.63,202,3.935,203,1.922,204,3.008,205,3.008,206,5.879,207,4.501,208,2.194,209,3.008,210,2.63,211,2.046,212,3.008,213,3.008,214,2.38,215,2.38,216,3.008,217,3.008,218,3.008,219,2.38,220,3.008,221,3.008,222,3.008,223,3.008,224,3.008,225,5.393,226,3.283,227,2.046,228,1.405,229,2.065,230,2.747,231,2.656,232,3.613,233,2.63,234,2.38,235,2.194,236,2.046,237,2.194,238,2.046,239,3.089,240,2.344,241,2.577,242,2.38,243,1.38,244,2.578,245,2.046,246,2.63,247,1.723,248,3.008,249,3.008,250,3.008,251,3.008,252,3.008,253,3.008,254,1.843,255,3.562,256,2.046,257,1.567,258,1.922,259,2.38,260,2.38,261,3.008,262,3.562,263,2.38,264,0.881,265,2.38,266,1.327,267,2.38,268,3.008,269,3.008,270,1.437,271,3.008,272,1.199,273,2.065,274,3.008,275,3.008,276,3.008,277,2.63,278,1.482,279,3.934,280,3.562,281,3.935,282,3.008,283,3.935,284,5.393,285,2.194,286,3.008,287,1.922,288,2.046,289,2.63,290,2.194,291,3.008,292,1.922,293,1.567,294,3.935,295,2.194,296,1.567,297,2.63,298,2.194,299,1.188,300,2.194,301,3.008,302,2.194,303,3.008,304,3.008,305,3.008,306,3.008,307,3.008]],["title/modules/AuthModule.html",[15,0.97,27,2.806]],["body/modules/AuthModule.html",[2,1.604,3,0.118,4,0.105,5,0.079,7,0.315,8,0.012,9,0.595,10,0.118,11,0.184,13,0.008,14,0.008,15,1.514,17,1.693,18,1.757,19,1.898,20,1.898,21,1.757,22,2.956,23,2.956,27,5.639,38,4.782,40,2.594,41,1.898,42,1.825,44,2.956,47,4.943,48,4.424,49,2.496,50,2.061,51,1.102,86,1.424,93,3.273,94,2.156,105,3.273,106,3.615,130,4.699,145,0.601,148,1.137,178,4.917,179,3.273,189,3.898,190,3.017,202,3.615,211,2.812,214,3.273,215,3.273,231,2.233,243,1.898,247,2.369,288,2.812,308,3.615,309,4.136,310,3.615,311,3.615,312,5.09,313,5.09,314,4.136,315,4.136,316,5.654,317,2.642,318,4.136,319,4.136,320,3.273,321,4.136,322,5.738,323,4.136,324,3.612,325,2.812,326,1.523,327,3.612,328,2.812,329,2.496,330,3.615,331,4.136,332,4.943,333,3.615,334,4.136,335,4.136,336,4.136,337,3.615,338,4.136,339,3.615,340,4.136,341,4.136,342,5.632,343,4.136,344,3.017,345,4.136,346,3.017,347,3.615,348,2.154,349,2.154,350,2.233,351,3.017]],["title/injectables/AuthService.html",[117,0.777,178,2.491]],["body/injectables/AuthService.html",[3,0.056,4,0.05,5,0.038,7,0.273,8,0.012,9,0.285,10,0.056,11,0.088,12,1.236,13,0.005,14,0.005,48,3.599,49,1.195,51,0.527,55,0.946,56,0.681,57,0.946,58,0.891,81,1.73,82,1.566,83,2.477,86,0.681,88,1.73,94,2.581,98,1.73,99,1.487,101,0.979,104,1.535,109,0.598,112,1.654,113,2.724,116,1.346,117,0.61,118,0.705,120,0.228,121,0.863,123,0.826,125,1.096,126,0.96,140,1.465,144,1.349,145,0.735,146,0.614,147,0.986,148,1.989,149,2.37,151,4.171,154,4.152,166,1.856,168,1.798,178,1.956,187,1.195,188,0.841,189,2.477,190,1.444,197,2.585,198,3.256,201,1.73,203,1.265,206,1.73,210,1.73,211,2.204,219,1.566,227,1.346,229,0.908,230,0.908,231,0.782,232,1.956,237,1.444,238,2.798,239,1.134,241,0.946,243,0.908,247,1.856,255,1.566,256,1.346,257,2.477,260,1.566,262,2.564,263,1.566,264,1.536,267,1.566,270,1.548,272,2.096,273,3.033,278,1.706,279,4.687,280,2.564,281,3.597,285,3.001,287,1.265,290,2.364,292,1.265,293,1.031,294,4.925,297,1.73,298,1.444,299,1.625,302,4.687,320,1.566,322,4.458,325,1.346,326,2.286,328,1.346,330,1.73,332,2.833,333,1.73,339,1.73,342,2.833,346,2.364,347,2.833,352,1.73,353,0.919,354,4.115,355,4.115,356,4.115,357,3.241,358,3.241,359,1.73,360,3.244,361,5.948,362,3.256,363,3.097,364,3.256,365,1.979,366,3.241,367,1.979,368,3.241,369,1.979,370,3.241,371,4.587,372,1.979,373,1.817,374,2.833,375,2.798,376,2.357,377,1.979,378,1.979,379,1.979,380,1.979,381,1.566,382,1.265,383,1.566,384,1.548,385,1.08,386,1.031,387,1.265,388,2.364,389,1.73,390,1.566,391,1.979,392,1.444,393,1.73,394,1.979,395,1.73,396,1.566,397,1.979,398,1.346,399,1.566,400,3.241,401,3.241,402,1.979,403,1.73,404,1.979,405,3.241,406,3.241,407,0.873,408,1.979,409,1.979,410,1.979,411,1.979,412,4.152,413,3.241,414,2.131,415,3.241,416,3.241,417,1.979,418,2.833,419,1.73,420,1.979,421,1.195,422,0.986,423,1.566,424,1.73,425,3.241,426,1.979,427,1.979,428,1.979,429,1.637,430,4.158,431,3.241,432,3.241,433,2.564,434,1.979,435,1.752,436,1.979,437,1.767,438,3.597,439,3.241,440,1.979,441,1.979,442,3.241,443,1.979,444,1.979,445,1.979,446,1.134,447,2.833,448,1.979,449,1.979,450,1.566,451,2.051,452,1.566,453,1.134,454,1.444,455,1.73,456,3.241,457,1.979,458,3.597,459,3.097,460,2.07,461,2.07,462,1.73,463,1.566,464,1.548,465,1.566,466,1.566,467,1.134,468,1.134,469,1.979,470,3.241,471,2.833,472,1.979,473,3.241,474,1.73,475,1.856,476,0.841,477,1.979,478,1.265,479,2.364,480,2.833,481,1.031,482,1.688,483,3.241,484,1.979,485,1.979,486,3.241,487,3.241,488,3.241,489,1.856,490,1.979,491,2.564,492,2.833,493,2.564,494,1.566,495,2.564,496,1.444,497,1.566,498,1.956,499,1.73,500,1.979,501,1.979,502,0.949,503,3.234,504,1.979,505,1.979,506,1.979,507,0.782,508,1.979,509,1.979,510,1.979,511,1.73,512,1.73,513,3.241,514,1.73,515,1.979,516,1.979,517,1.979,518,1.956,519,1.979,520,1.566,521,1.08,522,1.979,523,3.241,524,1.979,525,1.979,526,1.979,527,1.979,528,1.566,529,1.73,530,1.979,531,1.979,532,1.979,533,1.979,534,1.346,535,0.986,536,1.08,537,1.979,538,1.979,539,2.357,540,1.979,541,1.856,542,1.767,543,1.979,544,1.979,545,1.979,546,1.134,547,1.73,548,1.979,549,1.979,550,1.134,551,1.134]],["title/classes/BadRequestCustom.html",[11,0.184,384,1.972]],["body/classes/BadRequestCustom.html",[3,0.165,4,0.147,5,0.111,7,0.221,8,0.012,9,0.834,10,0.165,11,0.258,12,2.21,13,0.01,14,0.01,109,1.752,123,0.805,126,1.051,144,1.644,145,0.616,146,0.749,147,1.201,384,3.36,552,1.45,553,5.067,554,3.226,555,7.568,556,7.031,557,6.562,558,5.797,559,2.681,560,5.067,561,4.228,562,4.587,563,5.797,564,5.797,565,4.587,566,5.797,567,5.797]],["title/controllers/CompaniesController.html",[0,1.065,568,3.01]],["body/controllers/CompaniesController.html",[0,0.918,2,1.008,3,0.101,4,0.09,5,0.068,7,0.287,8,0.012,9,0.512,10,0.101,11,0.158,13,0.007,14,0.007,56,1.224,78,2.754,80,1.772,99,1.631,101,1.795,104,1.77,110,5.192,112,1.273,113,2.913,120,0.41,121,1.355,123,0.953,125,1.827,126,1.111,132,1.699,140,2.762,141,1.77,144,1.945,145,0.729,146,0.921,147,1.421,148,2.18,168,1.959,171,3.093,172,2.649,180,2.774,181,1.699,182,3.376,183,1.569,188,1.51,193,1.851,194,1.146,231,1.404,232,2.146,241,1.699,243,2.725,254,2.083,264,1.041,278,1.398,298,2.593,300,2.593,329,2.146,399,2.813,429,1.751,435,2.387,479,2.593,480,4.446,502,2.089,507,2.818,528,4.025,568,3.71,569,3.108,570,5.129,571,1.795,572,2.432,573,2.083,574,3.555,575,4.558,576,2.146,577,3.555,578,2.146,579,2.22,580,3.555,581,5.086,582,3.07,583,3.555,584,3.07,585,1.569,586,3.555,587,3.555,588,1.456,589,3.07,590,3.555,591,1.699,592,5.109,593,3.249,594,3.555,595,1.939,596,2.036,597,3.794,598,3.108,599,1.51,600,4.025,601,1.456,602,4.332,603,3.555,604,3.555,605,3.555,606,1.631,607,1.456,608,2.146,609,3.555,610,3.555,611,3.555,612,5.995,613,3.555,614,6.858,615,5.086,616,4.025,617,3.108,618,3.108,619,2.146,620,2.146,621,3.555,622,2.146,623,2.146,624,3.555,625,2.418,626,3.555,627,2.036,628,3.555]],["title/modules/CompaniesModule.html",[15,0.97,28,2.806]],["body/modules/CompaniesModule.html",[2,1.87,3,0.149,4,0.132,5,0.1,7,0.299,8,0.012,9,0.752,10,0.149,11,0.233,13,0.009,14,0.009,15,1.698,17,2.139,18,2.219,19,2.397,20,2.397,21,2.219,22,3.314,23,2.397,28,5.432,40,3.025,41,2.397,42,2.305,44,2.397,50,2.603,51,1.391,58,1.436,80,2.603,86,1.798,101,2.183,102,1.924,145,0.555,228,1.63,229,3.025,244,2.992,329,3.153,348,2.72,350,2.604,421,3.153,429,2.269,451,2.603,464,2.496,482,2.72,568,5.269,597,5.103,598,4.566,629,4.566,630,4.566,631,5.223,632,5.223,633,5.269,634,4.566,635,5.763,636,5.223,637,6.592,638,2.72,639,4.566,640,4.566]],["title/injectables/CompaniesService.html",[117,0.777,597,2.636]],["body/injectables/CompaniesService.html",[3,0.075,4,0.067,5,0.051,7,0.276,8,0.012,9,0.38,10,0.075,11,0.118,12,1.555,13,0.006,14,0.006,51,0.704,55,1.263,56,1.715,57,1.263,58,1.539,78,2.832,83,2.124,94,2.94,99,1.213,104,1.562,112,1.514,113,1.514,117,0.768,118,0.941,120,0.304,121,1.087,123,0.888,125,1.612,126,1.035,140,2.569,144,1.814,145,0.751,146,0.861,147,1.326,148,1.942,149,3.016,151,1.595,168,2.181,188,1.123,197,1.213,228,0.825,236,2.774,239,1.514,241,1.949,254,1.67,264,1.772,272,2.034,273,3.242,278,1.369,288,1.797,290,1.928,293,1.376,296,1.376,299,1.967,349,2.594,363,2.917,373,1.369,384,1.263,385,1.442,386,1.376,414,2.149,429,0.91,435,2.063,437,2.225,459,3.882,460,2.606,461,2.606,467,1.514,468,1.514,475,2.853,482,2.124,489,3.208,496,1.928,502,2.31,507,2.212,539,3.944,541,3.208,542,3.301,546,2.337,550,2.853,551,2.853,572,1.67,573,1.67,575,4.086,579,1.933,585,1.8,588,1.67,591,1.949,592,4.682,597,2.606,599,1.123,600,3.228,601,1.082,634,2.311,639,2.311,641,2.311,642,4.079,643,2.643,644,2.643,645,4.079,646,4.079,647,2.643,648,2.462,649,2.643,650,3.007,651,2.643,652,2.643,653,2.643,654,1.928,655,2.462,656,1.514,657,2.643,658,1.123,659,3.007,660,3.007,661,1.595,662,1.595,663,1.595,664,1.595,665,3.007,666,1.123,667,1.595,668,2.462,669,1.514,670,2.462,671,2.643,672,2.462,673,1.595,674,2.643,675,1.595,676,1.595,677,1.595,678,1.595,679,2.643,680,1.595,681,1.595,682,1.595,683,1.595,684,1.595,685,1.595,686,1.595,687,3.007,688,3.007,689,4.415,690,6.052,691,4.079,692,1.689,693,4.079,694,1.263,695,1.442,696,1.123,697,2.643,698,2.643,699,2.643,700,2.225,701,2.643,702,3.007,703,2.643,704,2.643,705,1.595,706,2.643,707,1.166,708,2.643]],["title/classes/Company.html",[11,0.184,429,1.421]],["body/classes/Company.html",[3,0.11,4,0.098,5,0.074,7,0.206,8,0.012,10,0.177,11,0.277,13,0.008,14,0.008,51,1.03,58,1.709,80,1.926,86,1.858,101,1.168,102,1.424,109,1.631,112,0.967,120,0.445,123,1.109,126,1.134,141,2.06,145,0.779,146,1.075,147,1.591,228,1.684,231,1.527,241,1.847,270,1.847,272,1.03,278,1.483,295,2.819,344,2.819,350,2.657,353,1.53,373,1.709,407,2.381,414,2.004,422,3.653,429,2.436,451,2.689,464,3.215,476,2.858,478,2.469,481,2.81,535,1.926,536,2.108,552,0.967,633,2.819,654,2.819,658,2.641,694,2.97,696,2.641,700,2.108,707,2.743,709,2.819,710,3.561,711,3.39,712,2.743,713,3.561,714,3.669,715,5.06,716,3.865,717,3.818,718,3.865,719,3.561,720,3.752,721,3.865,722,3.865,723,3.865,724,3.865,725,3.865,726,3.865,727,3.865,728,3.865,729,3.865,730,2.333,731,3.561,732,3.379,733,3.257,734,2.628,735,2.628,736,2.743,737,3.379]],["title/classes/Company-1.html",[11,0.153,83,1.791,429,1.184]],["body/classes/Company-1.html",[3,0.099,4,0.088,5,0.067,7,0.245,8,0.012,10,0.183,11,0.315,13,0.007,14,0.007,58,1.377,86,1.725,101,1.774,102,1.282,112,1.995,120,0.401,123,0.815,126,1.13,141,1.515,145,0.723,146,0.915,166,1.994,184,2.101,185,3.677,194,1.122,240,1.813,258,3.2,264,2.368,270,1.663,278,1.869,287,3.2,296,3.343,299,1.978,326,1.845,353,1.421,373,1.947,414,1.892,429,2.439,446,2.869,502,1.019,521,3.201,535,1.735,536,1.898,552,0.871,559,3.159,579,1.514,607,2.051,666,2.128,710,2.869,712,2.21,713,3.362,736,2.59,738,2.224,739,3.827,740,3.481,741,3.481,742,3.481,743,4.281,744,2.101,745,3.991,746,4.281,747,3.024,748,3.2,749,3.2,750,3.542,751,2.539,752,3.2,753,1.536,754,2.539,755,3.2,756,1.898,757,2.128,758,3.658,759,3.654,760,3.654,761,3.501,762,5.167,763,3.406,764,3.654,765,3.2,766,3.2,767,3.2,768,3.654,769,3.2,770,2.101,771,2.367,772,2.224,773,2.224,774,2.224,775,2.224,776,3.406,777,2.367,778,3.406,779,2.539]],["title/classes/CreateCompanyDto.html",[11,0.184,575,2.636]],["body/classes/CreateCompanyDto.html",[3,0.139,4,0.123,5,0.093,7,0.186,8,0.012,10,0.139,11,0.28,13,0.009,14,0.009,112,2.024,120,0.56,123,1.026,126,1.123,141,1.907,145,0.743,146,0.954,228,1.966,236,5.5,264,2.368,353,1.787,498,3.803,521,3.436,552,1.217,559,2.817,575,4.025,689,5.899,710,4.002,712,3.083,713,4.384,739,3.512,753,2.147,757,2.676,758,3.711,780,6.69,781,3.85,782,3.848,783,4.865,784,4.865,785,4.865,786,4.865]],["title/classes/CreateFileDto.html",[11,0.184,787,2.806]],["body/classes/CreateFileDto.html",[3,0.187,4,0.166,5,0.126,8,0.011,10,0.187,11,0.292,13,0.011,14,0.011,552,1.642,787,5.145,788,5.737,789,5.193]],["title/classes/CreateJobDto.html",[11,0.184,790,2.491]],["body/classes/CreateJobDto.html",[3,0.074,4,0.066,5,0.05,7,0.188,8,0.012,10,0.074,11,0.295,13,0.006,14,0.006,86,0.895,94,0.991,101,1.92,102,0.957,104,1.039,109,1.217,112,2.012,120,0.299,123,1.016,126,1.067,141,1.888,145,0.59,146,0.982,168,1.678,185,1.489,186,1.66,203,1.66,228,1.257,230,1.193,231,1.026,232,1.569,236,5.049,238,1.767,240,2.891,264,2.419,270,2.355,272,1.313,278,2.131,292,1.66,296,2.567,299,2.837,346,1.896,353,1.142,376,2.306,407,1.777,421,2.43,422,1.295,429,1.911,450,5.418,453,3.179,454,4.049,464,1.924,491,2.057,498,2.43,521,2.196,535,1.295,536,1.417,552,0.65,559,3.019,579,1.217,616,2.057,689,4.049,695,2.196,712,2.175,717,3.308,734,1.767,739,3.356,744,1.569,748,3.149,749,2.572,750,2.43,752,2.572,753,2.175,755,1.66,757,1.711,758,3.557,765,2.572,766,2.572,773,1.66,774,2.572,775,1.66,782,3.661,790,2.975,791,5.876,792,1.896,793,4.752,794,3.149,795,4.752,796,3.595,797,3.9,798,3.595,799,3.625,800,5.243,801,4.852,802,2.599,803,2.599,804,2.599,805,2.599,806,2.599,807,4.852,808,4.026,809,4.026,810,2.599,811,3.52,812,4.852,813,2.272,814,3.52,815,2.599,816,2.599,817,2.599,818,2.599,819,3.52,820,3.186,821,2.599,822,3.52,823,2.599,824,3.186,825,2.057,826,3.186,827,2.272,828,2.937,829,2.937,830,2.599,831,4.852,832,2.599,833,3.9,834,2.937,835,3.186,836,4.309,837,4.309,838,4.309,839,3.52,840,2.057,841,2.272,842,2.272,843,2.272,844,2.272,845,2.272,846,1.896,847,3.149,848,1.924,849,2.272,850,2.272,851,2.272,852,3.52,853,2.272,854,2.272,855,4.309,856,2.272,857,1.66,858,2.272,859,2.272,860,2.272,861,1.896,862,1.896,863,3.52,864,2.272]],["title/classes/CreatePermissionDto.html",[11,0.184,865,2.636]],["body/classes/CreatePermissionDto.html",[3,0.141,4,0.126,5,0.095,7,0.19,8,0.012,10,0.141,11,0.284,13,0.009,14,0.009,15,1.81,112,2.032,120,0.572,123,1.034,126,1.128,141,1.922,145,0.75,146,0.961,264,2.377,353,1.81,552,1.242,559,2.838,739,3.534,753,2.19,757,2.711,758,3.726,770,4.902,782,3.877,848,3.68,865,4.076,866,6.732,867,3.927,868,4.92,869,4.962,870,4.962,871,4.962,872,4.962]],["title/classes/CreateResumeDto.html",[11,0.184,873,2.636]],["body/classes/CreateResumeDto.html",[3,0.115,4,0.102,5,0.077,7,0.213,8,0.012,10,0.158,11,0.283,13,0.008,14,0.008,58,1.53,112,2.068,120,0.466,123,1.032,126,1.058,141,1.919,146,0.96,264,2.42,353,1.579,373,1.977,502,2.176,503,4.891,552,1.011,559,3.116,736,3.424,739,3.657,747,4.341,753,1.783,758,3.75,772,4.749,782,3.871,873,3.555,874,6.027,875,2.948,876,5.813,877,5.813,878,4.595,879,6.027,880,4.404,881,4.041,882,4.041,883,4.041,884,4.041,885,4.041,886,4.041,887,2.582]],["title/classes/CreateRoleDto.html",[11,0.184,888,2.636]],["body/classes/CreateRoleDto.html",[3,0.125,4,0.111,5,0.084,7,0.225,8,0.012,10,0.125,11,0.262,13,0.008,14,0.008,58,1.618,109,1.78,112,2.058,120,0.506,123,0.986,126,0.986,141,1.832,145,0.706,146,0.917,228,1.838,230,3.715,245,4.004,257,4.053,264,2.316,278,1.618,296,3.968,353,1.67,407,3.132,422,2.935,498,3.554,502,1.724,552,1.099,559,3.016,712,2.931,736,2.598,739,3.397,747,3.554,753,1.938,757,2.502,758,3.497,771,4.827,782,3.696,794,5.119,813,3.839,825,3.475,834,4.295,835,4.66,861,3.204,862,4.846,888,3.762,889,6.471,890,3.475,891,6.915,892,4.392,893,4.392,894,4.392,895,4.392,896,4.392]],["title/classes/CreateSubscriberDto.html",[11,0.184,897,2.636]],["body/classes/CreateSubscriberDto.html",[3,0.136,4,0.121,5,0.091,7,0.183,8,0.012,10,0.136,11,0.277,13,0.009,14,0.009,101,1.882,109,1.882,112,2.016,120,0.551,123,0.962,126,1.119,141,1.788,145,0.809,146,0.895,264,2.359,270,2.976,278,2.092,296,3.243,299,2.46,353,1.767,373,2.184,421,3.76,552,1.196,559,3.072,739,3.368,745,4.711,750,3.76,753,2.11,758,3.492,782,3.243,799,4.594,824,4.929,825,3.783,826,4.929,827,4.179,828,4.543,829,4.543,834,4.543,861,3.487,862,3.487,897,3.979,898,6.416,899,3.783,900,3.783,901,4.781,902,4.781,903,4.781,904,4.781]],["title/classes/CreateUserCvDto.html",[11,0.184,887,2.636]],["body/classes/CreateUserCvDto.html",[3,0.125,4,0.111,5,0.084,7,0.224,8,0.012,10,0.167,11,0.295,13,0.008,14,0.008,58,1.615,112,2.057,120,0.504,123,0.921,126,1.027,141,1.712,146,0.856,264,2.406,353,1.666,373,1.615,502,2.229,503,3.995,552,1.095,559,3.153,736,3.431,739,3.713,747,4.463,753,1.931,758,3.713,772,4.863,782,3.453,873,2.796,874,5.609,875,3.192,876,5.902,877,5.902,878,3.753,879,6.154,880,4.649,887,3.753,905,4.376,906,4.376,907,4.376]],["title/classes/CreateUserDto.html",[11,0.184,756,2.251]],["body/classes/CreateUserDto.html",[3,0.085,4,0.076,5,0.057,7,0.228,8,0.012,10,0.17,11,0.299,13,0.006,14,0.006,58,1.233,86,1.544,101,1.805,102,1.103,112,2.033,120,0.345,123,0.994,126,1.123,141,1.848,145,0.68,146,0.977,166,1.715,184,1.807,185,4.193,194,0.965,240,1.559,258,3.435,264,2.408,270,2.143,278,1.913,287,3.435,296,3.496,299,2.124,326,2.355,353,1.272,373,2.049,414,0.965,429,2.464,446,3.08,502,1.313,521,3.257,535,1.492,536,1.633,552,0.749,559,3.124,579,1.625,607,1.836,666,2.284,710,3.42,712,1.979,713,1.715,736,2.373,738,1.913,739,3.712,743,3.922,744,1.807,745,4.061,746,3.922,747,2.707,748,2.865,749,2.865,750,3.246,751,2.184,752,2.865,753,1.321,754,2.184,755,2.865,756,2.446,757,2.284,758,3.692,759,3.922,760,3.922,761,3.661,762,5.339,763,3.05,764,3.271,765,3.435,766,3.435,767,3.815,768,3.922,769,3.815,770,2.707,771,3.05,772,2.865,773,1.913,774,1.913,775,1.913,776,3.05,777,2.036,778,3.05,779,2.184,782,3.496,880,2.369,900,2.369,908,2.994,909,2.617,910,2.617,911,2.994,912,2.994,913,2.994,914,2.994,915,2.994,916,2.994,917,2.994,918,2.994]],["title/controllers/DatabasesController.html",[0,1.065,919,3.01]],["body/controllers/DatabasesController.html",[0,1.617,2,1.777,3,0.178,4,0.159,5,0.12,7,0.281,8,0.012,9,0.902,10,0.178,11,0.279,13,0.01,14,0.01,132,2.993,606,2.875,607,2.565,919,5.372,920,5.477,921,6.265,922,4.997,923,5.477,924,6.265]],["title/modules/DatabasesModule.html",[15,0.97,29,2.806]],["body/modules/DatabasesModule.html",[2,1.853,3,0.147,4,0.13,5,0.098,7,0.313,8,0.012,9,0.741,10,0.147,11,0.229,13,0.009,14,0.009,15,1.686,17,2.108,18,2.187,19,2.362,20,2.362,21,2.187,22,3.292,23,2.362,29,5.563,40,2.997,41,2.362,42,2.271,44,2.362,50,2.565,51,1.371,145,0.763,148,1.415,266,2.271,324,4.173,325,3.5,326,1.896,327,4.173,328,3.5,348,2.681,349,2.681,350,2.834,351,3.755,360,4.34,383,4.073,919,5.233,922,5.084,923,4.5,925,4.5,926,4.5,927,5.148,928,5.148,929,4.441,930,3.755,931,4.073]],["title/injectables/DatabasesService.html",[117,0.777,922,2.636]],["body/injectables/DatabasesService.html",[3,0.099,4,0.088,5,0.067,7,0.291,8,0.012,9,0.502,10,0.099,11,0.155,12,1.914,13,0.007,14,0.007,48,4.667,49,2.107,51,0.93,55,1.668,56,1.202,57,1.668,58,0.959,94,2.241,101,1.055,102,1.286,109,1.517,113,1.999,117,0.945,118,1.243,120,0.402,121,1.337,123,0.816,125,0.93,126,0.816,144,0.99,145,0.795,146,0.451,147,0.723,148,1.38,168,1.517,197,3.43,231,1.379,237,2.546,257,3.546,264,1.022,266,1.54,272,1.946,273,3.494,325,2.373,326,2.611,328,2.373,353,1.424,360,3.506,362,3.972,363,4.024,364,4.651,373,1.615,375,2.373,376,1.999,382,2.23,383,2.762,386,1.818,387,2.23,388,4.287,390,2.762,396,2.762,412,2.762,437,1.904,465,3.972,521,1.904,571,1.777,607,2.407,666,3.012,710,3.367,712,2.215,761,3.206,767,3.755,769,3.755,770,3.03,777,2.373,794,3.207,847,2.23,922,3.207,930,2.546,932,3.051,933,6.427,934,7.09,935,3.051,936,5.138,937,5.878,938,5.019,939,3.49,940,5.019,941,2.373,942,4.287,943,2.762,944,5.019,945,3.051,946,3.49,947,3.49,948,3.49,949,5.878,950,3.49,951,5.878,952,3.49,953,5.878,954,3.49,955,3.49,956,3.49,957,3.49,958,3.49,959,3.972,960,3.051,961,3.49,962,3.49,963,3.49,964,3.49,965,2.546,966,3.49,967,3.49,968,3.49,969,5.878,970,3.051,971,5.878,972,5.878,973,5.019,974,5.878,975,5.878,976,5.019,977,3.49,978,3.49,979,3.49,980,3.49,981,3.49,982,3.49,983,3.051,984,3.49,985,2.107]],["title/classes/File.html",[5,0.079,11,0.184]],["body/classes/File.html",[3,0.187,4,0.167,5,0.153,8,0.011,10,0.187,11,0.293,13,0.011,14,0.011,552,1.646,986,5.752]],["title/controllers/FilesController.html",[0,1.065,987,3.01]],["body/controllers/FilesController.html",[0,1.061,2,1.165,3,0.117,4,0.104,5,0.146,7,0.285,8,0.012,9,0.591,10,0.117,11,0.183,13,0.008,14,0.008,56,1.414,101,1.242,102,1.513,104,1.867,120,0.473,121,1.499,123,1.005,125,1.927,126,1.097,132,1.963,141,1.867,144,1.959,145,0.734,146,0.892,147,1.431,168,1.242,171,2.931,172,2.139,181,1.963,183,1.813,187,2.48,193,2.139,194,1.324,240,2.139,254,2.304,435,2.073,502,2.187,559,1.566,560,3.591,572,2.827,573,2.304,585,1.813,588,1.682,589,3.397,591,1.963,593,3.596,595,2.241,596,2.353,601,1.682,606,1.885,607,1.682,612,3.591,622,3.397,623,2.48,627,2.353,987,4.105,988,3.591,989,3.251,990,6.42,991,4.108,992,4.108,993,4.108,994,5.297,995,4.108,996,4.108,997,6.42,998,4.108,999,4.92,1000,4.454,1001,4.108,1002,4.92,1003,4.108,1004,5.628,1005,5.628,1006,4.101,1007,3.591,1008,3.251,1009,4.108,1010,2.997,1011,4.108,1012,4.108,1013,4.108,1014,4.108,1015,4.108,1016,3.251,1017,4.108,1018,4.108,1019,4.108,1020,4.108,1021,4.108,1022,5.628,1023,4.108,1024,4.108,1025,4.108,1026,4.108,1027,4.108,1028,4.108,1029,4.108,1030,4.108,1031,4.108,1032,4.108,1033,4.108,1034,4.108]],["title/modules/FilesModule.html",[15,0.97,30,2.806]],["body/modules/FilesModule.html",[2,1.958,3,0.16,4,0.142,5,0.108,7,0.305,8,0.012,9,0.81,10,0.16,11,0.25,13,0.01,14,0.01,15,1.756,17,2.303,18,2.39,19,2.582,20,2.582,21,2.39,22,3.427,23,2.582,30,5.533,40,3.168,41,2.582,42,2.483,44,2.582,187,3.396,987,5.448,1006,5.198,1007,4.918,1010,4.104,1035,4.918,1036,4.918,1037,5.626,1038,5.626,1039,5.626,1040,5.036,1041,5.626,1042,5.626,1043,5.626]],["title/injectables/FilesService.html",[117,0.777,1006,2.636]],["body/injectables/FilesService.html",[3,0.136,4,0.121,5,0.145,7,0.264,8,0.012,9,0.687,10,0.136,11,0.212,13,0.009,14,0.009,104,1.964,117,1.171,118,1.699,120,0.55,121,1.657,123,1.056,125,2.116,126,1.056,144,2.08,145,0.78,146,0.947,147,1.52,168,1.442,254,2.547,435,2.291,502,2.283,571,1.88,572,3.003,573,2.547,579,2.461,585,2.745,588,2.547,591,2.972,599,2.027,601,1.954,787,5.172,989,3.776,994,5.402,1006,3.974,1008,4.922,1044,4.171,1045,6.221,1046,4.772,1047,4.772,1048,4.772,1049,4.772,1050,4.772,1051,7.606,1052,4.772,1053,4.171,1054,4.772]],["title/controllers/HealthController.html",[0,1.065,1055,3.01]],["body/controllers/HealthController.html",[0,1.493,2,1.64,3,0.165,4,0.146,5,0.111,7,0.289,8,0.012,9,0.832,10,0.165,11,0.257,12,2.205,13,0.01,14,0.01,104,1.493,120,0.666,121,1.87,123,0.803,125,1.54,132,2.763,141,1.493,180,3.829,183,2.552,197,3.222,514,5.056,857,5.023,1055,5.121,1056,5.056,1057,7.021,1058,5.783,1059,5.783,1060,7.021,1061,7.021,1062,7.021,1063,4.576,1064,5.783,1065,5.783,1066,5.783]],["title/modules/HealthModule.html",[15,0.97,31,2.806]],["body/modules/HealthModule.html",[2,2.077,3,0.177,4,0.157,5,0.119,7,0.298,8,0.012,9,0.893,10,0.177,11,0.276,13,0.01,14,0.01,15,1.721,17,2.539,31,4.978,44,2.846,1055,5.682,1063,4.908,1067,6.202,1068,6.202,1069,7.321]],["title/interfaces/IUser.html",[140,1.469,1070,2.636]],["body/interfaces/IUser.html",[3,0.152,4,0.135,5,0.102,8,0.012,10,0.152,13,0.009,14,0.009,15,1.251,120,0.613,126,1.196,140,2.375,145,0.866,146,1.092,147,1.583,257,3.978,326,2.813,353,1.892,373,2.099,414,2.625,429,2.63,719,4.597,848,2.544,868,3.401,1070,3.401,1071,4.213,1072,4.654]],["title/classes/IsEndAfterStartConstraint.html",[11,0.184,846,3.01]],["body/classes/IsEndAfterStartConstraint.html",[3,0.092,4,0.082,5,0.062,7,0.215,8,0.012,10,0.092,11,0.318,13,0.007,14,0.007,86,1.117,94,1.237,101,1.877,102,1.195,104,1.229,109,0.98,112,1.928,120,0.374,121,1.268,123,0.661,125,1.268,126,1.07,144,1.35,145,0.66,146,0.854,147,0.986,168,1.877,185,1.858,186,2.073,203,2.073,228,1.012,230,1.489,231,1.281,232,1.958,236,4.701,238,2.206,240,3.6,264,2.342,270,2.274,272,1.502,278,2.118,292,2.073,296,2.479,299,2.612,346,2.366,376,2.726,407,2.1,421,1.958,422,1.617,429,1.639,450,4.914,453,2.726,454,3.472,464,2.274,491,2.567,498,1.958,521,1.769,535,1.617,536,1.769,552,0.812,559,3.087,579,0.98,616,2.567,689,3.472,695,2.596,712,1.432,717,3.234,734,2.206,739,3.535,744,1.958,748,3.041,749,3.041,750,2.873,752,3.041,753,2.488,755,2.073,757,1.378,758,3.487,765,3.041,766,3.041,773,2.073,774,3.041,775,2.073,790,2.873,791,4.461,792,2.366,793,4.914,794,2.073,795,3.766,796,2.366,797,2.567,798,2.366,799,2.873,800,5.233,801,4.928,807,4.161,811,2.836,812,4.161,814,2.836,819,2.836,820,2.567,822,2.836,824,2.567,826,2.567,828,2.366,829,2.366,831,4.161,833,4.461,834,3.472,835,3.766,836,4.928,837,6.245,838,4.928,839,4.928,840,2.567,841,2.836,842,2.836,843,2.836,844,2.836,845,2.836,846,3.472,847,3.968,848,2.274,849,4.161,850,5.429,851,2.836,852,4.161,853,2.836,854,2.836,855,4.928,856,2.836,857,2.073,858,4.161,859,4.928,860,2.836,861,2.366,862,2.366,863,4.161,864,2.836,1073,3.244,1074,3.244]],["title/classes/Job.html",[11,0.184,75,1.972]],["body/classes/Job.html",[3,0.097,4,0.087,5,0.065,7,0.189,8,0.012,10,0.165,11,0.22,13,0.007,14,0.007,51,0.91,58,1.359,75,2.776,80,1.704,109,1.033,120,0.394,123,1.139,126,1.139,141,2.116,145,0.79,146,1.088,147,1.66,228,1.067,270,1.633,272,0.91,278,0.939,350,2.514,353,1.402,373,1.597,407,2.809,414,2.052,422,3.705,429,2,446,1.958,451,1.704,464,2.363,476,2.468,481,1.78,552,0.855,579,1.924,658,2.468,694,2.776,696,2.468,707,2.563,711,3.168,712,2.563,713,1.958,714,3.168,715,5.141,717,4.006,719,3.646,720,3.842,730,2.063,731,2.832,733,2.063,734,2.324,735,2.324,736,2.809,793,4.597,794,3.711,795,4.597,796,4.237,797,4.597,798,4.237,799,3.506,800,4.597,1075,2.493,1076,3.418,1077,3.418,1078,3.418,1079,3.418,1080,3.418,1081,3.418,1082,3.418,1083,3.418,1084,3.418,1085,3.418,1086,3.418,1087,3.418,1088,3.418,1089,3.418,1090,3.418,1091,3.418,1092,3.418,1093,3.418,1094,2.324,1095,2.705,1096,3.418,1097,3.418,1098,2.324,1099,2.988]],["title/controllers/JobsController.html",[0,1.065,1100,3.01]],["body/controllers/JobsController.html",[0,0.992,2,1.09,3,0.109,4,0.097,5,0.073,7,0.287,8,0.012,9,0.553,10,0.109,11,0.171,13,0.008,14,0.008,56,1.322,75,3.662,78,2.851,104,1.823,120,0.442,121,1.431,123,0.981,125,1.881,126,1.117,132,1.835,140,2.886,141,1.823,144,2.003,145,0.751,146,0.912,147,1.463,148,2.267,168,1.624,171,2.798,172,2.798,180,2.93,181,1.835,182,3.677,183,1.695,188,1.632,193,2,194,1.238,254,2.2,435,2.282,502,2.244,507,2.89,571,1.624,572,2.537,573,2.2,576,2.319,578,2.319,579,2.211,582,3.243,584,3.243,585,1.695,588,1.573,589,2.319,591,1.835,593,2.454,595,2.095,596,2.2,599,1.632,601,1.573,606,1.763,607,1.573,608,2.319,619,2.319,620,2.319,622,2.319,623,2.319,625,2.612,627,2.2,790,4.417,1100,3.919,1101,3.358,1102,4.519,1103,3.358,1104,3.841,1105,2.612,1106,3.841,1107,3.841,1108,3.841,1109,2.612,1110,3.841,1111,5.211,1112,2.802,1113,3.841,1114,3.74,1115,3.358,1116,4.251,1117,3.841,1118,3.841,1119,3.04,1120,3.841,1121,3.653,1122,3.841,1123,3.841,1124,2.454,1125,3.841,1126,2.454,1127,3.841]],["title/modules/JobsModule.html",[15,0.97,32,2.806]],["body/modules/JobsModule.html",[2,1.937,3,0.157,4,0.14,5,0.106,7,0.304,8,0.012,9,0.795,10,0.157,11,0.246,13,0.01,14,0.01,15,1.742,17,2.262,18,2.348,19,2.536,20,2.536,21,2.348,22,3.4,23,2.536,32,5.508,40,3.133,41,2.536,42,2.438,44,2.536,50,2.754,51,1.472,75,2.64,145,0.726,348,2.878,350,2.182,534,3.758,638,2.878,757,2.348,848,2.64,1098,4.643,1100,5.405,1114,4.89,1115,4.83,1128,4.83,1129,4.83,1130,5.526,1131,5.526,1132,4.83,1133,4.031]],["title/injectables/JobsService.html",[117,0.777,1114,2.491]],["body/injectables/JobsService.html",[3,0.073,4,0.065,5,0.049,7,0.279,8,0.012,9,0.371,10,0.073,11,0.115,12,1.525,13,0.006,14,0.006,51,0.686,55,1.231,56,1.688,57,1.231,58,1.348,75,3.156,78,2.806,83,2.083,94,2.925,99,1.183,101,0.779,102,0.949,104,1.544,109,0.779,112,1.001,117,0.753,118,0.917,120,0.297,121,1.066,123,0.879,125,1.593,126,1.029,140,2.673,144,1.796,145,0.745,146,0.818,147,1.312,148,2.037,149,2.981,168,2.205,188,1.095,197,1.183,228,0.804,229,1.183,243,1.183,254,1.638,264,1.435,272,2.078,273,3.217,278,1.348,293,1.342,299,1.936,349,2.553,363,3.115,373,1.348,384,1.231,385,1.406,386,1.342,414,2.129,435,2.332,437,2.182,453,1.476,459,3.8,467,2.808,468,2.808,475,2.808,476,1.095,482,2.553,489,3.165,502,2.246,507,2.183,518,1.556,539,3.626,541,3.165,542,3.014,546,2.808,550,3.165,551,3.165,571,1.209,572,2.007,573,1.638,579,1.913,585,1.765,588,1.638,591,1.911,599,1.095,601,1.055,638,1.342,648,1.556,650,3.336,655,1.556,656,1.476,658,1.095,659,2.959,660,1.556,661,1.556,662,1.556,663,1.556,664,1.556,665,2.959,666,1.095,667,1.556,668,2.415,669,1.476,670,2.415,672,2.415,673,1.556,675,1.556,676,1.556,677,1.556,678,1.556,680,1.556,681,1.556,682,1.556,683,1.556,684,1.556,685,1.556,686,1.556,687,2.959,688,2.959,692,3.132,694,1.231,695,1.406,696,1.095,700,1.406,702,3.336,705,1.556,707,1.137,713,2.291,790,3.822,1094,2.72,1103,3.497,1111,4.643,1114,2.415,1116,3.166,1132,2.253,1134,2.253,1135,2.577,1136,2.577,1137,3.497,1138,2.577,1139,2.577,1140,2.577,1141,2.577,1142,2.577,1143,2.039,1144,2.577,1145,2.253,1146,1.88,1147,2.577,1148,2.577,1149,2.577,1150,2.577,1151,2.577,1152,2.577,1153,2.577,1154,2.253,1155,2.577,1156,2.577,1157,2.577,1158,2.577,1159,6.606,1160,4.903,1161,4,1162,2.577,1163,2.577,1164,2.577]],["title/injectables/JwtAuthGuard.html",[117,0.777,208,3.01]],["body/injectables/JwtAuthGuard.html",[0,1.043,3,0.205,4,0.102,5,0.077,7,0.284,8,0.012,9,0.582,10,0.115,11,0.18,12,1.541,13,0.008,14,0.008,89,4.328,104,1.643,109,1.682,117,1.048,118,1.439,120,0.466,121,1.482,123,0.884,125,1.482,126,0.561,144,1.805,145,0.677,146,0.822,147,1.319,148,1.977,168,1.682,180,2.204,183,1.783,187,2.44,200,3.533,203,2.582,208,4.059,219,3.198,226,2.948,231,1.596,244,2.315,247,2.315,263,3.198,266,3.174,272,1.98,278,1.111,283,3.533,285,2.948,298,2.948,317,2.582,381,4.404,451,2.014,459,3.315,478,2.582,494,3.198,554,2.554,561,2.948,606,1.855,857,3.555,930,2.948,1165,5.995,1166,3.198,1167,5.565,1168,5.565,1169,5.565,1170,3.533,1171,5.882,1172,4.041,1173,5.565,1174,5.555,1175,4.041,1176,5.002,1177,5.565,1178,4.041,1179,5.995,1180,4.041,1181,2.948,1182,3.533,1183,3.198,1184,4.404,1185,3.198,1186,4.865,1187,4.041,1188,4.404,1189,5.565,1190,4.041,1191,4.041,1192,5.565,1193,4.041,1194,4.041,1195,3.533,1196,4.041,1197,4.041,1198,4.041,1199,5.565,1200,4.041,1201,5.565,1202,4.041,1203,4.041,1204,6.365,1205,4.041,1206,4.041,1207,4.041,1208,4.041,1209,4.041,1210,4.041,1211,4.041,1212,4.041,1213,4.041,1214,4.041,1215,4.041,1216,5.565,1217,3.533]],["title/injectables/JwtStrategy.html",[117,0.777,312,2.806]],["body/injectables/JwtStrategy.html",[3,0.122,4,0.109,5,0.082,7,0.289,8,0.012,9,0.617,10,0.122,11,0.191,12,2.208,13,0.008,14,0.008,48,4.833,49,2.587,86,1.994,94,2.502,100,3.126,101,2.124,102,2.133,104,1.106,116,2.914,117,1.091,118,1.526,120,0.494,121,1.543,123,0.804,125,1.141,126,0.911,140,2.502,144,1.643,145,0.78,146,0.748,147,1.201,149,2.887,188,1.821,189,3.66,190,3.126,197,2.658,198,5.192,211,3.939,226,4.225,227,2.914,228,1.808,229,1.967,231,2.288,239,2.455,240,3.417,242,3.391,243,3.011,244,2.455,246,3.746,247,3.318,257,2.232,262,3.391,266,1.891,267,4.584,272,1.748,273,1.967,278,1.178,279,4.225,292,2.738,312,3.939,317,2.738,326,2.417,337,3.746,359,3.746,373,1.592,412,3.391,414,2.115,418,3.746,429,1.475,430,6.144,452,3.391,478,2.738,479,3.126,494,3.391,496,3.126,497,3.391,498,3.496,499,3.746,554,2.658,561,3.126,607,2.372,618,3.746,695,2.337,985,2.587,1218,3.746,1219,5.064,1220,4.286,1221,5.792,1222,4.286,1223,5.792,1224,3.746,1225,4.286,1226,4.286,1227,4.286,1228,4.286,1229,4.286,1230,4.286,1231,4.286,1232,3.391,1233,4.286,1234,4.286,1235,4.286,1236,4.286]],["title/injectables/LocalAuthGuard.html",[117,0.777,175,3.01]],["body/injectables/LocalAuthGuard.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,9,0.908,10,0.18,11,0.281,13,0.011,14,0.011,117,1.393,118,2.247,175,5.396,317,4.033,554,3.394,1166,4.995,1182,5.518,1237,5.518,1238,7.397]],["title/injectables/LocalStrategy.html",[117,0.777,313,2.806]],["body/injectables/LocalStrategy.html",[3,0.142,4,0.127,5,0.096,7,0.295,8,0.012,9,0.72,10,0.142,11,0.223,12,1.907,13,0.009,14,0.009,89,3.402,94,2.699,104,1.291,117,1.208,118,1.781,120,0.576,121,1.708,123,0.891,125,1.332,126,1.097,144,1.819,145,0.682,146,0.828,147,1.329,148,2.052,168,1.512,171,2.605,176,3.959,178,4.768,179,3.959,226,3.649,227,3.402,228,1.561,230,2.295,231,1.976,233,4.373,234,3.959,240,3.34,242,3.959,245,3.402,264,1.465,272,1.332,273,2.295,278,1.375,288,3.402,290,3.649,299,1.976,313,4.361,317,3.196,325,3.402,374,5.607,381,3.959,459,2.605,511,4.373,512,4.373,554,2.943,561,3.649,606,2.295,761,4.308,778,4.361,1219,5.607,1224,4.373,1239,4.373,1240,5.002,1241,5.002,1242,6.413,1243,5.002,1244,5.002,1245,5.002]],["title/controllers/MailController.html",[0,1.065,1246,3.01]],["body/controllers/MailController.html",[0,1.091,2,1.199,3,0.12,4,0.107,5,0.11,7,0.307,8,0.012,9,0.608,10,0.12,11,0.188,12,1.612,13,0.008,14,0.008,51,1.126,55,2.02,56,1.455,57,2.02,58,1.162,70,3.345,74,3.345,75,2.742,86,1.455,94,2.484,113,2.421,120,0.487,121,1.529,123,0.587,125,1.126,132,2.02,141,1.091,145,0.449,168,1.278,180,3.13,181,2.02,183,1.865,193,2.201,194,1.363,197,3.207,239,2.421,272,1.946,273,2.99,278,1.162,329,2.552,363,3.393,373,1.577,386,2.201,403,3.695,429,1.455,520,3.345,607,2.35,617,3.695,666,3.104,798,3.084,799,3.464,985,2.552,1094,2.875,1102,4.753,1133,3.084,1137,3.695,1145,3.695,1146,3.084,1176,3.084,1246,4.186,1247,3.695,1248,4.227,1249,6.988,1250,4.227,1251,4.227,1252,5.739,1253,4.227,1254,4.162,1255,3.695,1256,6.515,1257,3.345,1258,2.421,1259,2.875,1260,3.695,1261,3.345,1262,4.227,1263,4.227,1264,3.695,1265,3.695,1266,4.227,1267,4.227,1268,3.695,1269,4.227,1270,4.227,1271,5.017,1272,3.695,1273,4.227,1274,5.739,1275,4.227,1276,4.227,1277,4.227,1278,4.227,1279,4.227,1280,4.227,1281,4.227,1282,4.227,1283,4.227,1284,4.227,1285,4.227,1286,4.227,1287,4.227,1288,3.345,1289,4.227,1290,4.227,1291,4.227,1292,4.227,1293,4.227,1294,4.227,1295,5.696,1296,4.227,1297,4.227,1298,4.227]],["title/modules/MailModule.html",[15,0.97,33,2.806]],["body/modules/MailModule.html",[2,1.676,3,0.126,4,0.112,5,0.084,7,0.316,8,0.012,9,0.635,10,0.126,11,0.197,13,0.008,14,0.008,15,1.566,17,1.808,18,1.876,19,2.026,20,2.026,21,1.876,22,3.057,23,2.026,33,5.511,40,2.712,41,2.026,42,1.948,44,2.026,48,4.545,49,2.665,50,2.2,51,1.176,75,2.11,93,3.494,94,1.683,105,3.494,109,2.013,133,3.86,145,0.628,148,1.214,168,1.334,329,3.567,348,2.299,350,2.334,371,3.86,373,1.214,433,3.494,695,3.223,1098,4.019,1114,4.607,1133,3.221,1246,4.859,1254,4.876,1255,3.86,1257,3.494,1258,2.529,1260,3.86,1261,3.494,1295,3.86,1299,3.86,1300,3.86,1301,4.607,1302,4.415,1303,4.415,1304,4.415,1305,3.494,1306,3.002,1307,5.91,1308,4.415,1309,3.002,1310,4.019,1311,4.415,1312,4.415,1313,4.415,1314,4.415,1315,4.415,1316,4.415,1317,4.415,1318,4.415,1319,4.415,1320,4.415,1321,4.415,1322,4.415,1323,3.86,1324,4.415,1325,4.415,1326,4.415,1327,4.415,1328,4.415,1329,4.415,1330,4.415,1331,3.86]],["title/injectables/MailService.html",[117,0.777,1254,2.636]],["body/injectables/MailService.html",[3,0.184,4,0.164,5,0.124,7,0.247,8,0.012,9,0.932,10,0.184,11,0.288,13,0.011,14,0.011,117,1.414,118,2.306,1254,4.798,1332,5.662]],["title/injectables/MulterConfigService.html",[117,0.777,1040,3.01]],["body/injectables/MulterConfigService.html",[3,0.12,4,0.106,5,0.144,7,0.278,8,0.012,9,0.604,10,0.12,11,0.187,13,0.008,14,0.008,82,3.323,104,1.676,109,1.269,117,1.076,118,1.495,120,0.484,121,1.522,123,0.902,125,1.522,126,0.902,144,1.191,145,0.69,146,0.542,147,0.87,156,4.994,187,2.534,230,2.979,231,1.658,266,1.853,272,1.118,353,1.62,375,4.415,376,2.405,447,3.67,455,3.67,492,3.67,495,4.52,542,3.976,571,1.269,757,1.784,796,3.063,847,2.682,983,4.994,1000,3.323,1002,3.67,1010,3.063,1016,5.138,1040,4.167,1305,3.323,1306,3.885,1323,3.67,1333,3.67,1334,6.493,1335,6.969,1336,5.712,1337,4.199,1338,6.493,1339,5.712,1340,4.199,1341,4.199,1342,4.199,1343,4.199,1344,5.712,1345,5.712,1346,5.712,1347,4.199,1348,4.199,1349,4.199,1350,4.199,1351,4.199,1352,4.199,1353,5.712,1354,4.199,1355,4.199,1356,5.712,1357,4.199,1358,4.199,1359,4.199,1360,4.199,1361,6.493,1362,4.199,1363,4.199,1364,4.199,1365,4.199,1366,4.199,1367,3.67,1368,4.199,1369,4.199,1370,4.199,1371,4.199,1372,4.199,1373,4.199,1374,4.199,1375,4.199,1376,5.712,1377,4.199,1378,4.199,1379,4.199,1380,5.712,1381,4.199,1382,4.199,1383,4.199,1384,5.712,1385,5.712,1386,4.199,1387,4.199,1388,4.199,1389,5.712,1390,4.199,1391,5.712,1392,4.199]],["title/injectables/ParseIntPipeCustom.html",[117,0.777,602,3.01]],["body/injectables/ParseIntPipeCustom.html",[3,0.168,4,0.15,5,0.113,7,0.272,8,0.012,9,0.85,10,0.168,11,0.263,13,0.01,14,0.01,117,1.339,118,2.103,120,0.68,121,1.894,123,0.82,125,1.573,126,1.06,144,1.675,145,0.628,146,0.763,147,1.224,272,1.573,376,3.384,384,2.822,385,3.222,602,5.187,669,3.384,833,5.627,1185,6.038,1393,5.164,1394,7.111,1395,5.907,1396,7.111,1397,5.907,1398,5.907]],["title/classes/Permission.html",[11,0.184,266,1.821]],["body/classes/Permission.html",[3,0.114,4,0.102,5,0.077,7,0.211,8,0.012,10,0.18,11,0.246,13,0.008,14,0.008,15,1.606,51,1.068,58,1.521,99,2.539,109,1.212,120,0.462,123,1.116,126,1.141,141,2.074,145,0.788,146,1.08,147,1.605,228,1.251,241,2.644,265,3.172,266,2.797,272,1.068,278,1.102,350,2.503,353,1.57,373,1.742,407,2.442,414,2.043,422,3.695,423,3.172,451,1.998,464,1.916,476,2.693,481,2.088,493,3.172,552,1.003,570,3.172,658,2.693,694,3.028,696,2.693,707,2.797,711,3.457,714,3.457,715,5.08,717,3.861,719,3.63,720,3.826,730,2.42,731,3.17,733,2.42,736,2.797,770,2.42,848,3.028,868,4.049,929,2.726,941,2.726,1399,2.924,1400,4.009,1401,4.009,1402,4.009,1403,4.009,1404,4.009,1405,4.009,1406,4.009,1407,4.009,1408,4.009,1409,4.009,1410,4.009,1411,4.009,1412,2.924,1413,3.504]],["title/controllers/PermissionsController.html",[0,1.065,1414,3.01]],["body/controllers/PermissionsController.html",[0,1.002,2,1.102,3,0.111,4,0.098,5,0.074,7,0.288,8,0.012,9,0.559,10,0.111,11,0.173,13,0.008,14,0.008,56,1.337,78,2.864,104,1.83,120,0.447,121,1.442,123,0.985,125,1.888,126,1.119,132,1.856,140,2.814,141,1.83,144,2.011,145,0.754,146,0.915,147,1.469,148,2.215,168,1.636,171,3.245,172,2.819,173,3.395,181,1.856,182,3.511,183,1.714,188,1.65,193,2.022,194,1.252,254,2.217,257,3.245,266,3.391,435,2.295,502,2.25,507,2.9,571,1.884,572,2.552,573,2.217,576,2.344,578,2.344,579,2.219,582,3.268,584,3.268,585,1.714,588,1.59,589,2.344,591,1.856,593,2.481,595,2.118,596,2.224,599,1.65,601,1.59,606,1.782,607,1.59,608,2.344,619,2.344,620,2.344,622,2.344,623,2.344,625,2.641,627,2.224,865,4.691,1105,2.641,1109,2.641,1112,2.833,1121,3.681,1124,2.481,1126,2.481,1414,3.949,1415,3.395,1416,3.883,1417,3.883,1418,3.883,1419,3.073,1420,3.883,1421,3.883,1422,5.225,1423,3.883,1424,3.981,1425,3.395,1426,4.284,1427,3.883,1428,3.883,1429,3.883,1430,3.883,1431,3.883,1432,3.883,1433,3.883]],["title/modules/PermissionsModule.html",[15,0.97,34,2.806]],["body/modules/PermissionsModule.html",[2,1.937,3,0.157,4,0.14,5,0.106,7,0.304,8,0.012,9,0.795,10,0.157,11,0.246,13,0.01,14,0.01,15,1.742,17,2.262,18,2.348,19,2.536,20,2.536,21,2.348,22,3.4,23,2.536,34,5.508,40,3.133,41,2.536,42,2.438,44,2.536,50,2.754,51,1.472,145,0.726,266,2.438,348,2.878,350,2.182,534,3.758,638,2.878,757,2.348,848,2.64,929,4.643,931,4.373,1414,5.405,1424,5.175,1425,4.83,1434,4.83,1435,4.83,1436,5.526,1437,5.526,1438,4.83]],["title/injectables/PermissionsService.html",[117,0.777,1424,2.636]],["body/injectables/PermissionsService.html",[3,0.069,4,0.061,5,0.046,7,0.269,8,0.012,9,0.349,10,0.069,11,0.108,12,1.455,13,0.005,14,0.005,15,1.109,51,0.646,55,1.823,56,1.841,57,1.159,58,1.296,78,2.744,83,2.456,86,1.314,94,2.889,99,1.113,104,1.501,109,0.733,112,1.18,117,0.719,118,0.864,120,0.279,121,1.016,123,0.857,125,1.549,126,1.014,140,2.508,144,1.751,145,0.776,146,0.797,147,1.28,148,1.892,149,2.898,168,2.238,188,1.031,197,1.113,215,1.92,228,0.757,229,1.113,243,1.113,254,2.19,264,1.381,266,3.108,272,2.098,273,3.296,278,1.296,293,1.263,295,1.77,299,1.863,349,2.456,363,2.785,373,1.296,384,1.159,385,1.323,386,1.263,398,1.65,414,2.157,435,2.379,437,2.081,459,3.802,460,3.013,461,3.013,467,2.702,468,2.702,475,2.702,476,1.031,481,1.263,482,2.456,489,3.063,502,2.24,507,2.112,518,2.303,539,3.536,541,3.063,542,2.572,546,2.702,550,2.186,551,2.186,571,1.153,572,1.562,573,1.562,579,1.866,585,1.684,588,1.562,591,1.159,599,1.031,601,0.993,648,2.303,650,2.847,655,1.464,656,1.39,658,1.031,659,2.847,660,1.464,661,1.464,662,1.464,663,1.464,664,1.464,665,2.847,666,1.031,667,1.464,668,2.303,669,1.39,670,2.303,672,2.303,673,1.464,675,1.464,676,1.464,677,1.464,678,1.464,680,1.464,681,2.847,682,1.464,683,1.464,684,1.464,685,1.464,686,1.464,687,2.847,688,2.847,692,3.013,696,1.031,700,1.323,702,3.228,705,1.464,707,1.071,848,3.086,857,1.55,865,3.416,868,4.126,936,3.336,941,1.65,945,2.121,1179,2.121,1422,4.68,1424,2.438,1426,3.02,1438,2.121,1439,2.121,1440,2.426,1441,2.426,1442,3.816,1443,2.426,1444,3.02,1445,2.426,1446,2.426,1447,2.426,1448,2.426,1449,4.716,1450,2.121,1451,2.426,1452,2.426,1453,3.816,1454,4.716,1455,2.426,1456,2.426,1457,2.426,1458,2.426,1459,2.426,1460,2.121,1461,2.426,1462,2.121,1463,5.814,1464,4.716,1465,3.816,1466,3.816,1467,2.121,1468,2.426,1469,1.92,1470,2.426,1471,3.816,1472,2.426,1473,2.426,1474,2.426]],["title/classes/RegisterUserDto.html",[11,0.184,166,2.364]],["body/classes/RegisterUserDto.html",[3,0.089,4,0.079,5,0.06,7,0.233,8,0.012,10,0.173,11,0.303,13,0.007,14,0.007,58,1.27,86,1.591,101,1.841,102,1.148,112,2.035,120,0.359,123,0.946,126,1.13,141,1.759,145,0.692,146,0.955,166,2.648,184,1.882,185,4.04,194,1.005,240,1.624,258,3.519,264,2.411,270,1.49,278,1.873,287,3.519,296,3.549,299,2.176,326,1.702,353,1.311,373,2.069,414,1.005,429,2.24,446,3.155,502,0.913,521,3.323,535,1.554,536,1.7,552,0.78,559,3.14,579,1.665,607,1.893,666,2.34,710,3.49,712,2.04,713,1.786,736,2.04,738,1.992,739,3.733,743,4.018,744,1.882,745,4.143,746,4.018,747,2.79,748,2.953,749,2.953,750,3.325,751,2.274,752,2.953,753,1.376,754,2.274,755,2.953,756,1.7,757,2.34,758,3.714,759,4.018,760,4.018,761,3.717,762,5.397,763,3.143,764,3.372,765,3.519,766,3.519,767,3.892,768,4.018,769,3.892,770,1.882,771,2.12,772,1.992,773,1.992,774,1.992,775,1.992,776,3.143,777,2.12,778,3.143,779,2.274,782,3.388,900,2.467,909,2.726,910,2.726,1475,3.118,1476,3.118,1477,3.118,1478,3.118,1479,3.118,1480,3.118]],["title/interfaces/Response.html",[151,2.491,1070,2.636]],["body/interfaces/Response.html",[0,1.244,3,0.137,4,0.122,5,0.092,7,0.291,8,0.012,9,0.693,10,0.178,11,0.215,13,0.009,14,0.009,80,2.401,104,1.616,117,1.179,120,0.555,126,0.966,146,0.985,151,4.197,183,2.126,228,2.297,229,2.211,230,2.211,239,2.76,241,2.991,244,2.76,245,3.276,272,1.961,353,1.776,392,3.514,407,3.451,557,5.825,559,2.909,562,6.188,565,6.038,579,2.102,606,2.211,847,3.078,985,4.605,1070,3.078,1071,3.813,1171,5.502,1174,4.566,1176,3.514,1181,3.514,1188,3.813,1309,4.257,1481,3.813,1482,5.472,1483,5.472,1484,5.472,1485,5.472,1486,4.212,1487,3.514,1488,3.514,1489,4.212,1490,4.212,1491,4.212,1492,4.212,1493,4.212,1494,4.212,1495,4.212,1496,4.212]],["title/classes/Resume.html",[11,0.184,1497,2.491]],["body/classes/Resume.html",[3,0.103,4,0.092,5,0.069,7,0.25,8,0.012,10,0.171,11,0.23,13,0.007,14,0.007,51,0.965,58,1.417,75,1.731,109,1.095,120,0.417,123,1.123,126,1.123,141,2.087,145,0.638,146,1.09,147,1.565,228,1.131,272,0.965,350,2.37,353,1.462,373,2.03,407,2.275,414,2.107,422,3.578,429,1.247,451,1.805,464,1.731,476,2.549,481,1.887,503,4.081,552,0.906,640,3.167,658,2.549,694,2.867,696,2.777,707,2.648,711,3.273,714,3.566,715,5.069,717,3.847,719,3.745,720,4.334,730,2.187,731,2.953,733,2.187,736,3.513,876,4.377,877,4.377,878,4.177,879,4.749,1133,2.643,1261,2.867,1497,3.622,1498,2.643,1499,5.246,1500,5.466,1501,5.173,1502,3.623,1503,3.623,1504,3.623,1505,3.623,1506,3.623,1507,3.623,1508,3.623,1509,3.623,1510,3.623,1511,3.623,1512,3.623,1513,3.623,1514,3.623,1515,3.623,1516,3.623,1517,2.643,1518,3.623,1519,2.643,1520,3.167]],["title/controllers/ResumesController.html",[0,1.065,1521,3.01]],["body/controllers/ResumesController.html",[0,0.937,2,1.029,3,0.103,4,0.092,5,0.069,7,0.282,8,0.012,9,0.522,10,0.103,11,0.162,13,0.007,14,0.007,56,1.249,78,2.779,104,1.854,120,0.418,121,1.374,123,0.998,125,1.913,126,1.106,132,1.734,140,2.914,141,1.854,144,2.037,145,0.764,146,0.927,147,1.489,148,2.295,168,1.56,171,3.128,172,2.687,181,1.734,182,3.599,183,1.601,188,1.541,193,1.889,194,1.17,254,2.113,300,2.646,435,2.212,502,2.282,507,2.837,571,1.815,572,2.459,573,2.113,576,2.19,578,2.19,579,2.171,582,3.115,584,3.115,585,1.601,588,1.485,589,2.19,591,1.734,593,2.318,595,1.979,596,2.078,599,1.541,601,1.485,606,1.665,607,1.485,608,2.19,619,2.19,620,2.19,622,2.19,623,2.19,625,2.467,627,2.078,873,2.318,878,3.297,887,4.589,1105,2.467,1109,2.467,1112,2.646,1121,3.509,1124,2.318,1126,2.318,1419,2.871,1497,4.559,1521,3.764,1522,3.172,1523,6.042,1524,5.16,1525,3.172,1526,3.628,1527,3.628,1528,3.628,1529,3.628,1530,5.16,1531,3.628,1532,3.628,1533,3.628,1534,5.136,1535,3.628,1536,3.837,1537,3.172,1538,4.083,1539,3.628,1540,3.628,1541,3.628,1542,3.628,1543,3.628,1544,3.628,1545,3.628,1546,3.628,1547,3.628]],["title/modules/ResumesModule.html",[15,0.97,35,2.806]],["body/modules/ResumesModule.html",[2,1.937,3,0.157,4,0.14,5,0.106,7,0.304,8,0.012,9,0.795,10,0.157,11,0.246,13,0.01,14,0.01,15,1.742,17,2.262,18,2.348,19,2.536,20,2.536,21,2.348,22,3.4,23,2.536,35,5.508,40,3.133,41,2.536,42,2.438,44,2.536,50,2.754,51,1.472,145,0.726,348,2.878,350,2.182,534,3.758,638,2.878,757,2.348,848,2.64,1497,3.335,1519,4.98,1521,5.405,1536,5.175,1537,4.83,1548,4.83,1549,4.83,1550,5.526,1551,5.526,1552,4.83,1553,5.526]],["title/injectables/ResumesService.html",[117,0.777,1536,2.636]],["body/injectables/ResumesService.html",[3,0.063,4,0.056,5,0.042,7,0.261,8,0.012,9,0.317,10,0.063,11,0.098,12,1.348,13,0.005,14,0.005,51,0.587,55,1.053,56,1.524,57,1.053,58,1.217,78,2.643,83,3.083,94,2.912,99,1.623,101,0.666,102,0.812,104,1.528,109,1.069,112,1.268,117,0.666,118,0.785,120,0.254,121,0.942,123,0.864,125,1.577,126,1.031,140,2.575,144,1.764,145,0.78,146,0.803,147,1.289,148,1.988,149,2.951,168,2.243,188,0.936,197,1.011,228,1.104,229,1.623,230,1.011,231,1.749,243,1.623,244,1.263,254,1.448,259,1.744,264,1.624,272,2.05,273,3.14,278,1.393,293,1.148,299,2.001,349,2.888,363,2.888,373,1.627,384,1.053,385,1.202,386,1.148,414,2.15,423,2.798,424,1.927,435,2.181,437,1.929,451,1.099,453,1.263,459,3.767,463,1.744,467,2.536,468,2.536,475,3.92,476,1.502,482,2.306,489,3.177,493,1.744,502,2.253,503,2.405,507,2.001,518,1.331,520,1.744,529,1.927,535,1.099,539,3.391,541,3.177,542,3.025,546,2.536,550,2.902,551,2.902,571,1.069,572,1.813,573,1.448,579,1.789,585,1.56,588,1.448,591,1.69,599,0.936,601,0.903,638,1.148,648,1.331,650,3.058,655,1.331,656,1.263,658,0.936,659,2.134,660,2.134,661,1.331,662,1.331,663,1.331,664,1.331,665,2.673,666,0.936,667,1.331,668,2.134,669,1.263,670,2.134,672,2.134,673,1.331,675,1.331,676,1.331,677,1.331,678,1.331,680,1.331,681,1.331,682,1.331,683,1.331,684,1.331,685,1.331,686,1.331,687,3.058,688,3.058,692,2.829,694,2.116,695,1.929,696,1.881,700,1.202,702,3.058,705,1.331,707,0.973,714,1.929,717,1.841,735,1.499,820,1.744,876,1.608,877,1.608,878,3.544,887,3.783,965,1.608,985,2.134,1146,1.608,1154,3.091,1306,2.405,1460,3.091,1462,1.927,1497,3.755,1499,3.091,1517,2.579,1525,3.091,1534,4.397,1536,2.259,1538,2.798,1552,1.927,1554,1.927,1555,3.536,1556,2.204,1557,2.204,1558,3.536,1559,2.204,1560,2.204,1561,2.204,1562,3.536,1563,2.204,1564,2.204,1565,2.204,1566,2.204,1567,2.204,1568,2.204,1569,3.536,1570,2.204,1571,2.204,1572,2.204,1573,2.204,1574,2.204,1575,2.204,1576,3.536,1577,6.22,1578,4.428,1579,2.204,1580,3.536,1581,2.204,1582,2.204,1583,2.204,1584,3.871,1585,2.204,1586,2.204,1587,1.927,1588,2.204,1589,2.204,1590,2.798,1591,2.204]],["title/classes/Role.html",[11,0.184,326,1.52]],["body/classes/Role.html",[3,0.1,4,0.089,5,0.067,7,0.225,8,0.012,10,0.168,11,0.224,13,0.007,14,0.007,51,0.932,58,1.769,80,1.744,86,1.205,99,1.606,101,1.52,109,1.058,112,0.876,115,2.38,120,0.403,123,1.087,126,1.074,141,2.021,145,0.754,146,1.074,147,1.551,214,2.77,228,2.009,229,2.308,231,1.382,232,3.036,234,2.77,235,2.553,243,1.606,256,2.38,257,3.696,258,2.236,260,2.77,265,2.77,266,3.226,272,0.932,278,1.382,289,3.06,292,2.236,326,2.168,327,2.236,344,2.553,350,2.325,353,1.427,373,1.618,387,2.236,392,2.553,393,3.06,399,2.77,407,2.84,414,1.898,422,3.537,451,2.507,464,2.403,476,2.501,481,1.823,482,1.823,495,2.77,496,2.553,497,2.77,507,1.382,535,1.744,552,0.876,638,1.823,658,2.501,694,2.813,696,2.501,700,1.909,707,2.598,711,3.211,712,2.598,714,3.211,715,5.004,717,3.696,719,3.372,720,3.885,730,2.113,731,2.881,733,2.113,736,3.132,757,2.137,794,3.761,828,3.669,930,2.553,931,5.093,1232,2.77,1500,3.98,1501,5.093,1592,2.553,1593,3.5,1594,3.5,1595,3.5,1596,3.5,1597,3.5,1598,3.5,1599,3.5,1600,3.5,1601,3.5,1602,3.5,1603,3.5,1604,3.06,1605,3.5,1606,3.5,1607,3.5,1608,6.436,1609,6.436,1610,3.5,1611,3.5,1612,5.03,1613,3.5,1614,3.5,1615,3.06,1616,3.06,1617,3.5,1618,3.5,1619,3.5,1620,3.5,1621,3.5]],["title/controllers/RolesController.html",[0,1.065,1622,3.01]],["body/controllers/RolesController.html",[0,1.007,2,1.107,3,0.111,4,0.099,5,0.075,7,0.288,8,0.012,9,0.562,10,0.111,11,0.174,13,0.008,14,0.008,56,1.343,78,2.87,104,1.833,120,0.449,121,1.447,123,0.986,125,1.892,126,1.12,132,1.864,140,2.817,141,1.833,144,2.014,145,0.755,146,0.917,147,1.472,148,2.217,168,1.642,171,2.828,172,2.828,181,1.864,182,3.518,183,1.722,188,1.658,189,3.254,193,2.032,194,1.258,254,2.224,326,2.833,435,2.301,502,2.252,507,2.904,571,1.642,572,2.558,573,2.224,576,2.355,578,2.355,579,2.222,582,3.278,584,3.278,585,1.722,588,1.598,589,2.355,591,1.864,593,2.493,595,2.128,596,2.235,599,1.658,601,1.598,606,1.79,607,1.598,608,2.355,619,2.355,620,2.355,622,2.355,623,2.355,625,2.653,627,2.235,888,4.697,1105,2.653,1109,2.653,1112,2.846,1119,3.088,1121,3.693,1124,2.493,1126,2.493,1419,3.088,1622,3.962,1623,3.411,1624,5.462,1625,3.411,1626,3.902,1627,3.902,1628,3.902,1629,3.902,1630,5.231,1631,3.902,1632,3.411,1633,4.298,1634,3.902,1635,3.902,1636,3.902,1637,3.902,1638,3.902,1639,3.902,1640,3.902]],["title/modules/RolesModule.html",[15,0.97,36,2.806]],["body/modules/RolesModule.html",[2,1.937,3,0.157,4,0.14,5,0.106,7,0.304,8,0.012,9,0.795,10,0.157,11,0.246,13,0.01,14,0.01,15,1.742,17,2.262,18,2.348,19,2.536,20,2.536,21,2.348,22,3.4,23,2.536,36,5.508,40,3.133,41,2.536,42,2.438,44,2.536,50,2.754,51,1.472,145,0.726,189,4.218,326,2.035,327,4.362,348,2.878,350,2.182,351,4.031,534,3.758,638,2.878,757,2.348,848,2.64,1622,5.405,1632,4.83,1641,5.526,1642,5.526,1643,5.526,1644,5.526,1645,4.83]],["title/injectables/RolesService.html",[117,0.777,189,2.149]],["body/injectables/RolesService.html",[3,0.07,4,0.062,5,0.047,7,0.275,8,0.012,9,0.352,10,0.07,11,0.109,12,1.464,13,0.005,14,0.005,15,0.575,51,0.651,55,1.168,56,1.632,57,1.168,58,1.303,78,2.752,83,3.373,86,0.842,94,2.894,99,1.122,104,1.507,109,0.739,112,1.186,117,0.723,118,0.87,120,0.282,121,1.023,123,0.86,125,1.554,126,1.016,140,2.513,144,1.757,145,0.778,146,0.8,147,1.284,148,1.896,149,2.908,168,2.27,188,1.039,189,1.999,197,1.122,203,1.562,228,0.763,229,1.122,230,1.762,243,1.122,254,1.572,257,1.273,264,1.388,272,2.074,273,3.303,278,1.303,293,1.273,299,1.872,326,2.471,349,2.469,363,2.797,364,3.038,373,1.303,384,1.835,385,1.334,386,1.273,387,1.562,389,2.138,396,1.935,414,2.162,435,2.281,437,2.094,459,3.911,460,2.453,461,2.453,465,3.038,466,1.935,467,2.715,468,2.715,475,2.715,476,1.039,482,2.469,489,3.076,502,2.243,507,2.121,518,1.476,539,3.548,541,3.076,542,2.929,546,2.715,550,3.076,551,3.076,571,1.16,572,1.572,573,1.572,579,1.872,585,1.694,588,1.572,591,1.835,599,1.039,601,1.001,648,2.318,650,2.862,655,1.476,656,1.401,658,1.039,659,2.862,660,1.476,661,1.476,662,1.476,663,1.476,664,1.476,665,2.862,666,1.039,667,1.476,668,2.318,669,1.401,670,2.318,672,2.318,673,1.476,675,1.476,676,1.476,677,1.476,678,1.476,680,1.476,681,1.476,682,1.476,683,1.476,684,1.476,685,1.476,686,1.476,687,2.862,688,2.862,692,3.029,696,1.039,700,1.334,702,3.242,705,2.318,707,1.079,848,1.168,868,1.562,888,3.957,891,2.138,942,2.801,959,3.038,1306,1.663,1584,3.356,1590,1.935,1625,3.356,1630,4.562,1633,3.038,1645,2.138,1646,2.138,1647,2.445,1648,2.445,1649,2.445,1650,2.445,1651,2.445,1652,2.445,1653,2.445,1654,3.84,1655,2.445,1656,2.445,1657,2.445,1658,2.445,1659,2.445,1660,2.445,1661,6.194,1662,2.445,1663,3.356,1664,3.84,1665,3.84,1666,4.74,1667,3.84,1668,2.445,1669,2.445,1670,2.138,1671,2.445,1672,2.138,1673,2.445]],["title/classes/Subscriber.html",[11,0.184,1258,2.364]],["body/classes/Subscriber.html",[3,0.119,4,0.106,5,0.08,7,0.217,8,0.012,10,0.184,11,0.253,13,0.008,14,0.008,51,1.113,58,1.565,109,1.957,120,0.481,123,1.114,126,1.133,141,2.07,145,0.798,146,1.081,147,1.621,228,1.304,272,1.113,350,2.558,353,1.615,373,2.064,407,2.512,414,2.087,422,3.742,451,2.082,464,1.996,476,2.751,481,2.175,552,1.045,658,2.751,694,3.094,696,2.751,707,2.858,711,3.532,714,3.532,715,5.054,717,3.91,719,3.709,720,3.909,730,2.522,731,3.261,733,2.522,736,2.858,799,3.909,1258,3.709,1259,2.841,1310,2.841,1674,3.047,1675,4.177,1676,4.177,1677,4.177,1678,4.177,1679,3.652,1680,4.177,1681,4.177,1682,4.177,1683,4.177,1684,4.177,1685,4.177,1686,3.652,1687,3.652]],["title/controllers/SubscribersController.html",[0,1.065,1688,3.01]],["body/controllers/SubscribersController.html",[0,0.959,2,1.054,3,0.106,4,0.094,5,0.071,7,0.284,8,0.012,9,0.535,10,0.106,11,0.165,13,0.007,14,0.007,56,1.279,78,2.809,104,1.869,120,0.428,121,1.398,123,1.005,125,1.928,126,1.073,132,1.775,140,2.87,141,1.869,144,2.053,145,0.77,146,0.935,147,1.5,148,2.231,171,3.168,172,2.733,181,1.775,182,3.443,183,1.639,188,1.578,193,1.935,194,1.198,254,2.149,300,2.71,435,2.241,502,1.936,507,2.859,571,1.839,572,2.491,573,2.149,576,2.242,578,2.242,579,2.188,584,3.168,585,1.639,588,1.521,589,2.242,595,2.862,596,2.128,599,1.578,601,1.521,606,1.705,607,1.521,608,2.242,619,2.242,620,2.242,622,2.242,623,2.242,627,2.128,829,2.71,897,4.624,1000,6.198,1109,2.526,1124,2.373,1126,2.373,1258,4.581,1271,3.248,1301,3.673,1688,3.828,1689,3.248,1690,4.587,1691,3.248,1692,3.715,1693,3.715,1694,3.715,1695,3.715,1696,3.715,1697,3.248,1698,3.715,1699,3.715,1700,3.715,1701,3.715,1702,3.248,1703,4.922,1704,3.715,1705,3.715,1706,3.248,1707,4.153,1708,4.815,1709,3.715,1710,3.715,1711,3.715,1712,3.715,1713,3.715,1714,3.715,1715,3.715,1716,3.715,1717,3.715,1718,3.715,1719,3.715,1720,3.715]],["title/modules/SubscribersModule.html",[15,0.97,37,2.806]],["body/modules/SubscribersModule.html",[2,1.937,3,0.157,4,0.14,5,0.106,7,0.309,8,0.012,9,0.795,10,0.157,11,0.246,13,0.01,14,0.01,15,1.742,17,2.262,18,2.348,19,2.536,20,2.536,21,2.348,22,3.4,23,2.536,37,5.508,40,3.133,41,2.536,42,2.438,44,2.536,50,2.754,51,1.472,145,0.587,348,2.878,350,2.182,1258,3.165,1301,4.89,1309,3.758,1310,4.643,1331,4.83,1688,5.405,1706,4.83,1721,5.526,1722,5.526,1723,5.526,1724,5.526,1725,4.83]],["title/injectables/SubscribersService.html",[117,0.777,1301,2.491]],["body/injectables/SubscribersService.html",[3,0.071,4,0.063,5,0.048,7,0.271,8,0.012,9,0.359,10,0.071,11,0.111,12,1.487,13,0.006,14,0.006,51,0.664,55,1.192,56,1.653,57,1.192,58,1.32,78,2.773,83,2.031,94,2.979,99,1.145,104,1.612,109,1.179,112,0.976,117,0.734,118,0.888,120,0.287,121,1.039,123,0.906,125,1.664,126,0.964,140,2.653,144,1.851,145,0.782,146,0.843,147,1.353,148,1.951,149,3.113,168,2.222,188,1.06,197,1.145,228,0.778,229,1.79,243,1.145,254,1.966,264,1.406,272,2.095,273,3.32,278,1.072,288,1.696,293,1.299,299,1.54,349,2.501,363,2.827,373,1.951,384,1.863,385,1.36,386,1.299,414,2.013,421,1.506,435,2.3,437,2.127,453,1.429,459,3.828,460,1.594,461,1.594,467,2.75,468,2.75,475,2.75,476,1.06,482,2.501,489,3.375,502,2.079,507,2.144,518,1.506,539,3.869,541,3.375,542,3.213,546,2.75,550,3.375,551,3.375,571,1.179,572,1.597,573,1.597,579,1.888,585,1.721,588,1.597,599,1.06,601,1.021,648,2.354,650,2.898,655,1.506,656,1.429,658,1.06,659,4.077,660,1.506,661,1.506,662,1.506,663,1.506,664,1.506,665,2.898,666,1.06,667,1.506,668,2.354,669,1.429,670,2.354,672,2.354,673,1.506,675,1.506,676,1.506,677,1.506,678,1.506,680,1.506,681,1.506,682,1.506,683,1.506,684,1.506,685,1.506,686,1.506,687,2.354,688,2.354,692,2.491,696,1.06,700,1.36,702,3.277,705,1.506,707,1.101,799,2.354,897,3.99,1258,3.738,1259,1.696,1264,2.181,1265,3.409,1272,2.181,1301,2.354,1616,2.181,1663,3.409,1690,3.409,1691,3.409,1697,3.409,1702,3.409,1703,4.247,1707,3.086,1725,2.181,1726,2.181,1727,2.494,1728,2.494,1729,2.494,1730,2.494,1731,2.494,1732,2.494,1733,2.494,1734,2.494,1735,3.9,1736,2.494,1737,2.494,1738,2.494,1739,2.494,1740,2.494,1741,2.494,1742,3.9,1743,5.892,1744,3.9,1745,3.9,1746,2.494,1747,2.494,1748,2.494,1749,2.494,1750,2.494]],["title/injectables/TransformInterceptor.html",[117,0.777,1488,3.01]],["body/injectables/TransformInterceptor.html",[0,1.251,3,0.138,4,0.123,5,0.093,7,0.292,8,0.012,9,0.697,10,0.179,11,0.216,12,1.848,13,0.009,14,0.009,80,2.415,104,1.622,117,1.183,118,1.725,120,0.558,121,1.674,123,0.873,125,1.291,126,0.673,144,1.782,145,0.668,146,0.811,147,1.302,151,3.793,183,2.138,228,1.961,229,2.224,230,2.224,239,2.776,241,3.002,244,2.776,245,3.295,272,1.965,392,3.535,407,2.773,557,3.835,559,2.396,562,5.518,565,4.972,579,1.465,606,2.224,847,3.096,985,3.793,1070,3.096,1170,4.236,1171,6.198,1174,5.381,1176,4.583,1181,3.535,1188,3.835,1309,4.273,1481,3.835,1482,5.493,1483,6.449,1484,6.096,1485,5.493,1486,4.236,1487,3.535,1488,4.583,1489,6.096,1490,6.096,1491,4.236,1492,4.236,1493,4.236,1494,4.236,1495,4.236,1496,4.236,1751,4.846,1752,4.846,1753,4.846]],["title/classes/UpdateCompanyDto.html",[11,0.184,592,2.806]],["body/classes/UpdateCompanyDto.html",[3,0.172,4,0.153,5,0.116,7,0.276,8,0.012,10,0.172,11,0.269,13,0.01,14,0.01,101,1.829,102,2.229,112,1.514,115,4.115,147,1.254,194,1.951,230,2.777,235,4.414,241,2.891,256,4.115,264,1.771,552,1.514,554,3.311,571,1.829,575,4.609,592,4.906,600,4.788,781,4.788,1754,5.29,1755,7.215,1756,4.355,1757,5.29,1758,6.051,1759,6.051,1760,6.051]],["title/classes/UpdateFileDto.html",[11,0.184,994,2.806]],["body/classes/UpdateFileDto.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,10,0.18,11,0.281,13,0.011,14,0.011,194,2.035,552,1.579,554,3.394,571,1.908,787,4.293,789,4.995,994,5.03,1008,4.995,1756,3.81,1761,5.518,1762,7.397]],["title/classes/UpdateJobDto.html",[11,0.184,1111,2.806]],["body/classes/UpdateJobDto.html",[3,0.171,4,0.152,5,0.115,7,0.275,8,0.012,10,0.171,11,0.268,13,0.01,14,0.01,101,1.82,112,1.507,115,4.095,147,1.248,194,1.941,228,2.245,229,2.763,231,2.378,235,4.392,446,3.449,498,3.635,552,1.507,554,3.301,571,1.82,790,3.635,792,4.392,1095,4.765,1111,4.892,1116,4.765,1444,4.765,1756,4.342,1757,5.264,1763,5.264,1764,7.194,1765,6.022,1766,6.022,1767,6.022]],["title/classes/UpdatePermissionDto.html",[11,0.184,1422,2.806]],["body/classes/UpdatePermissionDto.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,10,0.18,11,0.281,13,0.011,14,0.011,194,2.035,552,1.579,554,3.394,571,1.908,865,4.033,867,4.995,1422,5.03,1426,4.995,1756,3.81,1768,5.518,1769,7.397]],["title/classes/UpdateResumeDto.html",[11,0.184,1534,2.806]],["body/classes/UpdateResumeDto.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,10,0.18,11,0.281,13,0.011,14,0.011,194,2.035,552,1.579,554,3.394,571,1.908,873,4.033,875,4.605,1534,5.03,1538,4.995,1756,3.81,1770,5.518,1771,7.397]],["title/classes/UpdateRoleDto.html",[11,0.184,1630,2.806]],["body/classes/UpdateRoleDto.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,10,0.18,11,0.281,13,0.011,14,0.011,194,2.035,552,1.579,554,3.394,571,1.908,888,4.033,890,4.995,1630,5.03,1633,4.995,1756,3.81,1772,5.518,1773,7.397]],["title/classes/UpdateSubscriberDto.html",[11,0.184,1703,2.806]],["body/classes/UpdateSubscriberDto.html",[3,0.18,4,0.16,5,0.121,7,0.283,8,0.012,10,0.18,11,0.281,13,0.011,14,0.011,194,2.035,552,1.579,554,3.394,571,1.908,897,4.033,899,4.995,1703,5.03,1707,4.995,1756,3.81,1774,5.518,1775,7.397]],["title/classes/UpdateUserDto.html",[11,0.184,1776,2.806]],["body/classes/UpdateUserDto.html",[3,0.148,4,0.131,5,0.099,7,0.275,8,0.012,10,0.148,11,0.292,13,0.009,14,0.009,80,3.272,100,3.786,101,1.985,112,1.643,115,3.53,120,0.598,123,0.721,126,0.912,141,1.34,146,0.67,148,1.427,186,3.316,194,1.673,232,3.133,256,4.898,264,2.216,272,1.749,353,1.862,414,2.322,435,1.912,452,5.699,453,2.973,454,3.786,478,3.316,502,1.922,518,3.963,552,1.299,554,3.013,559,1.979,571,1.569,738,3.316,739,3.013,753,2.29,756,2.831,758,3.013,761,4.128,782,2.703,965,4.789,1444,5.196,1587,5.74,1776,4.898,1777,5.74,1778,6.566,1779,5.191,1780,5.191,1781,5.191,1782,7.202,1783,5.191,1784,5.191]],["title/classes/User.html",[11,0.184,148,1.134]],["body/classes/User.html",[3,0.094,4,0.084,5,0.063,7,0.218,8,0.012,10,0.163,11,0.254,13,0.007,14,0.007,51,0.883,58,1.568,80,2.409,86,1.664,101,1.001,102,1.22,109,2.105,112,0.829,120,0.382,123,1.122,126,1.139,141,2.085,145,0.784,146,1.083,147,1.528,148,1.833,228,1.509,231,1.309,241,1.583,270,2.31,272,0.883,278,1.568,295,2.417,302,4.163,324,2.117,326,2.31,328,2.253,344,2.417,350,2.634,351,2.417,353,1.371,373,1.914,382,2.117,407,2.133,414,2.022,422,3.673,429,1.965,446,1.898,451,2.409,464,3.187,476,2.665,478,2.117,481,2.517,535,1.651,536,1.807,552,0.829,579,1.461,658,2.424,694,2.727,696,2.424,700,1.807,707,2.518,710,3.269,711,3.112,714,3.421,715,5.062,717,3.627,719,3.593,720,4.026,730,2,731,3.269,732,2.896,733,2.918,734,3.287,735,3.287,736,3.173,761,3.112,767,3.646,769,3.646,1095,2.622,1500,3.825,1501,3.825,1679,4.226,1686,4.226,1785,2.417,1786,3.313,1787,3.313,1788,3.313,1789,3.313,1790,3.313,1791,3.313,1792,3.313,1793,3.313,1794,3.313,1795,3.313,1796,3.313,1797,3.313,1798,3.313,1799,3.313,1800,3.313,1801,3.313,1802,2.896]],["title/classes/UserLoginDto.html",[11,0.184,184,2.491]],["body/classes/UserLoginDto.html",[3,0.099,4,0.088,5,0.067,7,0.245,8,0.012,10,0.183,11,0.316,13,0.007,14,0.007,58,1.378,86,1.726,101,1.775,102,1.284,112,1.995,120,0.401,123,0.696,126,1.13,141,1.294,145,0.624,146,0.879,166,1.996,184,3.027,185,3.364,194,1.124,240,1.815,258,3.204,264,2.368,270,1.665,278,1.871,287,3.204,296,3.345,299,1.98,326,1.847,353,1.422,373,1.948,414,1.124,429,2.343,446,2.872,502,1.02,521,3.203,535,1.737,536,1.901,552,0.872,559,3.159,579,1.516,607,2.902,666,2.13,710,2.872,712,2.834,713,1.996,736,2.213,738,2.227,739,3.788,743,4.284,744,2.104,745,3.994,746,4.284,747,3.027,748,3.204,749,3.204,750,3.545,751,2.542,752,3.204,753,1.538,754,2.542,755,3.204,756,1.901,757,2.13,758,3.659,759,3.658,760,3.658,761,3.983,762,5.169,763,3.41,764,3.658,765,3.204,766,3.204,767,3.204,768,3.658,769,3.204,770,2.104,771,2.37,772,2.227,773,2.227,774,2.227,775,2.227,776,3.41,777,3.41,778,4.628,779,3.658,1803,5.014,1804,3.485,1805,3.485]],["title/controllers/UsersController.html",[0,1.065,1806,3.01]],["body/controllers/UsersController.html",[0,1.001,2,1.1,3,0.11,4,0.098,5,0.074,7,0.288,8,0.012,9,0.558,10,0.11,11,0.173,13,0.008,14,0.008,56,1.335,78,2.862,86,1.335,104,1.829,112,0.97,120,0.447,121,1.44,123,0.984,125,1.887,126,1.084,132,1.853,140,2.813,141,1.829,144,2.01,145,0.753,146,0.915,147,1.468,148,2.305,168,1.634,171,3.243,172,2.816,180,2.949,181,1.853,182,3.508,183,1.711,186,3.455,193,2.019,194,1.25,247,2.221,280,3.068,360,3.396,421,2.34,435,1.992,502,2.205,507,2.898,571,1.634,572,2.55,573,2.214,576,2.34,578,2.34,579,2.218,582,3.264,584,3.264,588,1.588,595,2.949,596,2.221,599,1.647,601,1.588,606,1.779,607,1.588,608,2.34,619,2.34,620,2.34,627,2.221,756,4.002,1105,2.637,1119,3.068,1121,3.677,1124,2.477,1126,2.477,1412,4.542,1776,4.99,1806,3.944,1807,3.39,1808,4.727,1809,3.39,1810,3.877,1811,3.877,1812,3.39,1813,3.877,1814,3.877,1815,3.877,1816,3.877,1817,3.39,1818,3.877,1819,3.877,1820,3.39,1821,3.39,1822,3.877,1823,3.877,1824,3.877,1825,3.877,1826,3.877,1827,3.877,1828,3.877,1829,3.877,1830,3.877,1831,3.877,1832,3.877,1833,3.877]],["title/modules/UsersModule.html",[15,0.97,38,2.636]],["body/modules/UsersModule.html",[2,1.829,3,0.144,4,0.128,5,0.096,7,0.302,8,0.012,9,0.726,10,0.144,11,0.225,13,0.009,14,0.009,15,1.891,17,2.065,18,2.143,19,2.314,20,2.314,21,2.143,22,3.261,23,3.261,38,5.141,40,2.958,41,2.314,42,2.225,44,2.314,50,2.513,51,1.343,58,1.386,80,2.513,86,1.736,101,1.524,102,1.857,112,1.613,113,3.693,116,3.429,145,0.536,148,1.386,241,2.41,243,2.958,247,2.889,278,1.772,324,4.119,348,2.626,349,2.626,350,1.992,360,4.578,398,3.429,479,3.679,482,3.357,635,4.409,638,2.626,1217,4.409,1232,3.991,1412,4.702,1469,3.991,1806,5.183,1820,4.409,1834,4.409,1835,5.043,1836,4.409,1837,5.043,1838,5.043,1839,4.409,1840,5.043,1841,5.043,1842,5.043]],["title/injectables/UsersService.html",[117,0.777,360,2.251]],["body/injectables/UsersService.html",[3,0.054,4,0.048,5,0.036,7,0.256,8,0.012,9,0.274,10,0.054,11,0.085,12,1.198,13,0.004,14,0.004,51,0.508,55,1.501,56,1.6,57,1.501,58,1.278,78,2.486,83,2.678,86,0.656,94,2.876,99,0.875,100,1.391,101,0.95,102,0.702,104,1.685,112,1.003,113,1.8,116,2.137,117,0.592,118,0.679,120,0.22,121,0.837,123,0.929,125,1.629,126,1.101,140,2.324,144,1.798,145,0.762,146,0.818,147,1.314,148,1.944,149,2.758,154,1.509,168,2.219,186,2.007,197,0.875,230,0.875,231,0.753,237,4.881,238,4.31,239,1.092,241,0.911,243,0.875,244,1.092,247,1.092,254,0.781,255,1.509,259,2.486,264,1.713,272,2.103,273,3.291,278,1.608,279,1.391,285,1.391,293,0.993,299,2.031,302,4.036,326,1.157,349,2.421,353,0.891,360,1.714,362,2.486,363,2.678,373,1.913,375,2.137,376,1.8,382,2.007,384,2.457,385,1.04,386,0.993,390,1.509,395,1.667,398,1.296,407,1.387,414,2.157,435,2.334,437,2.186,453,1.092,458,4.837,459,3.823,460,2.007,461,2.007,462,2.747,463,2.486,464,1.501,466,3.679,467,2.663,468,2.663,471,4.837,474,1.667,475,2.663,476,0.81,481,0.993,489,2.663,502,1.911,507,1.836,528,1.509,539,3.503,541,2.663,542,2.536,546,2.663,547,3.504,550,2.663,551,2.663,571,0.95,572,1.287,573,1.287,579,1.672,588,1.287,599,0.81,601,0.781,638,0.993,648,1.897,650,2.42,655,1.151,656,1.092,658,1.703,659,2.806,660,1.151,661,1.151,662,1.151,663,1.151,664,1.151,665,2.42,666,0.81,667,1.151,668,1.897,669,1.092,670,1.897,672,1.897,673,1.151,675,1.151,676,1.151,677,1.151,678,1.151,680,1.151,681,1.151,682,1.151,683,1.151,684,1.151,685,1.151,686,1.151,687,2.42,688,2.42,694,1.501,695,1.04,696,0.81,702,2.42,705,1.897,707,0.841,711,1.04,735,1.296,756,3.018,761,2.536,763,1.296,935,1.667,959,2.486,965,1.391,970,1.667,1146,1.391,1306,2.137,1467,1.667,1469,2.486,1590,3.679,1670,1.667,1672,1.667,1776,3.763,1808,2.747,1809,2.747,1812,2.747,1817,2.747,1821,1.667,1839,1.667,1843,1.667,1844,4.008,1845,4.008,1846,3.142,1847,3.142,1848,3.142,1849,1.906,1850,3.142,1851,1.906,1852,1.906,1853,1.906,1854,1.906,1855,3.142,1856,1.906,1857,3.142,1858,1.906,1859,1.906,1860,1.906,1861,1.906,1862,1.906,1863,1.906,1864,1.906,1865,1.906,1866,1.667,1867,3.142,1868,1.906,1869,3.142,1870,1.906,1871,1.906,1872,3.142,1873,1.906,1874,1.906,1875,1.906,1876,1.906,1877,1.906,1878,1.906,1879,4.008,1880,1.906,1881,1.906,1882,1.906,1883,4.008,1884,5.852,1885,1.906,1886,1.906,1887,1.906,1888,1.906,1889,1.906,1890,1.906,1891,3.142,1892,3.142,1893,1.906,1894,1.906,1895,1.906,1896,1.906,1897,1.906,1898,1.906]],["title/coverage.html",[1899,4.467]],["body/coverage.html",[0,1.946,1,1.914,5,0.078,6,2.293,8,0.012,11,0.368,13,0.006,14,0.006,21,1.115,39,1.784,75,1.254,117,1.493,119,2.293,130,1.914,131,2.293,140,0.934,146,0.887,148,0.721,151,1.584,166,1.503,168,0.793,175,1.914,178,1.584,180,1.431,181,1.254,182,1.366,184,1.584,185,3.196,189,1.366,208,1.914,266,1.158,312,1.784,313,1.784,324,1.676,326,0.966,327,1.676,352,2.293,360,1.431,382,1.676,384,1.254,387,1.676,388,1.914,429,1.396,553,2.293,568,1.914,569,2.293,575,1.676,592,1.784,597,1.676,602,1.914,633,1.914,641,2.293,654,1.914,666,3.696,709,3.617,738,3.854,756,1.431,780,2.293,781,3.21,787,1.784,788,2.293,789,3.21,790,1.584,791,3.21,792,3.617,846,1.914,865,1.676,866,2.293,867,3.21,873,1.676,874,3.21,875,3.617,887,1.676,888,1.676,889,2.293,890,3.21,897,1.676,898,2.293,899,3.21,919,1.914,920,2.293,922,1.676,929,1.784,932,2.293,941,1.784,942,1.914,943,2.076,986,2.293,987,1.914,988,2.293,994,1.784,1006,1.676,1040,1.914,1044,2.293,1055,1.914,1056,2.293,1070,2.591,1072,2.293,1075,3.617,1094,1.784,1098,1.784,1100,1.914,1101,2.293,1111,1.784,1114,1.584,1134,2.293,1143,2.076,1165,2.293,1166,3.21,1183,2.076,1184,2.076,1218,2.293,1237,2.293,1239,2.293,1246,1.914,1247,2.293,1254,1.676,1258,1.503,1259,1.784,1301,1.584,1310,1.784,1332,2.293,1333,2.293,1393,2.293,1399,3.617,1414,1.914,1415,2.293,1422,1.784,1424,1.676,1439,2.293,1481,3.21,1487,1.914,1488,1.914,1497,1.584,1498,3.617,1517,1.914,1519,1.914,1521,1.914,1522,2.293,1534,1.784,1536,1.676,1554,2.293,1592,3.617,1622,1.914,1623,2.293,1630,1.784,1646,2.293,1674,3.617,1688,1.914,1689,2.293,1703,1.784,1708,2.076,1726,2.293,1754,2.293,1761,2.293,1763,2.293,1768,2.293,1770,2.293,1772,2.293,1774,2.293,1776,1.784,1777,2.293,1785,3.617,1806,1.914,1807,2.293,1843,2.293,1899,2.076,1900,2.293,1901,2.624,1902,2.624,1903,8.414,1904,6.377,1905,7.049,1906,4.958,1907,6.377,1908,6.032,1909,7.049,1910,4.958,1911,6.032,1912,7.88,1913,6.649,1914,4.334,1915,5.812,1916,2.293,1917,2.624,1918,2.293,1919,2.624,1920,2.624,1921,2.624,1922,2.624,1923,2.624,1924,2.624,1925,2.624]],["title/dependencies.html",[18,2.11,1926,3.007]],["body/dependencies.html",[8,0.012,9,0.75,11,0.293,13,0.009,14,0.009,18,2.214,49,3.146,51,1.388,55,2.491,56,1.794,57,2.491,58,1.809,70,4.125,72,4.125,74,4.125,176,5.21,187,3.146,194,1.68,211,3.545,227,4.907,293,2.714,317,3.33,320,4.125,322,4.125,329,3.146,438,4.557,507,2.059,656,2.986,744,3.146,753,2.3,1010,3.802,1063,4.125,1181,3.802,1185,4.125,1257,4.125,1309,3.545,1450,4.557,1866,4.557,1927,5.212,1928,7.216,1929,6.583,1930,5.212,1931,5.212,1932,5.212,1933,5.212,1934,5.212,1935,5.212,1936,5.212,1937,5.212,1938,5.212,1939,5.212,1940,5.212,1941,5.212,1942,5.212,1943,5.212,1944,5.212,1945,5.212,1946,5.212,1947,5.212,1948,5.212,1949,5.212,1950,5.212,1951,5.212,1952,5.212,1953,5.212,1954,5.212,1955,5.212,1956,5.212,1957,5.212,1958,5.212,1959,5.212,1960,5.212,1961,5.212]],["title/miscellaneous/functions.html",[1962,2.197,1963,4.342]],["body/miscellaneous/functions.html",[8,0.011,13,0.011,14,0.011,21,3.398,120,0.762,1918,5.783,1962,4.226,1963,5.783,1964,6.615]],["title/index.html",[120,0.396,1965,3.439,1966,3.439]],["body/index.html",[4,0.104,8,0.012,13,0.008,14,0.008,42,3.292,75,2.68,129,5.598,277,3.574,329,4.696,433,3.235,712,1.804,776,4.686,840,3.235,857,4.766,960,3.574,1053,3.574,1102,2.982,1195,3.574,1268,6.678,1288,5.453,1305,3.235,1367,3.574,1615,3.574,1899,3.235,1900,4.903,1967,4.088,1968,4.088,1969,6.403,1970,5.609,1971,4.088,1972,4.088,1973,4.088,1974,5.609,1975,4.088,1976,4.088,1977,6.891,1978,4.088,1979,7.78,1980,4.088,1981,4.088,1982,4.088,1983,5.609,1984,4.088,1985,5.609,1986,4.088,1987,6.403,1988,4.088,1989,5.609,1990,4.088,1991,4.088,1992,4.088,1993,4.088,1994,6.891,1995,7.46,1996,4.088,1997,5.609,1998,4.088,1999,4.088,2000,4.088,2001,4.088,2002,4.088,2003,5.609,2004,6.891,2005,4.088,2006,5.609,2007,4.088,2008,5.609,2009,7.46,2010,6.891,2011,4.088,2012,5.609,2013,4.088,2014,4.088,2015,4.088,2016,4.088,2017,6.891,2018,4.088,2019,4.088,2020,4.088,2021,4.088,2022,5.609,2023,4.088,2024,4.088,2025,4.088,2026,4.088,2027,4.088,2028,5.609,2029,4.088,2030,4.088,2031,4.088,2032,5.609,2033,4.088,2034,4.088,2035,5.609,2036,4.088,2037,4.088,2038,4.088,2039,4.088,2040,4.088,2041,4.088,2042,4.088,2043,4.088,2044,5.609,2045,4.088,2046,3.574,2047,4.088,2048,4.088,2049,6.403,2050,4.088,2051,4.088,2052,4.088,2053,4.088,2054,4.088,2055,5.609,2056,4.088,2057,4.088,2058,4.088,2059,4.088,2060,4.088,2061,5.609,2062,5.609,2063,4.088,2064,4.088,2065,4.088,2066,4.088,2067,4.088,2068,4.088,2069,4.088,2070,4.088,2071,4.088,2072,4.088,2073,3.574,2074,4.088,2075,4.088,2076,4.088,2077,4.088,2078,4.088,2079,4.088,2080,3.574]],["title/modules.html",[17,2.311]],["body/modules.html",[8,0.01,13,0.01,14,0.01,16,4.189,17,2.351,27,3.905,28,3.905,29,3.905,30,3.905,31,3.905,32,3.905,33,3.905,34,3.905,35,3.905,36,3.905,37,3.905,38,3.669,1288,6.756,2046,5.02,2081,8.538,2082,8.538,2083,8.567,2084,5.743]],["title/overview.html",[2085,4.935]],["body/overview.html",[2,1.171,8,0.012,13,0.008,14,0.008,15,0.97,16,6.256,17,1.691,18,1.754,19,1.895,20,1.895,21,1.754,22,1.895,23,1.895,24,3.609,25,3.609,26,3.609,27,5.608,28,4.928,29,5.209,30,4.928,31,4.377,32,4.928,33,5.379,34,4.928,35,4.928,36,4.928,37,4.928,38,4.894,39,4.377,40,2.591,41,1.895,42,1.822,118,1.47,178,4.624,189,3.604,308,3.609,310,3.609,311,3.609,312,4.377,313,4.377,360,4.254,398,2.808,552,1.033,597,4.112,629,3.609,630,3.609,922,4.112,925,3.609,926,3.609,1006,4.112,1035,3.609,1036,3.609,1071,3.267,1114,4.177,1128,3.609,1129,3.609,1254,4.112,1299,3.609,1300,3.609,1301,4.177,1424,4.112,1434,3.609,1435,3.609,1536,4.112,1548,3.609,1549,3.609,1834,3.609,1836,3.609,2085,3.609,2086,5.647,2087,4.129,2088,4.129]],["title/properties.html",[353,1.409,1926,3.007]],["body/properties.html",[8,0.012,13,0.011,14,0.011,353,1.861,712,2.896,2073,5.737,2080,5.737,2089,6.563,2090,6.563,2091,6.563]],["title/miscellaneous/typealiases.html",[1962,2.197,2092,4.967]],["body/miscellaneous/typealiases.html",[8,0.01,13,0.01,14,0.01,120,0.704,146,0.789,382,4.636,387,4.636,654,5.293,709,4.457,731,4.8,941,4.935,1075,4.457,1094,4.935,1259,4.935,1399,4.457,1498,4.457,1517,5.293,1592,4.457,1674,4.457,1785,4.457,1962,3.904,2093,6.11,2094,5.342,2095,5.342,2096,5.342,2097,5.342,2098,5.342,2099,5.342,2100,5.342]],["title/miscellaneous/variables.html",[1962,2.197,2101,4.342]],["body/miscellaneous/variables.html",[5,0.029,8,0.012,13,0.004,14,0.004,15,1.816,56,2.172,75,2.136,89,1.014,104,0.385,109,0.772,120,0.172,126,0.677,145,0.822,146,0.673,148,1.433,149,0.743,172,2.865,180,1.394,181,1.221,182,1.331,257,2.328,266,1.973,272,0.397,324,1.632,326,1.464,327,1.632,373,2.133,375,4.756,376,4.006,388,1.864,414,2.674,419,6.755,429,1.539,435,1.796,476,3.283,502,1.428,559,0.974,570,3.537,571,1.474,582,2.943,595,2.659,633,1.864,658,3.283,666,3.283,694,3.692,695,4.215,696,0.633,709,1.087,711,4.215,714,4.215,737,1.303,848,3.692,868,4.937,878,0.952,929,1.738,942,1.864,943,2.022,985,0.9,989,1.18,999,1.303,1016,1.18,1075,1.087,1098,1.738,1099,1.303,1102,3.261,1143,2.022,1174,1.087,1183,2.022,1184,2.022,1186,1.303,1310,1.738,1399,1.087,1412,3.261,1413,1.303,1487,2.446,1497,2.698,1498,1.087,1519,1.864,1520,1.303,1523,4.558,1592,1.087,1604,1.303,1624,4.263,1674,1.087,1687,1.303,1708,2.022,1785,1.087,1802,1.303,1914,1.303,1915,1.303,1916,1.303,1962,0.952,2094,1.303,2095,1.303,2096,1.303,2097,1.303,2098,1.303,2099,1.303,2100,1.303,2101,1.303,2102,3.353,2103,5.214,2104,1.491,2105,1.491,2106,1.491,2107,2.555,2108,7.759,2109,7.759,2110,8.287,2111,8.287,2112,1.491,2113,1.491,2114,7.727,2115,1.491,2116,2.555,2117,1.491,2118,3.353,2119,2.555,2120,1.491,2121,2.555,2122,1.491,2123,2.555,2124,1.491,2125,2.555,2126,2.555,2127,1.491,2128,3.353,2129,2.555,2130,1.491,2131,2.555,2132,1.491,2133,2.555,2134,1.491,2135,2.555,2136,1.491,2137,1.491,2138,2.555,2139,1.491,2140,2.555,2141,2.555,2142,1.491,2143,3.353,2144,2.555,2145,1.491,2146,2.555,2147,1.491,2148,2.555,2149,1.491,2150,2.555,2151,1.491,2152,2.555,2153,2.555,2154,1.491,2155,4.876,2156,2.555,2157,1.491,2158,3.353,2159,2.555,2160,1.491,2161,2.555,2162,1.491,2163,2.555,2164,1.491,2165,1.491,2166,2.555,2167,1.491,2168,2.555,2169,2.555,2170,1.491,2171,2.555,2172,1.491,2173,3.353,2174,2.555,2175,1.491,2176,2.555,2177,1.491,2178,2.555,2179,1.491,2180,2.555,2181,2.555,2182,1.491,2183,2.555,2184,1.491,2185,3.353,2186,2.555,2187,1.491,2188,2.555,2189,1.491,2190,2.555,2191,1.491,2192,1.491,2193,1.491,2194,1.491,2195,1.491,2196,1.491,2197,1.491,2198,1.491,2199,1.491,2200,1.491,2201,1.491,2202,1.491,2203,1.491,2204,1.491,2205,1.491,2206,1.491,2207,1.491,2208,1.491,2209,1.491,2210,1.491,2211,1.491,2212,1.491,2213,1.491,2214,1.491,2215,1.491,2216,1.491,2217,1.491,2218,1.491,2219,1.491]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":666,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2090,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":83,"title":{"classes/Company-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["1.0.38",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":669,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.1",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":1022,"title":{},"body":{"controllers/FilesController.html":{}}}],["11.0.0",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":779,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["13",{"_index":2086,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574798358.jpg",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574900663.jpg",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686574998397.png",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575062887.png",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575180007.png",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575233601.jpg",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575294231.png",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575455267.jpg",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686575523674.jpg",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1686706116042.png",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":2087,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["1mb",{"_index":1023,"title":{},"body":{"controllers/FilesController.html":{}}}],["2",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["2.1.0",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["2.lấy",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["200",{"_index":564,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["2023",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["3.0.1",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2088,"title":{},"body":{"overview.html":{}}}],["4",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.1",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":563,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["401",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1252,"title":{},"body":{"controllers/MailController.html":{}}}],["5.4.0",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["5:00",{"_index":1269,"title":{},"body":{"controllers/MailController.html":{}}}],["6.9.3",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["648ab415f4328bd3153ee211",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["686b45a2619a849333e34325",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":973,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.4",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["8.12.2",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["8.6",{"_index":699,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["96",{"_index":978,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id,name,email,role",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["action",{"_index":1051,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1326,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":966,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["addfiletypevalidator",{"_index":1017,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":1020,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":710,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["adds",{"_index":1052,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":959,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":970,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":942,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":967,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":976,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":767,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["alias",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2093,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":2023,"title":{},"body":{"index.html":{}}}],["already",{"_index":983,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["amazing",{"_index":2067,"title":{},"body":{"index.html":{}}}],["amzon",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ang",{"_index":1469,"title":{},"body":{"injectables/PermissionsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":868,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":743,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":604,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":1011,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":1117,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1262,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1427,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1539,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1634,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1709,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1822,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1293,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apple",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1995,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1974,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":39,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":655,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(query",{"_index":662,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["args",{"_index":850,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["args.object",{"_index":852,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["args.value",{"_index":860,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["arguments",{"_index":1196,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":861,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["array'})@ismongoid({each",{"_index":895,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["array'})@isstring({each",{"_index":827,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["async",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["attack",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["au",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":1166,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":1172,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:19",{"_index":1175,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:31",{"_index":1178,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":130,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":1182,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":1167,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1238,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":27,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2073,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":178,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":2084,"title":{},"body":{"modules.html":{}}}],["await",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":2012,"title":{},"body":{"index.html":{}}}],["b",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{}}}],["back_end",{"_index":1198,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["backers",{"_index":2068,"title":{},"body":{"index.html":{}}}],["badrequestcustom",{"_index":384,"title":{"classes/BadRequestCustom.html":{}},"body":{"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["badrequestcustom('công",{"_index":704,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestcustom('email",{"_index":1737,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestcustom('id",{"_index":688,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestcustom('job",{"_index":1163,"title":{},"body":{"injectables/JobsService.html":{}}}],["badrequestcustom('không",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestcustom('người",{"_index":1894,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestcustom('permission",{"_index":1473,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestcustom('refresh",{"_index":1898,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestcustom('resume",{"_index":1582,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestcustom('role",{"_index":1669,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestcustom('subscriber",{"_index":1748,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestcustom('user",{"_index":1591,"title":{},"body":{"injectables/ResumesService.html":{}}}],["badrequestcustom(`công",{"_index":693,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["badrequestcustom(`không",{"_index":692,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["badrequestcustom(err.message",{"_index":1458,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestcustom(error.message",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('refresh",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('token",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["bao",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/PermissionsService.html":{}}}],["based",{"_index":1195,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["basename",{"_index":1389,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1866,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["biến",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["biết",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"classes/Permission.html":{},"classes/Role.html":{}}}],["board",{"_index":2060,"title":{},"body":{"index.html":{}}}],["body",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["boolean(isinit",{"_index":948,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1361,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":2083,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2081,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1026,"title":{},"body":{"controllers/FilesController.html":{}}}],["building",{"_index":1970,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":956,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["buộc",{"_index":1759,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["báo",{"_index":1616,"title":{},"body":{"classes/Role.html":{},"injectables/SubscribersService.html":{}}}],["bên",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["bản",{"_index":1452,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["bảo",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["bất",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["bắt",{"_index":1758,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["bằng",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{}}}],["c",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1483,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1168,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1173,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1356,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["cau",{"_index":1313,"title":{},"body":{"modules/MailModule.html":{}}}],["cập",{"_index":1215,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cb",{"_index":1376,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1380,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["channel",{"_index":2037,"title":{},"body":{"index.html":{}}}],["check",{"_index":857,"title":{},"body":{"classes/CreateJobDto.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"index.html":{}}}],["checkcompany",{"_index":690,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["checkemail",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["checkemailexist",{"_index":1846,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkemailexist(email",{"_index":1850,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkexist",{"_index":1584,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["checkexistdocument",{"_index":1663,"title":{},"body":{"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["checkexistpermission",{"_index":1465,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkjob",{"_index":1159,"title":{},"body":{"injectables/JobsService.html":{}}}],["checkjob.isdeleted",{"_index":1162,"title":{},"body":{"injectables/JobsService.html":{}}}],["checkpermission",{"_index":1463,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkpermission.isdeleted",{"_index":1472,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["checkresume",{"_index":1577,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkresume.history",{"_index":1579,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkresume.isdeleted",{"_index":1581,"title":{},"body":{"injectables/ResumesService.html":{}}}],["checkrole",{"_index":1661,"title":{},"body":{"injectables/RolesService.html":{}}}],["checkrole.isdeleted",{"_index":1668,"title":{},"body":{"injectables/RolesService.html":{}}}],["checkrole.name",{"_index":1671,"title":{},"body":{"injectables/RolesService.html":{}}}],["checksubscriber",{"_index":1743,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["checksubscriber.isdeleted",{"_index":1747,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["checkuser",{"_index":1884,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.createdby",{"_index":1891,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.email",{"_index":1895,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkuser.isdeleted",{"_index":1893,"title":{},"body":{"injectables/UsersService.html":{}}}],["chi",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["chiếu",{"_index":1611,"title":{},"body":{"classes/Role.html":{}}}],["cho",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["chính",{"_index":853,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["chúng",{"_index":1782,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["chưa",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["chạy",{"_index":614,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["chọn",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":11,"title":{"classes/BadRequestCustom.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":552,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["click",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["clicks",{"_index":2022,"title":{},"body":{"index.html":{}}}],["client",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/LocalStrategy.html":{}}}],["cloud",{"_index":2007,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":629,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":630,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":925,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":926,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1035,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":1036,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":1128,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":1129,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1299,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1300,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1434,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1435,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1548,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1549,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1641,"title":{},"body":{"modules/RolesModule.html":{}}}],["cluster_rolesmodule_providers",{"_index":1642,"title":{},"body":{"modules/RolesModule.html":{}}}],["cluster_subscribersmodule",{"_index":1721,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1722,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["cluster_usersmodule",{"_index":1834,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1836,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1835,"title":{},"body":{"modules/UsersModule.html":{}}}],["co",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["code",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{}}}],["coi",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["collection",{"_index":1612,"title":{},"body":{"classes/Role.html":{}}}],["come",{"_index":2029,"title":{},"body":{"index.html":{}}}],["companies",{"_index":570,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":632,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":598,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":568,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":28,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":597,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":429,"title":{"classes/Company.html":{},"classes/Company-1.html":{}},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":600,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":781,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":784,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":785,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":786,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":783,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":640,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":654,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":876,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":645,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":633,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["companytype",{"_index":801,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["comparesync",{"_index":1863,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1881,"title":{},"body":{"injectables/UsersService.html":{}}}],["config",{"_index":611,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["configmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get('email_auth_pass",{"_index":1322,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1321,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1319,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1330,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_expire",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_url",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1294,"title":{},"body":{"controllers/MailController.html":{}}}],["conflict",{"_index":1466,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["conflictexception",{"_index":1449,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["connection",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1370,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1351,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":844,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1240,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":643,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":1135,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(message",{"_index":556,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["constructor(permissionmodel",{"_index":1440,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":606,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":1170,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1556,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1647,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1727,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":935,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["contains",{"_index":1365,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1573,"title":{},"body":{"injectables/ResumesService.html":{}}}],["context",{"_index":1176,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":1189,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1188,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":1191,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":1491,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":605,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":924,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":1012,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":1064,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":1118,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1263,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1428,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1540,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1635,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1710,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1823,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["countpermission",{"_index":951,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":953,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":949,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["courses",{"_index":2043,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1899,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":571,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":1119,"title":{},"body":{"controllers/JobsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":574,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create(createfiledto",{"_index":1045,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":1103,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1416,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["create(createroledto",{"_index":1625,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1691,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1525,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1809,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(dto",{"_index":1442,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createcompany",{"_index":642,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompany(createcompanydto",{"_index":646,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["createcompanydto",{"_index":575,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1352,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":658,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":787,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":790,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createjobdto.company.logo",{"_index":1149,"title":{},"body":{"injectables/JobsService.html":{}}}],["createmulteroptions",{"_index":1335,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":865,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":873,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":888,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1654,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":897,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuser",{"_index":1875,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser._id",{"_index":1876,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser.createdat",{"_index":1877,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusercvdto",{"_index":887,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":756,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1871,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":1874,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["cron(\"0",{"_index":1267,"title":{},"body":{"controllers/MailController.html":{}}}],["csdl",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["ctx",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cua",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["cung",{"_index":842,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["current",{"_index":683,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":650,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["custom",{"_index":616,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["các",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["cách",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["cái",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"classes/Permission.html":{},"injectables/ResumesService.html":{}}}],["còn",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{}}}],["cònigmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["công",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["cấp",{"_index":774,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["cấu",{"_index":1372,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cần",{"_index":965,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["của",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Permission.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["d",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["dang",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["danh",{"_index":826,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["data",{"_index":985,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1619,"title":{},"body":{"classes/Role.html":{}}}],["databases",{"_index":921,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":928,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":923,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":919,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":29,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":922,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":717,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date(enddate",{"_index":856,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date(obj.startdate",{"_index":854,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date(value",{"_index":863,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["date.now()}${extname",{"_index":1392,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{}}}],["de",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decode",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["decode._id",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorator",{"_index":841,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["decorators",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":2039,"title":{},"body":{"index.html":{}}}],["default",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":668,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defaultmessage",{"_index":859,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["defaultmessage(args",{"_index":858,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["defaultpage",{"_index":665,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete('/:id",{"_index":1832,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('/:id')@responsemessage('delete",{"_index":1815,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":589,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":1109,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["deletedat",{"_index":711,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":707,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1369,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1994,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2011,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2003,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":2021,"title":{},"body":{"index.html":{}}}],["description",{"_index":712,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":1375,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1984,"title":{},"body":{"index.html":{}}}],["development",{"_index":1981,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2051,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1323,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1360,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["discord",{"_index":2036,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":1346,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dive",{"_index":2038,"title":{},"body":{"index.html":{}}}],["diện",{"_index":732,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["document",{"_index":700,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{}}}],["document.isdeleted",{"_index":703,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["documentation",{"_index":1900,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":1444,"title":{},"body":{"injectables/PermissionsService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["dto/create",{"_index":599,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/parseint.pipe",{"_index":603,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["dto/update",{"_index":601,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dung",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["dán",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["dùng",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/UsersService.html":{}}}],["dùng/ứng",{"_index":961,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dưới",{"_index":618,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/JwtStrategy.html":{}}}],["dạng",{"_index":771,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dấu",{"_index":734,"title":{},"body":{"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/User.html":{}}}],["dụng",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":1990,"title":{},"body":{"index.html":{}}}],["each",{"_index":862,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["eexist",{"_index":1357,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":1971,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2001,"title":{},"body":{"index.html":{}}}],["email",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":1251,"title":{},"body":{"controllers/MailController.html":{}}}],["end",{"_index":855,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["end_date",{"_index":807,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["enddate",{"_index":793,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":1494,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["enotdir",{"_index":1362,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enpoind",{"_index":1209,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ensure",{"_index":1999,"title":{},"body":{"index.html":{}}}],["ensureexists",{"_index":1336,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1339,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enterprise",{"_index":2054,"title":{},"body":{"index.html":{}}}],["env",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["equal",{"_index":1889,"title":{},"body":{"injectables/UsersService.html":{}}}],["err",{"_index":1179,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{}}}],["err.message",{"_index":1459,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["error",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error(`vai",{"_index":1655,"title":{},"body":{"injectables/RolesService.html":{}}}],["error.code",{"_index":1355,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["error.message",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["errorhttpstatuscode",{"_index":1027,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":776,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["exception",{"_index":1194,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":681,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":1174,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":1453,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["existnamerole",{"_index":1665,"title":{},"body":{"injectables/RolesService.html":{}}}],["exists",{"_index":1353,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["experience",{"_index":2041,"title":{},"body":{"index.html":{}}}],["expire",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresin",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":997,"title":{},"body":{"controllers/FilesController.html":{}}}],["extend",{"_index":1766,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["extends",{"_index":554,"title":{},"body":{"classes/BadRequestCustom.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1384,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1385,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1223,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1227,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":695,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":2015,"title":{},"body":{"index.html":{}}}],["features",{"_index":2025,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["few",{"_index":2017,"title":{},"body":{"index.html":{}}}],["field",{"_index":735,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"injectables/ResumesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto",{"_index":1008,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":789,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":1029,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":1009,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":1002,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":989,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":1038,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":1007,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":987,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":30,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":1006,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":1018,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.companyid",{"_index":1574,"title":{},"body":{"injectables/ResumesService.html":{}}}],["filter.current",{"_index":663,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":664,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter['company._id",{"_index":1155,"title":{},"body":{"injectables/JobsService.html":{}}}],["filteremail",{"_index":1886,"title":{},"body":{"injectables/UsersService.html":{}}}],["finalname",{"_index":1391,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1585,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":675,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":572,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":648,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall(page",{"_index":578,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findbyid(id",{"_index":1880,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":623,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findone(id",{"_index":585,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["finduser",{"_index":1808,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduser(@param('id",{"_index":1828,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduser(id",{"_index":1812,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduserbyrefreshtoken",{"_index":1844,"title":{},"body":{"injectables/UsersService.html":{}}}],["focus",{"_index":2024,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1377,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["follow",{"_index":2057,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1180,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('bạn",{"_index":1211,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["framework",{"_index":1969,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["fs",{"_index":1345,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1349,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":960,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["function",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1963,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2020,"title":{},"body":{"index.html":{}}}],["gan",{"_index":1234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["gender",{"_index":769,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["gensaltsync",{"_index":1864,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1868,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/:id",{"_index":1827,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id')@public()@responsemessage('fetch",{"_index":1813,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id",{"_index":622,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["get(':id')@public",{"_index":586,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["get(':id')@public()@responsemessage('fetch",{"_index":1107,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1419,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["get(':id')@responsemessage('findone",{"_index":1695,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('account",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":1058,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('test",{"_index":1250,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1105,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get()@responsemessage('findall",{"_index":1693,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get()@responsemessage('get",{"_index":580,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["gethashpassword",{"_index":1847,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethashpassword(password",{"_index":1855,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["gethistoryjob",{"_index":1524,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjob(@userdecorator",{"_index":1546,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjob(user",{"_index":1529,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethistoryjobbyuserid",{"_index":1555,"title":{},"body":{"injectables/ResumesService.html":{}}}],["gethistoryjobbyuserid(id",{"_index":1562,"title":{},"body":{"injectables/ResumesService.html":{}}}],["getprofile",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@userdecorator",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrootpath",{"_index":1334,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":1965,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1690,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["getuserskills(@userdecorator",{"_index":1713,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1697,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["ghi",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["gi",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateRoleDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["gia",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["gian",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["giao",{"_index":1841,"title":{},"body":{"modules/UsersModule.html":{}}}],["giúp",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["giải",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["giới",{"_index":768,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["global",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{}}}],["google",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":2046,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":2064,"title":{},"body":{"index.html":{}}}],["gui",{"_index":1315,"title":{},"body":{"modules/MailModule.html":{}}}],["gán",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["gần",{"_index":1588,"title":{},"body":{"injectables/ResumesService.html":{}}}],["gặp",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["gọi",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["gốc",{"_index":1767,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["gồm",{"_index":1451,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["gửi",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["h",{"_index":963,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["hack",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["hacker",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlebars",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1307,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":1169,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1177,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":1249,"title":{},"body":{"controllers/MailController.html":{}}}],["hands",{"_index":2040,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2030,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1869,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync",{"_index":1865,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1870,"title":{},"body":{"injectables/UsersService.html":{}}}],["hay",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["header",{"_index":1225,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["health",{"_index":1057,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":1068,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":1060,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":1061,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":1055,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":31,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":2044,"title":{},"body":{"index.html":{}}}],["here",{"_index":2071,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":1364,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hieu",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["hinh",{"_index":1314,"title":{},"body":{"modules/MailModule.html":{}}}],["history",{"_index":1499,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hop",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["host",{"_index":1318,"title":{},"body":{"modules/MailModule.html":{}}}],["hoặc",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["httpexception",{"_index":555,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["httponly",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":2077,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":560,"title":{},"body":{"classes/BadRequestCustom.html":{},"controllers/FilesController.html":{}}}],["httpstatus.bad_request",{"_index":566,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["httpstatus.ok",{"_index":567,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1028,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":731,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàm",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["hãy",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hình",{"_index":1373,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hơn",{"_index":766,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["hạn",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["hết",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["hồi",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["hợp",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["i'm",{"_index":969,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":1228,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1383,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1387,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["imagesjob",{"_index":1144,"title":{},"body":{"injectables/JobsService.html":{}}}],["implements",{"_index":847,"title":{},"body":{"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":120,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":2005,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":2027,"title":{},"body":{"index.html":{}}}],["init",{"_index":984,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":943,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":117,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":639,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":1145,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":945,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1566,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["injectmodel(subscriber.name",{"_index":1264,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":2019,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1980,"title":{},"body":{"index.html":{}}}],["interact",{"_index":2047,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1489,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1752,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":1070,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":1071,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":1183,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":1184,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":794,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":834,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isboolean",{"_index":835,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isdate",{"_index":836,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isdate({message",{"_index":809,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdelete",{"_index":702,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isdeleted",{"_index":694,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":745,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isempty",{"_index":904,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["isendafterstart",{"_index":845,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["isendafterstartconstraint",{"_index":846,"title":{"classes/IsEndAfterStartConstraint.html":{}},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"coverage.html":{}}}],["iserror",{"_index":557,"title":{},"body":{"classes/BadRequestCustom.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["isexist",{"_index":1204,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isexistemail",{"_index":1735,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["isglobal",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":946,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isint",{"_index":746,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ismongoid",{"_index":747,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnan(val",{"_index":1398,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["isnotempty",{"_index":739,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":782,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":748,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":912,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isobject",{"_index":749,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isok",{"_index":565,"title":{},"body":{"classes/BadRequestCustom.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ispublic",{"_index":1186,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":1192,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":750,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1803,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1848,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1857,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1359,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item",{"_index":1206,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["item.apipath",{"_index":1207,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["item.method",{"_index":1208,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["iuser",{"_index":140,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["job",{"_index":75,"title":{"classes/Job.html":{}},"body":{"modules/AppModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["job.company.name",{"_index":1280,"title":{},"body":{"controllers/MailController.html":{}}}],["job.dto",{"_index":1116,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":792,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:23",{"_index":1074,"title":{},"body":{"classes/IsEndAfterStartConstraint.html":{}}}],["job.dto.ts:31",{"_index":1073,"title":{},"body":{"classes/IsEndAfterStartConstraint.html":{}}}],["job.dto.ts:40",{"_index":818,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:45",{"_index":830,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:51",{"_index":804,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:54",{"_index":823,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:57",{"_index":821,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":816,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:63",{"_index":805,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:66",{"_index":817,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:71",{"_index":832,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:77",{"_index":810,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:81",{"_index":815,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":1133,"title":{},"body":{"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["job.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1281,"title":{},"body":{"controllers/MailController.html":{}}}],["job.skills",{"_index":1282,"title":{},"body":{"controllers/MailController.html":{}}}],["jobdocument",{"_index":1094,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":877,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":1137,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":1102,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":1131,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":1115,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":1098,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":1100,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":32,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":1114,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":1276,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.length",{"_index":1278,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((job",{"_index":1279,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1305,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1324,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1381,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|png|jpeg|image\\/jpeg|image\\/png|image\\/gif|text\\/plain|application\\/pdf|application\\/msword|audio\\/mpeg|video\\/mp4)$/i",{"_index":1019,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_refresh_expire",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":208,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1226,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":312,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{}}}],["kamil",{"_index":2074,"title":{},"body":{"index.html":{}}}],["key",{"_index":1996,"title":{},"body":{"index.html":{}}}],["kh",{"_index":1760,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["khai",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/Role.html":{}}}],["khau",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["khi",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Role.html":{},"classes/UpdateUserDto.html":{}}}],["khoa",{"_index":977,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["khoa@gmail.com",{"_index":777,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["khoa@gmail.com3e34325",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khoalon89@gmail.com",{"_index":1287,"title":{},"body":{"controllers/MailController.html":{}}}],["khong",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/RolesService.html":{}}}],["không",{"_index":1212,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["khác",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["khẩu",{"_index":760,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["khớp",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["kieu",{"_index":775,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["kiểu",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"classes/Company.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["kiện",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["ko",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["kèm",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["l",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["la",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["large",{"_index":1025,"title":{},"body":{"controllers/FilesController.html":{}}}],["lay",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["lazada",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["le",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["learn",{"_index":2033,"title":{},"body":{"index.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":795,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["license",{"_index":2080,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2062,"title":{},"body":{"index.html":{}}}],["limit",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":677,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":2058,"title":{},"body":{"index.html":{}}}],["list",{"_index":581,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["listnameimages",{"_index":1143,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listnameimages.length",{"_index":1148,"title":{},"body":{"injectables/JobsService.html":{}}}],["listnameimages[math.floor(math.random",{"_index":1147,"title":{},"body":{"injectables/JobsService.html":{}}}],["literal",{"_index":719,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["local",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":175,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":313,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":796,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":933,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":940,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["login(user",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":713,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["logout",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":2006,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2056,"title":{},"body":{"index.html":{}}}],["loại",{"_index":1587,"title":{},"body":{"injectables/ResumesService.html":{},"classes/UpdateUserDto.html":{}}}],["luc",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["luôn",{"_index":1231,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["lây",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"modules/JobsModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{}}}],["lên",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["lưu",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"classes/Role.html":{}}}],["lương",{"_index":822,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["lượng",{"_index":819,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["lại",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["lấy",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["lắm",{"_index":1586,"title":{},"body":{"injectables/ResumesService.html":{}}}],["lệ'})@isnotempty({message",{"_index":900,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["lệ'})@isobject({message",{"_index":802,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["lệ'})@validatenested()@type(undefined",{"_index":803,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["lỗi",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["lớn",{"_index":765,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["m",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateJobDto.html":{}}}],["ma",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["mail",{"_index":1248,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1303,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1255,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1246,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1304,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1316,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1256,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":33,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1254,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":610,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["makes",{"_index":2013,"title":{},"body":{"index.html":{}}}],["male",{"_index":974,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["managing",{"_index":2026,"title":{},"body":{"index.html":{}}}],["map",{"_index":1485,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1495,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["mat",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":673,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mau",{"_index":2009,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":1021,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":559,"title":{},"body":{"classes/BadRequestCustom.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":682,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1185,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/ParseIntPipeCustom.html":{},"dependencies.html":{}}}],["method",{"_index":848,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"modules/JobsModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mili",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["min",{"_index":751,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["min(0",{"_index":764,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["miscellaneous",{"_index":1962,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2061,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1983,"title":{},"body":{"index.html":{}}}],["model",{"_index":638,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1257,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1308,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":772,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongodb",{"_index":1840,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoose",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1518,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":736,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":687,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoose.types.objectid.isvalid(updateuserdto._id",{"_index":1882,"title":{},"body":{"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":1062,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":2004,"title":{},"body":{"index.html":{}}}],["ms",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms.stringvalue",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["multer",{"_index":1347,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":1041,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":1040,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":1039,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":1042,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1338,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1344,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":2075,"title":{},"body":{"index.html":{}}}],["mình",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{}}}],["mảng",{"_index":1608,"title":{},"body":{"classes/Role.html":{}}}],["mật",{"_index":759,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mặt",{"_index":1614,"title":{},"body":{"classes/Role.html":{}}}],["mỗi",{"_index":828,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Role.html":{}}}],["một",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["mới",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company.html":{},"injectables/PermissionsService.html":{},"classes/User.html":{}}}],["mục",{"_index":754,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["n",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["name",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nay",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["ne",{"_index":1467,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":2052,"title":{},"body":{"index.html":{}}}],["nest",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nested_obj",{"_index":755,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nestframework",{"_index":2079,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1482,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1181,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1010,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1063,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["netflix",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newjob",{"_index":1150,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob._id",{"_index":1152,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob.createdat",{"_index":1153,"title":{},"body":{"injectables/JobsService.html":{}}}],["newresume",{"_index":1567,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume._id",{"_index":1570,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume.createdat",{"_index":1571,"title":{},"body":{"injectables/ResumesService.html":{}}}],["next",{"_index":1490,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1493,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{}}}],["nghĩa",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["ngoài",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["nguyên",{"_index":763,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["nguyên'})@min(0",{"_index":910,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ngăn",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["người",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["ngẫu",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["nh",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["nhau",{"_index":1842,"title":{},"body":{"modules/UsersModule.html":{}}}],["nhiên",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["nhu",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["nhưng",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Role.html":{}}}],["nhất",{"_index":1589,"title":{},"body":{"injectables/ResumesService.html":{}}}],["nhận",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CompaniesService.html":{},"injectables/LocalStrategy.html":{},"injectables/SubscribersService.html":{}}}],["nhập",{"_index":1784,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["những",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResumesService.html":{}}}],["nice",{"_index":1292,"title":{},"body":{"controllers/MailController.html":{}}}],["node.js",{"_index":1968,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":979,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1979,"title":{},"body":{"index.html":{}}}],["null",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":579,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nào",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"classes/Permission.html":{},"injectables/ResumesService.html":{}}}],["này",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["nâng",{"_index":773,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nên",{"_index":613,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["nói",{"_index":1232,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Role.html":{},"modules/UsersModule.html":{}}}],["năng",{"_index":824,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["nơi",{"_index":1374,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["nếu",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/UsersService.html":{}}}],["obj",{"_index":851,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["object",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["object_id",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["objectid",{"_index":1609,"title":{},"body":{"classes/Role.html":{}}}],["objuser",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1484,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offer",{"_index":2059,"title":{},"body":{"index.html":{}}}],["official",{"_index":2010,"title":{},"body":{"index.html":{}}}],["offset",{"_index":667,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit",{"_index":1781,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype",{"_index":1780,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1778,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":934,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":2063,"title":{},"body":{"index.html":{}}}],["optional",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1327,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2085,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["oạn",{"_index":1606,"title":{},"body":{"classes/Role.html":{}}}],["p",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["package",{"_index":1926,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":584,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["pages",{"_index":685,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":684,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":582,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":596,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":625,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["parameters",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":656,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1363,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":1005,"title":{},"body":{"controllers/FilesController.html":{}}}],["parseint(value",{"_index":1397,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["parseintpipecustom",{"_index":602,"title":{"injectables/ParseIntPipeCustom.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/ParseIntPipeCustom.html":{},"coverage.html":{}}}],["parser",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2053,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":1756,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createcompanydto",{"_index":1755,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1762,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1764,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1769,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1771,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1773,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1775,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1224,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1219,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":761,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":595,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":593,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":1112,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1818,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1704,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1306,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1390,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1386,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.company",{"_index":1236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1569,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":266,"title":{"classes/Permission.html":{}},"body":{"controllers/AuthController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission._id",{"_index":1456,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.createdat",{"_index":1457,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permission.dto",{"_index":1426,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":867,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":870,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":871,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":872,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":869,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.find",{"_index":1205,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":931,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissiondocument",{"_index":941,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":936,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1437,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.service",{"_index":1425,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":929,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1414,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":34,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1424,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phai",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["phep",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["phia",{"_index":1197,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["photoshop",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phut",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["phép",{"_index":1672,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["phúp",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["phải",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["pipe",{"_index":612,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{}}}],["platform",{"_index":2008,"title":{},"body":{"index.html":{}}}],["please",{"_index":2035,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate('permissions",{"_index":1620,"title":{},"body":{"classes/Role.html":{}}}],["populate(population",{"_index":680,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":661,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["possible",{"_index":2002,"title":{},"body":{"index.html":{}}}],["post",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"skills",{"_index":1712,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1530,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('logout",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@responsemessage('logout",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1698,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":1013,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@useinterceptors(undefined)@responsemessage('upload",{"_index":998,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":576,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["pr",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1329,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1348,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":1985,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1967,"title":{},"body":{"index.html":{}}}],["project",{"_index":1977,"title":{},"body":{"index.html":{}}}],["projection",{"_index":1460,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["promise",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":715,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1679,"title":{},"body":{"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":720,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":353,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provider",{"_index":637,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@apibody({type",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('get",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1382,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["qua",{"_index":1146,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":797,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["query",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":619,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":620,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["questions",{"_index":2034,"title":{},"body":{"index.html":{}}}],["quyền",{"_index":1213,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["quyền",{"_index":770,"title":{},"body":{"classes/Company-1.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ra",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["ra(ne",{"_index":1888,"title":{},"body":{"injectables/UsersService.html":{}}}],["rate",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["re",{"_index":698,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["read",{"_index":2070,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":607,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":1993,"title":{},"body":{"index.html":{}}}],["real",{"_index":2048,"title":{},"body":{"index.html":{}}}],["receiver",{"_index":1297,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1350,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1501,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1171,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["registeruser",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(registeruserdto",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":166,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.password",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto.role",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":573,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":627,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":588,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":1054,"title":{},"body":{"injectables/FilesService.html":{}}}],["replay",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":1976,"title":{},"body":{"index.html":{}}}],["req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.body",{"_index":1824,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.user",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1378,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":1200,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route?.path",{"_index":1202,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1358,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1686,"title":{},"body":{"classes/Subscriber.html":{},"classes/User.html":{}}}],["requiring",{"_index":2016,"title":{},"body":{"index.html":{}}}],["res",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionsController.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":2028,"title":{},"body":{"index.html":{}}}],["response",{"_index":151,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.statuscode",{"_index":1496,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["response_message",{"_index":1487,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":608,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":1126,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":1121,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('findall",{"_index":1715,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('findone",{"_index":1717,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('get",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('logout",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":1266,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":1124,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":1015,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["result.matchedcount",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1497,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1538,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":875,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:12",{"_index":885,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:15",{"_index":884,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:19",{"_index":881,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":883,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:28",{"_index":907,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:32",{"_index":905,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:36",{"_index":906,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:6",{"_index":882,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":886,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1553,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1517,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1558,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1523,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1551,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1537,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1519,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1521,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":35,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1536,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateJobDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":125,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":326,"title":{"classes/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role._id",{"_index":1657,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.createdat",{"_index":1658,"title":{},"body":{"injectables/RolesService.html":{}}}],["role.dto",{"_index":1633,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":890,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":893,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":896,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":894,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":892,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{}}}],["roledocument",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["roles",{"_index":1624,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1644,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1632,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1622,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":36,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":189,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["route",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["run",{"_index":1268,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["runs",{"_index":2000,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1309,"title":{},"body":{"modules/MailModule.html":{},"interfaces/Response.html":{},"modules/SubscribersModule.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1486,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["rằng",{"_index":1610,"title":{},"body":{"classes/Role.html":{}}}],["rồi",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MailController.html":{},"injectables/ResumesService.html":{}}}],["rộng",{"_index":1765,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["s",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":798,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1867,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1366,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":944,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sau",{"_index":1607,"title":{},"body":{"classes/Role.html":{}}}],["scalable",{"_index":1972,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":730,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":737,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":1099,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1413,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1520,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1604,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1687,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1802,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":634,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":1132,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1438,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1552,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1645,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1725,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1839,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["se",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["second",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["seconds",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1229,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1320,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1590,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select('skills",{"_index":1750,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["select(projection",{"_index":1462,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{}}}],["sendmail",{"_index":1283,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"index.html":{}}}],["service",{"_index":635,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/UsersModule.html":{}}}],["set",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["setmetadata(is_public_key",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1978,"title":{},"body":{"index.html":{}}}],["shopee",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1973,"title":{},"body":{"index.html":{}}}],["sign(payload",{"_index":1233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["signoptions",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":2018,"title":{},"body":{"index.html":{}}}],["single",{"_index":999,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["sinh",{"_index":636,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["size",{"_index":1024,"title":{},"body":{"controllers/FilesController.html":{}}}],["skill",{"_index":829,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"controllers/SubscribersController.html":{}}}],["skill')@skipcheckpermission",{"_index":1699,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skills",{"_index":799,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":676,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1708,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sl",{"_index":1096,"title":{},"body":{"classes/Job.html":{}}}],["soft",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdelete",{"_index":1896,"title":{},"body":{"injectables/UsersService.html":{}}}],["softdeletemodel",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":660,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":678,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":2066,"title":{},"body":{"index.html":{}}}],["src/.../company.schema.ts",{"_index":2094,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imagesjob.ts",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":2095,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":2096,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":2097,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":2098,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":2099,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":2100,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:65",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:131",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:146",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:200",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:98",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":1165,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1237,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":1218,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:24",{"_index":1222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":1220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1239,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:14",{"_index":1243,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:8",{"_index":1241,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":569,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:26",{"_index":577,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:35",{"_index":583,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:46",{"_index":587,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:52",{"_index":594,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:61",{"_index":590,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":631,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":641,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:115",{"_index":652,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:13",{"_index":644,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:19",{"_index":647,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:35",{"_index":649,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:66",{"_index":651,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:83",{"_index":653,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":780,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/parseint.pipe.ts",{"_index":1393,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{},"coverage.html":{}}}],["src/companies/dto/parseint.pipe.ts:6",{"_index":1395,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["src/companies/dto/update",{"_index":1754,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":1516,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":709,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":716,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":724,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":726,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":721,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:28",{"_index":729,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:35",{"_index":723,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":718,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":728,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":722,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:51",{"_index":725,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":727,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1481,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:23",{"_index":1751,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:26",{"_index":1753,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/customexceptions/badrequestcustom",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["src/customexceptions/badrequestcustom.ts",{"_index":553,"title":{},"body":{"classes/BadRequestCustom.html":{},"coverage.html":{}}}],["src/customexceptions/badrequestcustom.ts:3",{"_index":558,"title":{},"body":{"classes/BadRequestCustom.html":{}}}],["src/databases/databases.controller.ts",{"_index":920,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":927,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":932,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:16",{"_index":938,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:32",{"_index":939,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{}}}],["src/databases/sample.ts",{"_index":1914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":788,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1761,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":986,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":988,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:28",{"_index":1001,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:52",{"_index":991,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:57",{"_index":992,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:62",{"_index":995,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:67",{"_index":993,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":1037,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":1044,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":1047,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":1048,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":1050,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":1049,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":1046,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1333,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":1343,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:16",{"_index":1340,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:40",{"_index":1337,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":1056,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:15",{"_index":1059,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":1067,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":791,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1763,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/imagesjob.ts",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":1101,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:29",{"_index":1104,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:35",{"_index":1106,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:47",{"_index":1108,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:53",{"_index":1113,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:63",{"_index":1110,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":1130,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service",{"_index":1311,"title":{},"body":{"modules/MailModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":1134,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:128",{"_index":1141,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:14",{"_index":1136,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:18",{"_index":1138,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:41",{"_index":1139,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:81",{"_index":1140,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:98",{"_index":1142,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1261,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":1075,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":1090,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":1076,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":1086,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":1089,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":1088,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":1085,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":1081,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":1091,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":1082,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":1083,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":1077,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:49",{"_index":1092,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":1079,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":1078,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:62",{"_index":1093,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:69",{"_index":1080,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:76",{"_index":1084,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":1087,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1247,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:31",{"_index":1253,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1302,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1332,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":866,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1768,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1415,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:26",{"_index":1417,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:35",{"_index":1418,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:45",{"_index":1420,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:51",{"_index":1423,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:61",{"_index":1421,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1436,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1439,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:102",{"_index":1448,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:13",{"_index":1441,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:149",{"_index":1447,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:18",{"_index":1443,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:53",{"_index":1445,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:85",{"_index":1446,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":930,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1399,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1400,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1406,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1407,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1401,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:24",{"_index":1409,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1403,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:30",{"_index":1402,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:37",{"_index":1410,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:44",{"_index":1404,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:51",{"_index":1405,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1408,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":874,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1770,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1522,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:25",{"_index":1526,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:34",{"_index":1527,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:45",{"_index":1528,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:51",{"_index":1535,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:61",{"_index":1533,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:67",{"_index":1532,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1550,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1554,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:109",{"_index":1565,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:13",{"_index":1557,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:149",{"_index":1564,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1559,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:185",{"_index":1563,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:50",{"_index":1560,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:92",{"_index":1561,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1498,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1507,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1515,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1514,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1511,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1502,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1510,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1508,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1503,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:42",{"_index":1512,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1505,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:48",{"_index":1504,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1513,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:62",{"_index":1506,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:69",{"_index":1509,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":889,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1772,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1623,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:26",{"_index":1626,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1627,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:42",{"_index":1628,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:48",{"_index":1631,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:58",{"_index":1629,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module.ts",{"_index":1643,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1646,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:137",{"_index":1652,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:14",{"_index":1648,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1649,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:45",{"_index":1650,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:76",{"_index":1651,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:96",{"_index":1653,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1592,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1600,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1597,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1598,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1601,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1593,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:25",{"_index":1602,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1595,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:31",{"_index":1594,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:38",{"_index":1603,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:45",{"_index":1596,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:52",{"_index":1599,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":898,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1774,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1260,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1674,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1682,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1683,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1675,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:21",{"_index":1684,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1677,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:27",{"_index":1676,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:34",{"_index":1685,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:41",{"_index":1678,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:48",{"_index":1681,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1680,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1689,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:25",{"_index":1692,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:35",{"_index":1700,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:41",{"_index":1694,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:51",{"_index":1696,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:58",{"_index":1705,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:67",{"_index":1701,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1723,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service",{"_index":1312,"title":{},"body":{"modules/MailModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1726,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:124",{"_index":1733,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:13",{"_index":1728,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:160",{"_index":1732,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:18",{"_index":1729,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:44",{"_index":1730,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:75",{"_index":1731,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:92",{"_index":1734,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1777,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1785,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1796,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1793,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1797,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1787,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1794,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1786,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":1788,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1799,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1798,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1789,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1800,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:46",{"_index":1795,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":1790,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:56",{"_index":1801,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:63",{"_index":1792,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:70",{"_index":1791,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1807,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:25",{"_index":1810,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":1811,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":1814,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":1819,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:56",{"_index":1816,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":1072,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1837,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1843,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:106",{"_index":1858,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:110",{"_index":1851,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:116",{"_index":1860,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":1849,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":1859,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1856,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:215",{"_index":1862,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:238",{"_index":1861,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1852,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":1853,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:86",{"_index":1854,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":840,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"index.html":{}}}],["start:prodrun",{"_index":1986,"title":{},"body":{"index.html":{}}}],["start_date",{"_index":831,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["startdate",{"_index":800,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{}}}],["started",{"_index":1966,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1975,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":878,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":562,"title":{},"body":{"classes/BadRequestCustom.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":2055,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1997,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1371,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["straightforward",{"_index":2014,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1328,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1290,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":1273,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1298,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":1275,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":1258,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber._id",{"_index":1739,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.createdat",{"_index":1740,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto",{"_index":1707,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":899,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:11",{"_index":902,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:15",{"_index":901,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:20",{"_index":903,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1331,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":1259,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1265,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":1271,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1724,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1706,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1310,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1688,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":37,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1301,"title":{"injectables/SubscribersService.html":{}},"body":{"modules/MailModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":1274,"title":{},"body":{"controllers/MailController.html":{}}}],["successfully",{"_index":1000,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{},"controllers/SubscribersController.html":{}}}],["sunday",{"_index":1270,"title":{},"body":{"controllers/MailController.html":{}}}],["super",{"_index":561,"title":{},"body":{"classes/BadRequestCustom.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":1190,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supper",{"_index":1230,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1288,"title":{},"body":{"controllers/MailController.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":2082,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1354,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sánh",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["sẵn",{"_index":1285,"title":{},"body":{"controllers/MailController.html":{}}}],["sửa",{"_index":1470,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["t",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{}}}],["ta",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["table",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1998,"title":{},"body":{"index.html":{}}}],["targetdirectory",{"_index":1341,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetenpoint",{"_index":1201,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetenpoint.startswith('/api/v1/auth",{"_index":1210,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":1199,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1289,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1295,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1325,"title":{},"body":{"modules/MailModule.html":{}}}],["ten",{"_index":1296,"title":{},"body":{"controllers/MailController.html":{}}}],["terminusmodule",{"_index":1069,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1989,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1992,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1991,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1987,"title":{},"body":{"index.html":{}}}],["th",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["tham",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/Role.html":{}}}],["thanks",{"_index":2065,"title":{},"body":{"index.html":{}}}],["thao",{"_index":1617,"title":{},"body":{"classes/Role.html":{}}}],["thay",{"_index":1621,"title":{},"body":{"classes/Role.html":{}}}],["theo",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["thi",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.registeruser(registeruserdto",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1244,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.createcompany(createcompanydto",{"_index":609,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(page",{"_index":621,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":624,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":628,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":626,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":674,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":657,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":671,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findbyid(id",{"_index":691,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":701,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":708,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":706,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone(filter",{"_index":697,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('init_password",{"_index":972,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_expire",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":947,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":1066,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1379,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":1030,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":1031,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":1034,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":1033,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":1873,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":1065,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":1158,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":1151,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1277,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":1157,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyid(id",{"_index":1160,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":1164,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone(filter",{"_index":1161,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":1120,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(page",{"_index":1122,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":1123,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":1127,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":1125,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":982,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.login(payload",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice.sendmail",{"_index":1286,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1454,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":952,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1455,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1461,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":957,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findbyid(id",{"_index":1464,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":955,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1474,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone(filter",{"_index":1471,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1429,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(page",{"_index":1430,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1431,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1433,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1432,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1492,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":1193,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1187,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1576,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1568,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1575,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1578,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1583,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone(filter",{"_index":1580,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createusercvdto",{"_index":1541,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(page",{"_index":1542,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1543,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.gethistoryjobbyuserid(user._id",{"_index":1547,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1545,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1544,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1660,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":954,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1656,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1659,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1664,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id).populate",{"_index":1662,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/RolesService.html":{}}}],["this.rolemodel.insertmany",{"_index":958,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1673,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone(filter",{"_index":1667,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":1235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1636,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(page",{"_index":1637,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1638,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1640,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1639,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1742,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1738,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1272,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1741,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findbyid(id",{"_index":1744,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1736,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1749,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone(filter",{"_index":1745,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1711,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(page",{"_index":1716,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1718,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getuserskills(user",{"_index":1714,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1720,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1719,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1879,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":950,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1878,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1892,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(updateuserdto._id",{"_index":1885,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1872,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(filteremail",{"_index":1890,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":968,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1897,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone(filter",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":971,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.checkemailexist(email",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1825,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(page",{"_index":1826,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(id",{"_index":1829,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduser(userid",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.gethashpassword",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1833,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1831,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuserrefreshtoken(_id",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["thiết",{"_index":1783,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["thiếu",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["thoi",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["throttle(5",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thu",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["thuc",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["thuộc",{"_index":1095,"title":{},"body":{"classes/Job.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{}}}],["thành",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{}}}],["thái",{"_index":812,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["thêm",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["thích",{"_index":1605,"title":{},"body":{"classes/Role.html":{}}}],["thông",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["thấy",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":964,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thời",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["thực",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"classes/Role.html":{}}}],["tiki",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiktok",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2049,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":733,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateUserDto.html":{}}}],["title",{"_index":1572,"title":{},"body":{"injectables/ResumesService.html":{}}}],["tiêm",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["tiếp",{"_index":1217,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{}}}],["token",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["token')@get('refresh",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["total",{"_index":686,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":670,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":672,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":2072,"title":{},"body":{"index.html":{}}}],["tr",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"injectables/UsersService.html":{}}}],["trang",{"_index":811,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["transform",{"_index":833,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/ParseIntPipeCustom.html":{}}}],["transform(value",{"_index":1394,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["transformer",{"_index":744,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1488,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1317,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"classes/Job.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["true",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":1214,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["truyen",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MailController.html":{}}}],["truyền",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["try",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trying",{"_index":1368,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tránh",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["trên",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JwtStrategy.html":{},"classes/Role.html":{}}}],["trước",{"_index":615,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["trường",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["trạng",{"_index":814,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["trống",{"_index":758,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":825,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":813,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["trống'})@isint({message",{"_index":909,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống'})@ismongoid({message",{"_index":880,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{}}}],["trống'})@transform",{"_index":808,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ttl",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["tu",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["tuyen",{"_index":1097,"title":{},"body":{"classes/Job.html":{}}}],["tuyển",{"_index":820,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/ResumesService.html":{}}}],["tuổi",{"_index":762,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["twitter",{"_index":2078,"title":{},"body":{"index.html":{}}}],["ty",{"_index":689,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadRequestCustom.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2092,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1450,"title":{},"body":{"injectables/PermissionsService.html":{},"dependencies.html":{}}}],["types.objectid(id",{"_index":1468,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["types/passport",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1615,"title":{},"body":{"classes/Role.html":{},"index.html":{}}}],["tác",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"classes/Role.html":{}}}],["tên",{"_index":757,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"modules/JobsModule.html":{},"injectables/MulterConfigService.html":{},"modules/PermissionsModule.html":{},"classes/RegisterUserDto.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/UserLoginDto.html":{}}}],["tìm",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tính",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["tương",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"classes/Role.html":{},"injectables/TransformInterceptor.html":{}}}],["tại",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["tất",{"_index":1757,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{}}}],["tồn",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tới",{"_index":1216,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["tức",{"_index":1613,"title":{},"body":{"classes/Role.html":{}}}],["u",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"username",{"_index":1245,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('refresh_token",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":1500,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":1988,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2091,"title":{},"body":{"properties.html":{}}}],["update",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1830,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":1032,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":591,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1702,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1817,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":592,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":714,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":696,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":994,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":1111,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1422,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1534,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1630,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.name",{"_index":1666,"title":{},"body":{"injectables/RolesService.html":{}}}],["updates",{"_index":1053,"title":{},"body":{"injectables/FilesService.html":{},"index.html":{}}}],["updatesubscriberdto",{"_index":1703,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1776,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1883,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.email",{"_index":1887,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefreshtoken",{"_index":1845,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1016,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":1004,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":990,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":996,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1746,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":879,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["useclass",{"_index":1043,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":1003,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":1014,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":148,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@post('register",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@responsemessage('get",{"_index":1531,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.company",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.company._id",{"_index":1156,"title":{},"body":{"injectables/JobsService.html":{}}}],["user.createdat",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":738,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":740,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:22",{"_index":742,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:25",{"_index":741,"title":{},"body":{"classes/Company-1.html":{}}}],["user.dto.ts:30",{"_index":916,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":914,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":917,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":911,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":915,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:48",{"_index":908,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":918,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:58",{"_index":913,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:63",{"_index":1479,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":1477,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:70",{"_index":1480,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:75",{"_index":1476,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:78",{"_index":1478,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:81",{"_index":1475,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:88",{"_index":1805,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:9",{"_index":1779,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:96",{"_index":1804,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":659,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.refreshtoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.company?._id",{"_index":1154,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{}}}],["user?.permissions",{"_index":1203,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":980,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdecorator",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":184,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@useguards(localauthguard)@useguards(throttlerguard)@post('/login')@responsemessage('user",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":778,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["userrole",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{}}}],["userrole._id",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole?._id",{"_index":981,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["users",{"_index":1412,"title":{},"body":{"classes/Permission.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1838,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1821,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1820,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1806,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":937,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":38,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":360,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":2050,"title":{},"body":{"index.html":{}}}],["v",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["va",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["vai",{"_index":891,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/RolesService.html":{}}}],["val",{"_index":1396,"title":{},"body":{"injectables/ParseIntPipeCustom.html":{}}}],["validate",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validate(enddate",{"_index":849,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validate(isendafterstartconstraint",{"_index":864,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validate(isendafterstartconstraint)@isnotempty({message",{"_index":806,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["validate(payload",{"_index":1221,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1242,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":752,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":843,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validationarguments",{"_index":837,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validator",{"_index":753,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/IsEndAfterStartConstraint.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":838,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["validatorconstraintinterface",{"_index":839,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["value",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/IsEndAfterStartConstraint.html":{},"injectables/MulterConfigService.html":{},"injectables/ParseIntPipeCustom.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["vao",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["variable",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2101,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vd",{"_index":1411,"title":{},"body":{"classes/Permission.html":{}}}],["version",{"_index":2089,"title":{},"body":{"properties.html":{}}}],["vi",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["video",{"_index":2042,"title":{},"body":{"index.html":{}}}],["vien",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["vietnam",{"_index":975,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["visit",{"_index":2032,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2045,"title":{},"body":{"index.html":{}}}],["viên",{"_index":962,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viết",{"_index":617,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/MailController.html":{}}}],["việc",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["viện",{"_index":1284,"title":{},"body":{"controllers/MailController.html":{}}}],["voi",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["void",{"_index":1342,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vs",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["vào",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["với",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"modules/UsersModule.html":{}}}],["watch",{"_index":1982,"title":{},"body":{"index.html":{}}}],["website",{"_index":2076,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1291,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1388,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["working",{"_index":2031,"title":{},"body":{"index.html":{}}}],["world",{"_index":128,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["xac",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["xem",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateJobDto.html":{},"classes/IsEndAfterStartConstraint.html":{}}}],["xoa",{"_index":1670,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["xung",{"_index":679,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["xuống",{"_index":1618,"title":{},"body":{"classes/Role.html":{}}}],["xác",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["xóa",{"_index":705,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["y",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["you'd",{"_index":2069,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1367,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n\n@Controller()\nexport class AppController {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { Connection } from 'mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    //- cron job\n    ScheduleModule.forRoot(),\n\n    //- rate limit\n    ThrottlerModule.forRoot({ //- trong thoi gian 1 phut, chi cho phep 3 request\n      ttl: 60,\n      limit: 3,\n    }),\n\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        connectionFactory: (connection: Connection) => {\n          //- điều này giúp sử dụng soft delete\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    //- configModule giúp sử dụng file .env\n    ConfigModule.forRoot({\n      isGlobal: true, //---> This is a global configuration để có thể sử dụng cònigModule trong các module khác\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World with Nest!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req: any, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ApiBody({type: UserLoginDto})@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Post('/login')@ResponseMessage('User login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ResponseMessage('Logout User')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: any, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get User by refresh token')@Get('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport {\n  Public,\n  ResponseMessage,\n  userDecorator,\n} from 'src/decorator/customize';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n\n  //-route nay se de public khong can xac thuc access_token voi JwtAuthGuard\n  @Public()\n  @ApiBody({ type: UserLoginDto }) //- vi dang login voi jwt thi phai khai bao type cho body\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  // @Throttle(5, 60) //- co the ghi de nhu nay\n  @Post('/login')\n  @ResponseMessage('User login')\n  handleLogin(@Req() req: any, @Res({ passthrough: true }) response: Response) {\n    //- req.user được passport tự động trả về khi xác thực thành công người dùng ở hàm validate của file Strategy, nó sẽ lấy giá trị trả về của hàm validate dán vào req.user\n    return this.authService.login(req.user, response);\n  }\n\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('register')\n  handleRegister(@Body() registerUserDto: RegisterUserDto) {\n    return this.authService.registerUser(registerUserDto);\n  }\n\n  @Get('account')\n  async getProfile(@userDecorator() user: IUser) {\n    //- để any vì ở hàm findOne có trả về thêm trường permissions bằng populate, nhưng biến temp lại không biết có thêm permission vì bên logic của findOne đau có định nghĩa\n    const temp = (await this.roleService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return { user };\n  }\n\n  //- xử lý refresh token khi access_token hết hạn gặp lỗi 401 ( 401 là lỗi ko truyền access_token hoặc access_token hết hạn )\n  //-khi nhận code 401, client (frontend) sẽ TỰ ĐỘNG gọi API refresh_token, sử dụng token này để đổi lấy {access_token, refresh_token} mới.\n  @Public() //- phải để public vì khi này access_token đâu còn hợp lệ\n  @ResponseMessage('Get User by refresh token')\n  @Get('refresh')\n  async handleRefreshToken(\n    @Req() request: any,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n\n    return await this.authService.processNewToken(refreshToken, response);\n  }\n\n  @Post('logout')\n  @ResponseMessage('Logout User')\n  handleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @userDecorator() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nAuthModule -->\n\nRolesService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    UsersModule,\n    PassportModule,\n    //-khai bao jwt cho nestjs\n    //- dung async de lay secret va expire tu env\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn:\n            ms(\n              (configService.get('JWT_ACCESS_EXPIRE') ??\n                '1d') as ms.StringValue, //-ép kiểu về ms.StringValue vì ms nó nhận ms.StringValue click vào ms để xem\n            ) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, RolesService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                logout\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService, roleService: RolesService, jwtService: JwtService, userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(registerUserDto: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:146\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/users.interface';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConfigService } from '@nestjs/config';\nimport { Response } from 'express';\nimport ms from 'ms';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private roleService: RolesService,\n    private jwtService: JwtService,\n    @InjectModel(User.name) private userModel: SoftDeleteModel, //- tiêm vào để có thể tương tác vs csdl\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n\n  //-email va pass la 2 tham so ma thu vien passport se truyen vao\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.checkEmailExist(email);\n    if (user) {\n      //- co user\n      const isValid: boolean = this.usersService.isValidPassword(\n        pass,\n        user.password,\n      );\n      if (isValid) {\n        //-mat khau dung\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.roleService.findOne(userRole._id);\n\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n\n        return objUser;\n      }\n    }\n    return null;\n  }\n\n  //-bất kỳ object nào có những 4 trường (_id,name,email,role) đều đủ điều kiện để được coi là IUser\n  async login(user: any, response: Response) {\n    const { _id, name, email, role, permissions, company } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n      company,\n    };\n\n    const refreshToken = this.createRefreshToken(payload);\n\n    //- update user with refreshToken\n    await this.usersService.updateUserRefreshToken(_id, refreshToken);\n\n    //-set refresh_token to cookie\n    response.clearCookie('refresh_token');\n    response.cookie('refresh_token', refreshToken, {\n      httpOnly: true,\n      //- maxAge là thoi gian hieu luc cua cookie tính theo ms\n      maxAge: ms(\n        this.configService.get('JWT_REFRESH_EXPIRE') as ms.StringValue,\n      ),\n    });\n\n    //- ngoài việc nhả ra token cho client thì ta trả thêm 1 số thông tin đi kèm\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions,\n        company,\n      },\n    };\n  }\n\n  async registerUser(registerUserDto: any) {\n    const email = registerUserDto.email;\n\n    const checkEmail = await this.usersService.checkEmailExist(email);\n    if (checkEmail) {\n      throw new BadRequestCustom(\n        'Email đã tồn tại hãy chọn một email khác!',\n        !!checkEmail,\n      );\n    }\n\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    if (!userRole) {\n      throw new BadRequestCustom('Không tìm thấy role người dùng!', !!userRole);\n    }\n\n    registerUserDto.role = userRole._id;\n\n    const hashPassword: string = this.usersService.getHashPassword(\n      registerUserDto.password,\n    );\n    registerUserDto.password = hashPassword;\n\n    const user = await this.userModel.create({\n      ...registerUserDto,\n      role: userRole._id,\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt,\n    };\n  }\n\n  createRefreshToken = (payload: any) => {\n    //- đây là cách để mình tạo ra refresh_token với jwt\n    const refreshToken = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(\n          this.configService.get(\n            'JWT_REFRESH_EXPIRE',\n          ) as ms.StringValue,\n        ) / 1000, //- ms: mili-seconds còn jwt là second (1 second = 1000 mili-seconds)\n    });\n\n    return refreshToken;\n  };\n\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      //-gia ma refresh_token để xem nó có hợp lệ hay ko (ko hợp lệ khi ko đúng định dang, hoặc refresh_token hết thời hạn - cái thời hạn đó do mình gán khi lưu vào cookie ở hàm login bên trên)\n      //1. giải mã\n      const decode = this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      //2.Lấy user id\n      const userId = decode._id;\n\n      if (!userId) {\n        throw new BadRequestException('Token payload thiếu userId');\n      }\n\n      // 3. Query user theo userId\n      const user = await this.usersService.findUser(userId);\n      if (!user) {\n        throw new BadRequestException('User không tồn tại');\n      }\n\n      // 4. So sánh xem token client gửi lên có khớp với cái lưu ở DB không\n      //    (tránh replay attack: token có thể bị hack rồi gọi lại API)\n      //- Cách này chỉ đảm bảo hacker không thể dùng một token “ngẫu nhiên” hay token cũ đã bị thu hồi, nhưng không ngăn được nếu hacker dùng token hợp lệ( chưa hết hạn refresh_token )\n      if (user.refreshToken !== refreshToken) {\n        throw new BadRequestException('Refresh token không khớp');\n      }\n\n      //-update refresh_token\n      const _id = user.id; //- cú phúp này lây ra id cơ sở dữ liệu (vì _id của mongoose là Object_id)\n      const { email, name, role } = user;\n\n      const userRole = user.role as unknown as { _id: string; name: string };\n      const temp = await this.roleService.findOne(userRole._id);\n\n      const payload = {\n        sub: 'token login',\n        iss: 'from server',\n        _id,\n        name,\n        email,\n        role,\n        permissions: temp?.permissions ?? [],\n        company: user.company ?? [],\n      };\n\n      const result = await this.login(payload, response);\n\n      return result;\n    } catch (error) {\n      throw new UnauthorizedException('Refresh_token khong hop le!');\n    }\n  };\n\n  logout = async (response: Response, user: IUser) => {\n    try {\n      const filter = { _id: user._id };\n      const update = {\n        $set: {\n          refreshToken: '',\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n      response.clearCookie('refresh_token');\n\n      if (result.matchedCount == 1) return 'OK';\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestCustom.html":{"url":"classes/BadRequestCustom.html","title":"class - BadRequestCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customExceptions/BadRequestCustom.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, isError)\n                    \n                \n                        \n                            \n                                Defined in src/customExceptions/BadRequestCustom.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isError\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class BadRequestCustom extends HttpException {\n  constructor(message: string, isError = true) {\n    super(\n      {\n        statusCode: isError ? 400 : 200,\n        message,\n        isOk: !isError,\n        isError,\n      },\n      isError ? HttpStatus.BAD_REQUEST : HttpStatus.OK,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get list companies with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ParseIntPipeCustom } from './dto/ParseInt.pipe';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new company')\n  create(\n    @Body() createCompanyDto: CreateCompanyDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.companiesService.createCompany(createCompanyDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Get list companies with paginate')\n  findAll(\n    //- vì trong main mình có config pipe global nên nó chạy trước cả pipe custom mình viết dưới này. Nếu để type tham số là string thì nó sẽ không chạy pipe global. Còn nếu để number thì nó sẽ chạy pipe global trước khi chạy pipe custom, đó là cách chạy của NestJS.\n    @Query('current', new ParseIntPipeCustom()) page: number,\n    @Query('pageSize', new ParseIntPipeCustom()) limit: number,\n    @Query() query: string,\n  ) {\n    return this.companiesService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  //- update Companies\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n  imports: [\n    //- Đăng ký schema CompanySchema với Mongoose để sử dụng trong service\n    //- NestJS sẽ tự sinh ra một provider cho model Company\n    //- @InjectModel(Company.name) ở service sẽ lấy đúng provider đó\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCompany\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCompany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCompany(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n\n  async createCompany(createCompanyDto: CreateCompanyDto, user: IUser) {\n    try {\n      const result = await this.companyModel.create({\n        ...createCompanyDto,\n        createdBy: {\n          _id: user._id,\n          name: user.name,\n          email: user.email,\n        },\n      });\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any) //- xung đột type hàm sort của mongoose với sort của aqp\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id công ty không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkCompany = await this.companyModel.findById(id);\n      if (!checkCompany) {\n        throw new BadRequestCustom(`Không tìm thấy công ty với id ${id}`);\n      }\n\n      return checkCompany;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID Không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkCompany = await this.companyModel.findById(id);\n      if (!checkCompany) {\n        throw new BadRequestCustom(`Công ty có id: ${id} không tồn tại!`, !!id);\n      }\n\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateCompanyDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.companyModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      //- phải Re-throw để có thể nhận được trên response client\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID Không hợp lệ!', !!id);\n    }\n\n    //- 8.6\n\n    try {\n      const document = await this.companyModel.findOne({ _id: id });\n      if (!document) {\n        throw new BadRequestCustom(`Công ty có id: ${id} không tồn tại!`, !!id);\n      }\n\n      const isDelete = document.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Công ty này đã được xóa', !!isDelete);\n      }\n\n      await this.companyModel.updateOne(\n        { _id: id },\n        {\n          $set: {\n            deletedBy: {\n              _id: user._id,\n              name: user.name,\n              email: user.email,\n            },\n          },\n        },\n      );\n\n      const result = await this.companyModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument; //- đây là một kiểu dữ liệu mới được tạo ra từ HydratedDocument để đại diện cho một document của Company\n\n@Schema({ timestamps: true }) //- đánh dấu class Company là một schema trong mongoose timestamps: true sử dụng cho field createdAt và updatedAt\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company); //- tạo ra một schema từ class Company\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên công ty không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Tên công ty không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công ty không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Mô tả công ty không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Logo công ty không được để trống' })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject({}, {message: 'Thông tin công ty không hợp lệ'})@IsObject({message: 'Thông tin công ty không hợp lệ'})@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Validate(IsEndAfterStartConstraint)@IsNotEmpty({message: 'End_Date không được để trống'})@Transform( => )@IsDate({message: 'End_Date không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Trang thái công việc không được để trống'})@IsBoolean({message: 'Trạng thái công việc không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ công việc không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên công việc không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Số lượng tuyển không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Lương không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Kỹ năng không được để trống'})@IsArray({message: 'Skills có định danh là array'})@IsString({each: true, message: 'Mỗi skill sẽ phải là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start_Date không được để trống'})@Transform( => )@IsDate({message: 'Start_Date không hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Validate,\n  ValidateNested,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { Company as CompanyType } from 'src/users/dto/create-user.dto';\n\n//- start validate date\n//-@ValidatorConstraint là decorator do class-validator cung cấp, dùng để đánh dấu một class là một custom validation constraint.\n@ValidatorConstraint({ name: 'isEndAfterStart', async: false })\nclass IsEndAfterStartConstraint implements ValidatorConstraintInterface {\n  //- implements method\n  validate(endDate: string, args: ValidationArguments) {\n    const obj = args.object as any; //- args.object là object chính là createJobDto\n    const startDate = new Date(obj.startDate);\n    const end = new Date(endDate);\n    return end > startDate; //check xem endDate lớn hơn startDate hay khong\n  }\n\n  //- implements method\n  defaultMessage(args: ValidationArguments) {\n    //-Khi validate() trả về false, class-validator sẽ gọi defaultMessage()\n    return `endDate (${args.value}) phải lớn hơn startDate!`;\n  }\n}\n//- end validate date\n\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Tên công việc không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n\n  @IsNotEmptyObject({}, { message: 'Thông tin công ty không hợp lệ' })\n  @IsObject({ message: 'Thông tin công ty không hợp lệ' })\n  @ValidateNested()\n  @Type(() => CompanyType) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: CompanyType;\n\n  @IsNotEmpty({ message: 'Lương không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Số lượng tuyển không được để trống' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Mô tả không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công việc không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Start_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'Start_Date không hợp lệ' })\n  startDate: Date;\n\n  @Validate(IsEndAfterStartConstraint)\n  @IsNotEmpty({ message: 'End_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'End_Date không hợp lệ' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'Trang thái công việc không được để trống' })\n  @IsBoolean({ message: 'Trạng thái công việc không hợp lệ' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Method quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({ message: 'Tên quyền không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'apiPath quyền không được để trống' })\n  apiPath: string;\n\n  @IsNotEmpty({ message: 'Method quyền không được để trống' })\n  method: string;\n\n  @IsNotEmpty({ message: 'Module quyền không được để trống' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống ' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả vai trò không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive vai trò không được để trống'})@IsBoolean({message: 'isActive phải có giá trị boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên vai trò không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions vai trò không được để trống'})@IsArray({message: 'isActive phải có dạng Array'})@IsMongoId({each: true, message: 'each permissions phải là dạng object id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'Tên vai trò không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Mô tả vai trò không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'isActive vai trò không được để trống' })\n  @IsBoolean({ message: 'isActive phải có giá trị boolean' })\n  isActive: boolean;\n\n  @IsNotEmpty({ message: 'permissions vai trò không được để trống' })\n  @IsArray({ message: 'isActive phải có dạng Array' })\n  @IsMongoId({ each: true, message: 'each permissions phải là dạng object id' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Kỹ năng không được để trống'})@IsArray({message: 'Skills có định danh là array'})@IsString({each: true, message: 'Mỗi skill sẽ phải là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEmail,\n  IsEmpty,\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được để trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được để trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được để trống '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'userId không được để trống' })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'url không được để trống' })\n  url: string;\n\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @IsNotEmpty({ message: 'url không được để trống ' })\n  url: string;\n\n  @IsNotEmpty({ message: 'companyId không được để trống' })\n  @IsMongoId({ message: 'companyId is a mongo id' })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'jobId không được để trống' })\n  @IsMongoId({ message: 'jobId is a mongo id' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tuổi không được để trống'})@IsInt({message: 'Tuổi phải là số nguyên'})@Min(0, {message: 'Tuổi phải lớn hơn hoặc bằng 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Giới tính không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quyền không được để trống'})@IsMongoId({message: 'Role định dạng là mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.countDocuments({});\n      const countPermission = await this.permissionModel.countDocuments({});\n      const countRole = await this.roleModel.countDocuments({});\n\n      //create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        //bulk create\n      }\n\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/Ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: [], //không set quyền, chỉ cần add ROLE\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm Khoa\",\n            email: 'khoa@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 96,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD') as string,\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)@ResponseMessage('Upload single file successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  @ResponseMessage('Upload single file successfully')\n  uploadFile(\n    @UploadedFile(\n      //- sử dụng pipe để validate file upload\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType:\n            /^(jpg|png|jpeg|image\\/jpeg|image\\/png|image\\/gif|text\\/plain|application\\/pdf|application\\/msword|audio\\/mpeg|video\\/mp4)$/i,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1024 * 1024, //- 1MB\n          message: 'File size is too large',\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from \"@nestjs/terminus\";\nimport { Public } from \"src/decorator/customize\";\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    method: string;\n    module: string;\n  }[];\n\n  company?: {\n    _id: string;\n    name: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEndAfterStartConstraint.html":{"url":"classes/IsEndAfterStartConstraint.html","title":"class - IsEndAfterStartConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEndAfterStartConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(endDate: string, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/dto/create-job.dto.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Validate,\n  ValidateNested,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { Company as CompanyType } from 'src/users/dto/create-user.dto';\n\n//- start validate date\n//-@ValidatorConstraint là decorator do class-validator cung cấp, dùng để đánh dấu một class là một custom validation constraint.\n@ValidatorConstraint({ name: 'isEndAfterStart', async: false })\nclass IsEndAfterStartConstraint implements ValidatorConstraintInterface {\n  //- implements method\n  validate(endDate: string, args: ValidationArguments) {\n    const obj = args.object as any; //- args.object là object chính là createJobDto\n    const startDate = new Date(obj.startDate);\n    const end = new Date(endDate);\n    return end > startDate; //check xem endDate lớn hơn startDate hay khong\n  }\n\n  //- implements method\n  defaultMessage(args: ValidationArguments) {\n    //-Khi validate() trả về false, class-validator sẽ gọi defaultMessage()\n    return `endDate (${args.value}) phải lớn hơn startDate!`;\n  }\n}\n//- end validate date\n\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Tên công việc không được để trống' })\n  name: string;\n\n  @IsNotEmpty({ message: 'Kỹ năng không được để trống' })\n  @IsArray({ message: 'Skills có định danh là array' })\n  @IsString({ each: true, message: 'Mỗi skill sẽ phải là string' })\n  skills: string[];\n\n  @IsNotEmptyObject({}, { message: 'Thông tin công ty không hợp lệ' })\n  @IsObject({ message: 'Thông tin công ty không hợp lệ' })\n  @ValidateNested()\n  @Type(() => CompanyType) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: CompanyType;\n\n  @IsNotEmpty({ message: 'Lương không được để trống' })\n  salary: number;\n\n  @IsNotEmpty({ message: 'Số lượng tuyển không được để trống' })\n  quantity: string;\n\n  @IsNotEmpty({ message: 'Level không được để trống' })\n  level: string;\n\n  @IsNotEmpty({ message: 'Mô tả không được để trống' })\n  description: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ công việc không được để trống' })\n  location: string;\n\n  @IsNotEmpty({ message: 'Start_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'Start_Date không hợp lệ' })\n  startDate: Date;\n\n  @Validate(IsEndAfterStartConstraint)\n  @IsNotEmpty({ message: 'End_Date không được để trống' })\n  @Transform(({ value }) => new Date(value))\n  @IsDate({ message: 'End_Date không hợp lệ' })\n  endDate: Date;\n\n  @IsNotEmpty({ message: 'Trang thái công việc không được để trống' })\n  @IsBoolean({ message: 'Trạng thái công việc không hợp lệ' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                endDate\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                    Optional\n                                startDate\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop() //- đánh dấu thuộc tính name là một field trong schema\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: number; //- sl tuyen\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  startDate?: Date;\n\n  @Prop()\n  endDate?: Date;\n\n  @Prop()\n  isActive?: boolean;\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job); //- tạo ra một schema từ class Job\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new Job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch jobs with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('fetch a job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport {\n  Public,\n  ResponseMessage,\n  userDecorator,\n} from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new Job')\n  create(@Body() createJobDto: CreateJobDto, @userDecorator() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch jobs with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n    @userDecorator() user: IUser,\n  ) {\n    return this.jobsService.findAll(page, limit, query, user);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('fetch a job by id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a job')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a job')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }]), //- method .name lây tên model\n  ],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { listNameImages } from './imagesJob';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model JobDocument\n  ) {}\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    try {\n      const logo =\n        listNameImages[Math.floor(Math.random() * listNameImages.length)];\n      createJobDto.company.logo = logo;\n      const newJob = await this.jobModel.create({\n        ...createJobDto,\n        createdBy: {\n          _id: user._id,\n          name: user.name,\n          email: user.email,\n        },\n      });\n\n      return {\n        _id: newJob._id,\n        createdAt: newJob.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(\n    currentPage: number,\n    limit: number,\n    query: string,\n    user: IUser,\n  ) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    if (user?.company?._id) {\n      filter['company._id'] = user.company._id;\n    }\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.jobModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkJob = await this.jobModel.findById(id);\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      return checkJob;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n    try {\n      const checkJob = await this.jobModel.findById(id);\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateJobDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.jobModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Job không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkJob = await this.jobModel.findById(id);\n\n      if (!checkJob) {\n        throw new BadRequestCustom(`Không tìm thấy job với id ${id}`);\n      }\n\n      const isDelete = checkJob.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Job này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.jobModel.updateOne(filter, update);\n\n      const result = await this.jobModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    //- lấy ra metadata\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any, info: any, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    //- check permission phia back_end\n    const targetMethod = request.method;\n    const targetEnpoint = request.route?.path as string;\n\n    const permission = user?.permissions ?? [];\n    let isExist = permission.find(\n      (item: Permission) =>\n        item.apiPath === targetEnpoint && item.method === targetMethod,\n    );\n\n    //- public enpoind nay khong can check permission\n    if (targetEnpoint.startsWith('/api/v1/auth')) isExist = true;\n\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException('Bạn không có quyền truy cập');\n    }\n\n    return user; //- tới đây là ko còn lỗi => gán lại vào req.user và đi tiếp tới controller\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly roleService: RolesService,\n  ) {\n    //- giải mã jwt token\n    //- sử dụng ExtractJwt để lấy token từ header\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET') as string,\n    });\n  }\n\n  //- supper trên sẽ giúp ta decode và tự động dán vào payload cho hàm validate bên dưới và gọi nó luôn\n  async validate(payload: IUser) {\n    //- nói cách khác payload nó là data mà bên sign(payload) sử dụng\n    const { _id, name, email, role } = payload;\n\n    //- gan them permission cho req.user\n    const userRole = role as unknown as { _id: string; name: string };\n    const temp = (await this.roleService.findOne(userRole._id)).toObject();\n\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: temp?.permissions ?? [],\n      company: payload.company ?? []\n    }; //- nó sẽ gán vào req.user đấy\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/users/schemas/user.schema';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  //- nhận giá trị username và password từ request body client gửi lên\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password); //- xác thực\n    if (!user) {\n      throw new UnauthorizedException(\"Username or Password không hợp lệ!\");\n    }\n    return user; //req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 5 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport {\n  Subscriber,\n  SubscriberDocument,\n} from 'src/subscribers/schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron(\"0 5 0 * * 0\") //- run at 5:00 AM every Sunday\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills.length > 0) {\n        const jobs = jobWithMatchingSkills.map((job) => ({\n          name: job.name,\n          company: job.company.name,\n          salary: `${job.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n          skills: job.skills,\n        }));\n\n        //- hàm sendMail là thư viện đã viết sẵn cho rồi\n        await this.mailerService.sendMail({\n          to: 'khoalon89@gmail.com',\n          from: '\"Support Team\" ',\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job', //- ten file template,\n          context: {\n            //- truyen data qua template\n            receiver: subs.name,\n            jobs: jobs,\n          },\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nJobsService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nMailModule -->\n\nSubscribersService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                        \n                            MailService\n                        \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\nimport { JobsService } from 'src/jobs/jobs.service';\nimport { SubscribersService } from 'src/subscribers/subscribers.service';\n\n@Module({\n  imports: [\n    //- cau hinh server gui email\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get('EMAIL_HOST'),\n          secure: false,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService, JobsService, SubscribersService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        //- cấu hình nơi lưu trữ file upload\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        //- đổi tên file upload kèm theo vị trí lưu trữ + thời gian upload\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseIntPipeCustom.html":{"url":"injectables/ParseIntPipeCustom.html","title":"injectable - ParseIntPipeCustom","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseIntPipeCustom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/ParseInt.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, metadata: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/dto/ParseInt.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\n\n@Injectable()\nexport class ParseIntPipeCustom {\n  transform(value: string, metadata: any) {\n    const val = parseInt(value, 10);\n    if (isNaN(val) || val \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string; //- cái này để biết quyền này là của module nào vd: của users, companies, ...\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission); //- tạo ra một schema từ class Permission\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission  by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage('Create a new permission!')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch permissions with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.permissionsService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a permission  by id')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a permission!')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a permission')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }]), //- method .name lây tên model\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose, { Types } from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(dto: CreatePermissionDto, user: IUser) {\n    const { apiPath, method, name, module } = dto;\n\n    // 1. Check tồn tại (bao gồm cả bản đã soft-delete)\n    const existing = await this.permissionModel\n      .findOne({ apiPath, method })\n      .exec();\n    if (existing) {\n      throw new ConflictException(\n        `Permission cho [${method} ${apiPath}] đã tồn tại`,\n      );\n    }\n\n    // 2. Tạo mới\n    try {\n      const permission = await this.permissionModel.create({\n        name,\n        apiPath,\n        method,\n        module,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n      return {\n        _id: permission._id,\n        createdAt: permission.createdAt,\n      };\n    } catch (err) {\n      throw new BadRequestCustom(err.message, !!err.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population, projection } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.permissionModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id permission không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkPermission = await this.permissionModel.findById(id);\n      if (!checkPermission) {\n        throw new BadRequestCustom(`Không tìm thấy permission với id ${id}`);\n      }\n\n      return checkPermission;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(\n    id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) {\n    const { apiPath, method, name, module } = updatePermissionDto;\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Permission không hợp lệ!', !!id);\n    }\n\n    const checkExistPermission = await this.permissionModel.findById(id);\n    if (!checkExistPermission) {\n      throw new BadRequestCustom(`Không tìm thấy Permission với id ${id}`);\n    }\n\n    const conflict = await this.permissionModel\n      .findOne({\n        apiPath,\n        method,\n        _id: { $ne: new Types.ObjectId(id) }, //- bỏ đứa đang sửa đi\n      })\n      .exec();\n    if (conflict) {\n      throw new ConflictException(\n        `Permission cho [${method} ${apiPath}] đã tồn tại`,\n      );\n    }\n\n    try {\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          ...updatePermissionDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n\n      const result = await this.permissionModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {}\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id permission không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkpermission = await this.permissionModel.findById(id);\n\n      if (!checkpermission) {\n        throw new BadRequestCustom(`Không tìm thấy permission với id ${id}`);\n      }\n\n      const isDelete = checkpermission.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Permission này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.permissionModel.updateOne(filter, update);\n\n      const result = await this.permissionModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tuổi không được để trống'})@IsInt({message: 'Tuổi phải là số nguyên'})@Min(0, {message: 'Tuổi phải lớn hơn hoặc bằng 0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không hợp lệ'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Giới tính không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            isError\n                                        \n                                \n                                \n                                        \n                                            isOk\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOk:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n  isOk: boolean;\n  isError: boolean;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    \n    const response = context.switchToHttp().getResponse();\n    const message =\n      this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ?? '';\n\n    return next.handle().pipe(\n      //- data trong hàm map của rxJs lấy giá trị return của endpoint tương ứng ở controller\n      map((data: T) => {\n        const statusCode = response.statusCode;\n        const isOk = statusCode \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string;\n    updatedAt: Date;\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId;\n      email: string;\n    };\n  }[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume); //- tạo ra một schema từ class Resume\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getHistoryJob\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHistoryJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoryJob(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get Resumes by User')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new resume')\n  create(\n    @Body() createUserCvDto: CreateUserCvDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.create(createUserCvDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch all resumes with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.findAll(page, limit, query, user);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Fetch a resume by id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update status resume')\n  update(\n    @Param('id') id: string,\n    @Body() updateResumeDto: UpdateResumeDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a resume by id')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get Resumes by User')\n  getHistoryJob(@userDecorator() user: IUser) {\n    return this.resumesService.getHistoryJobByUserId(user._id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]), //- method .name lây tên model\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getHistoryJobByUserId\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHistoryJobByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoryJobByUserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport aqp from 'api-query-params';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model ResumeDocument\n  ) {}\n  async create(createUserCvDto: CreateUserCvDto, user: IUser) {\n    try {\n      const newResume = await this.resumeModel.create({\n        ...createUserCvDto,\n        email: user.email,\n        userId: user._id,\n        status: 'PENDING',\n        history: [\n          {\n            status: 'PENDING',\n            updatedAt: new Date(),\n            updatedBy: {\n              _id: user._id,\n              email: user._id,\n              name: user.name,\n            },\n          },\n        ],\n        createdBy: {\n          _id: user._id,\n          email: user._id,\n          name: user.name,\n        },\n      });\n\n      return {\n        _id: newResume._id,\n        createdAt: newResume.createdAt,\n      };\n    } catch (error) {}\n  }\n\n  async findAll(\n    currentPage: number,\n    limit: number,\n    query: string,\n    user: IUser,\n  ) {\n    //- projection: chọn field trả về (ví dụ { title: 1, content: 1 })\n    const { filter, sort, population, projection } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    if (user?.company?._id) {\n      filter.companyId = user?.company?._id;\n    }\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.resumeModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      return checkResume;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n    const { status } = updateResumeDto;\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      const data = {\n        status,\n        updatedAt: new Date(),\n        updatedBy: {\n          _id: user._id,\n          email: user._id,\n          name: user.name,\n        },\n      };\n      const filter = { _id: id, isDeleted: false };\n      const update = {\n        $set: {\n          status,\n          updatedBy: {\n            _id: user._id,\n            email: user._id,\n            name: user.name,\n          },\n          history: [...checkResume.history, data],\n        },\n      };\n\n      const result = await this.resumeModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Resume không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkResume = await this.resumeModel.findById(id);\n\n      if (!checkResume) {\n        throw new BadRequestCustom(`Không tìm thấy Resume với id ${id}`);\n      }\n\n      const isDelete = checkResume.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Resume này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.resumeModel.updateOne(filter, update);\n\n      const result = await this.resumeModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async getHistoryJobByUserId(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id User không hợp lệ!', !!id);\n    }\n    try {\n      const checkExist = await this.resumeModel\n        .find({\n          userId: id,\n          isDeleted: false, //- không cần lắm vì nó tự loại ra đứa nào có isDeleted == true rồi\n        })\n        .sort('-createdAt') //- lấy những cái gần nhất\n        .populate([\n          {\n            path: 'companyId',\n            select: { name: 1 },\n          },\n          {\n            path: 'jobId',\n            select: { name: 1 },\n          },\n        ]);\n\n      if (!checkExist) {\n        throw new BadRequestCustom('User này chưa có ứng tuyển nào!', !!id);\n      }\n\n      return checkExist;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: Permission[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role); //- tạo ra một schema từ class Role\n\n/*\n\n Giải thích đoạn code sau:  \n @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n permissions: Permission[];\n\n  type: [mongoose.Schema.Types.ObjectId]\n  Cho biết trường này là một mảng các ObjectId.\n\n  ref: Permission.name\n  Nói với Mongoose rằng mỗi ObjectId trong mảng sẽ tham chiếu đến collection được đặt tên bằng Permission.name (tức tên model “Permission”).\n\n  permissions: Permission[];\n  Về mặt TypeScript, khai báo kiểu mảng Permission[] để dễ thao tác (nhưng thực ra khi lưu xuống database là mảng ObjectId).\n\n  Khi gọi .populate('permissions') trên query, Mongoose sẽ tự động “thay” mỗi ObjectId thành document tương ứng từ collection permissions.\n*/\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch roles with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage('Create a new role')\n  create(@Body() createRoleDto: CreateRoleDto, @userDecorator() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch roles with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.rolesService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('fetch a role by id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update a role')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete a role')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }]), //- method .name lây tên model\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    try {\n      const checkExist = await this.roleModel.findOne({\n        name: createRoleDto.name,\n      });\n      if (checkExist) {\n        throw new Error(`Vai trò ${createRoleDto.name} đã tồn tại!`);\n      }\n\n      const Role = await this.roleModel.create({\n        ...createRoleDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n\n      return {\n        _id: Role._id,\n        createdAt: Role.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.roleModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Role không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkRole = await this.roleModel.findById(id).populate({\n        path: 'permissions',\n        select: { _id: 1, name: 1, method: 1, apiPath: 1, module: 1 },\n      });\n      if (!checkRole) {\n        throw new BadRequestCustom(`Không tìm thấy Role với id ${id}`);\n      }\n\n      return checkRole;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('ID không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkExistDocument = await this.roleModel.findById(id);\n      if (!checkExistDocument) {\n        throw new BadRequestCustom(`Không tìm thấy role với id ${id}`, !!id);\n      }\n\n      // const existNameRole = await this.roleModel.findOne({\n      //   name: updateRoleDto.name,\n      // });\n\n      // if (existNameRole) {\n      //   throw new BadRequestCustom(\n      //     `Vai trò ${updateRoleDto.name} đã tồn tại!`,\n      //     !!updateRoleDto.name,\n      //   );\n      // }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          ...updateRoleDto,\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n            name: user.name,\n          },\n        },\n      };\n\n      const result = await this.roleModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id Role không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkRole = await this.roleModel.findById(id);\n\n      if (!checkRole) {\n        throw new BadRequestCustom(`Không tìm thấy Role với id ${id}`);\n      }\n\n      const isDelete = checkRole.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Role này đã được xóa', !!isDelete);\n      }\n\n      //- khong cho xoa admin\n      if (checkRole.name === ADMIN_ROLE) {\n        throw new BadRequestCustom('Không được phép xóa Role admin!', !!checkRole);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.roleModel.updateOne(filter, update);\n\n      const result = await this.roleModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  deletedAt?: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted?: boolean;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber); //- tạo ra một schema từ class Subscriber\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('findAll subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('FindOne subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get subscriber skill')@skipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@skipCheckPermission()@ResponseMessage('Update subscriber successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, skipCheckPermission, userDecorator } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('Create subscriber successfully')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Post(\"skills\")\n  @ResponseMessage('Get subscriber skill')\n  @skipCheckPermission()\n  getUserSkills(@userDecorator() user: IUser) {\n    return this.subscribersService.getUserSkills(user);\n  }\n\n  @Get()\n  @ResponseMessage('findAll subscriber successfully')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.subscribersService.findAll(page, limit, query);\n  }\n\n  @Get(':id')\n  @ResponseMessage('FindOne subscriber successfully')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @skipCheckPermission()\n  @ResponseMessage('Update subscriber successfully')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @userDecorator() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete subscriber successfully')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getUserSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    try {\n      const { name, email, skills } = createSubscriberDto;\n      const isExistEmail = await this.subscriberModel.findOne({ email });\n      if (isExistEmail) {\n        throw new BadRequestCustom('Email đăng ký nhận thông báo đã tồn tại');\n      }\n      const subscriber = await this.subscriberModel.create({\n        name,\n        email,\n        skills,\n        createdBy: {\n          _id: user._id,\n          email: user.email,\n          name: user.name,\n        },\n      });\n      return {\n        _id: subscriber._id,\n        createdAt: subscriber.createdAt,\n      };\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.subscriberModel\n      .find(filter) //- nó tự động bỏ document có isDelete: true.\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id subscriber không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkSubscriber = await this.subscriberModel.findById(id);\n      if (!checkSubscriber) {\n        throw new BadRequestCustom(`Không tìm thấy subscriber với id ${id}`);\n      }\n\n      return checkSubscriber;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    try {\n      const checkExistDocument = await this.subscriberModel.find({\n        email: user.email,\n      });\n      if (!checkExistDocument) {\n        throw new BadRequestCustom(\n          `Không tìm thấy subscriber với email ${user.email}`,\n          !!user.email,\n        );\n      }\n\n      const filter = { email: user.email };\n      const update = {\n        $set: {\n          ...updateSubscriberDto,\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n            name: user.name,\n          },\n        },\n      };\n\n      const result = await this.subscriberModel.updateOne(filter, update, {\n        upsert: true,\n      });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id subscriber không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkSubscriber = await this.subscriberModel.findById(id);\n\n      if (!checkSubscriber) {\n        throw new BadRequestCustom(`Không tìm thấy subscriber với id ${id}`);\n      }\n\n      const isDelete = checkSubscriber.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Subscriber này đã được xóa', !!isDelete);\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.subscriberModel.updateOne(filter, update);\n\n      const result = await this.subscriberModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async getUserSkills(user: IUser) {\n    try {\n      const result = await this.subscriberModel\n        .findOne({ email: user.email })\n        .select('skills');\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: T;\n  isOk: boolean;\n  isError: boolean;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    \n    const response = context.switchToHttp().getResponse();\n    const message =\n      this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ?? '';\n\n    return next.handle().pipe(\n      //- data trong hàm map của rxJs lấy giá trị return của endpoint tương ứng ở controller\n      map((data: T) => {\n        const statusCode = response.statusCode;\n        const isOk = statusCode \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n//- tất cả các trường của CreateCompanyDto trở thành không bắt buộc (optional) kh sử dụng PartialType\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n//- PartialType sẽ mở rộng (extend) DTO gốc và tự động đặt tất cả các thuộc tính thành optional.\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  @IsNotEmpty({ message: 'Id không được để trống' })\n  _id: string;\n}\n//- omit sẽ giúp chúng ta loại bỏ các trường không cần thiết trong DTO\n//- ở đây chúng ta loại bỏ trường password trong DTO UpdateUserDto\n//- chúng ta sẽ không cần nhập trường password khi update thông tin user\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument; //- đây là một kiểu dữ liệu mới được tạo ra từ HydratedDocument để đại diện cho một document của User\n\n@Schema({ timestamps: true }) //- đánh dấu class User là một schema trong mongoose timestamps: true sử dụng cho field createdAt và updatedAt\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop({ required: true }) //- đánh dấu thuộc tính name là một field trong schema\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop()\n  createdAt?: Date;\n\n  @Prop()\n  updatedAt?: Date;\n\n  @Prop()\n  isDeleted?: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    email: string;\n  };\n\n  @Prop()\n  deletedAt?: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User); //- tạo ra một schema từ class User\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'khoa@gmail.com', description: 'userName'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsInt,\n  IsMongoId,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  //- mục đích để validate cho nested_obj company\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  \n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  logo: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n\n  @IsNotEmpty({ message: 'Quyền không được để trống' })\n  @IsMongoId({ message: 'Role định dạng là mongo id' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company) //- nâng cấp kieu dữ liệu cho nested_obj sử dụng @Type\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({ message: 'Tên không được để trống' })\n  name: string;\n\n  @IsEmail({}, { message: 'Email không hợp lệ' })\n  @IsNotEmpty({ message: 'Email không được để trống' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được để trống' })\n  password: string;\n\n  @IsNotEmpty({ message: 'Tuổi không được để trống' })\n  @IsInt({ message: 'Tuổi phải là số nguyên' })\n  @Min(0, { message: 'Tuổi phải lớn hơn hoặc bằng 0' })\n  age: number;\n\n  @IsNotEmpty({ message: 'Giới tính không được để trống' })\n  gender: string;\n\n  @IsNotEmpty({ message: 'Địa chỉ không được để trống' })\n  address: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'khoa@gmail.com', description: 'userName' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(page: number, limit: number, query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch users with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@Public()@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ResponseMessage('Delete a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a User')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, userDecorator } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage('Create a new User')\n  create(@Body() createUserDto: CreateUserDto, @userDecorator() user: IUser) {\n    //- @Body() === req.body\n    return this.usersService.create(createUserDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch users with paginate')\n  findAll(\n    @Query('current') page: number,\n    @Query('pageSize') limit: number,\n    @Query() query: string,\n  ) {\n    return this.usersService.findAll(page, limit, query);\n  }\n\n  @Get('/:id')\n  @Public()\n  @ResponseMessage('Fetch user by id')\n  findUser(@Param('id') id: string) {\n    return this.usersService.findUser(id);\n  }\n\n  //- cho hết vào body kể cả id\n  @Patch()\n  @ResponseMessage('Update a User')\n  update(@Body() updateUserDto: UpdateUserDto, @userDecorator() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @Delete('/:id')\n  @ResponseMessage('Delete a User')\n  remove(@Param('id') id: string, @userDecorator() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), //- import model mongoose  vào để nó có thể sử dụng nó trong service của users module. Nói cách khác là đang để cho 2 module là mongodb module với users module có thể giao tiếp với nhau\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByRefreshToken\n                            \n                            \n                                updateUserRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEmailExist\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExist(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n            \n                \ngetHashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hashPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:238\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:215\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport mongoose from 'mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { BadRequestCustom } from 'src/customExceptions/BadRequestCustom';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel, //- sử dụng SoftDeleteModel thông qua model UserDocument\n  ) {}\n\n  getHashPassword(password: string): string {\n    const salt: string = genSaltSync(10);\n    const hash: string = hashSync(password, salt);\n    return hash;\n  }\n\n  async create(createUserDto: CreateUserDto, user: IUser) {\n    const email = createUserDto.email;\n\n    const checkEmail = await this.userModel.findOne({ email });\n    if (checkEmail) {\n      throw new BadRequestCustom(\n        'Email đã tồn tại hãy chọn một email khác!',\n        !!checkEmail,\n      );\n    }\n\n    const hashPassword: string = this.getHashPassword(createUserDto.password);\n    createUserDto.password = hashPassword;\n\n    const createUser = await this.userModel.create({\n      ...createUserDto,\n      createdBy: {\n        _id: user._id,\n        name: user.name,\n        email: user.email,\n      },\n    });\n\n    return {\n      _id: createUser._id,\n      createdAt: createUser.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, query: string) {\n    const { filter, sort, population } = aqp(query);\n    delete filter.current;\n    delete filter.pageSize;\n\n    const defaultPage = currentPage > 0 ? +currentPage : 1;\n    let offset = (+defaultPage - 1) * +limit;\n    let defaultLimit = +limit ? +limit : 10;\n\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .select('-password')\n      .populate(population)\n      .exec();\n\n    return {\n      meta: {\n        current: defaultPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findUser(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n\n    try {\n      const user = await this.userModel\n        .findById(id)\n        .select('-password')\n        .populate({ path: 'role', select: { name: 1, _id: 1 } });\n      if (!user) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!', !!user);\n      }\n\n      return user;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  isValidPassword(password: string, hashPassword: string): boolean {\n    return compareSync(password, hashPassword);\n  }\n\n  async checkEmailExist(email: string) {\n    return await this.userModel\n      .findOne({ email })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(updateUserDto._id)) {\n      throw new BadRequestCustom(\n        'Id người dùng không hợp lệ!',\n        !!updateUserDto._id,\n      );\n    }\n    try {\n      const checkUser = await this.userModel.findById(updateUserDto._id);\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const filterEmail = {\n        email: updateUserDto.email,\n        _id: { $ne: updateUserDto._id }, //- trừ đứa đang cần update ra(ne--->not equal)\n      };\n      const checkEmail = await this.userModel.findOne(filterEmail);\n      if (checkEmail) {\n        throw new BadRequestCustom(\n          'Email đã tồn tại hãy chọn một email khác!',\n          !!checkEmail,\n        );\n      }\n\n      //- nếu có thì để nguyên không thì lấy người tạo là người đang login\n      const createdBy = checkUser.createdBy\n        ? checkUser.createdBy\n        : {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          };\n\n      const filter = { _id: updateUserDto._id, isDeleted: false };\n      const update = {\n        $set: {\n          ...updateUserDto,\n          updatedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n          createdBy,\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n\n    try {\n      const checkUser = await this.userModel.findById(id);\n\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const isDelete = checkUser.isDeleted;\n      if (isDelete) {\n        throw new BadRequestCustom('Người dùng này đã được xóa', !!isDelete);\n      }\n\n      //- ko cho xoa admin\n      if (checkUser.email === 'admin@gmail.com') {\n        throw new BadRequestCustom(\n          'Không được phép xóa người admin!',\n          !!checkUser,\n        );\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          deletedBy: {\n            _id: user._id,\n            name: user.name,\n            email: user.email,\n          },\n        },\n      };\n      await this.userModel.updateOne(filter, update);\n\n      //- hàm softDelete là của soft-delete-plugin-mongoose nó sẽ giúp thêm 2 field deletedAt và isDeleted vào csdl\n      const result = await this.userModel.softDelete({ _id: id });\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  }\n\n  updateUserRefreshToken = async (id: string, refreshToken: string) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestCustom('Id người dùng không hợp lệ!', !!id);\n    }\n    try {\n      const checkUser = await this.userModel.findById(id);\n      if (!checkUser) {\n        throw new BadRequestCustom('Không tìm thấy người dùng!');\n      }\n\n      const filter = { _id: id };\n      const update = {\n        $set: {\n          refreshToken,\n        },\n      };\n      const result = await this.userModel.updateOne(filter, update);\n      return result;\n    } catch (error) {\n      throw new BadRequestCustom(error.message, !!error.message);\n    }\n  };\n\n  findUserByRefreshToken = async (refreshToken: string) => {\n    if (!refreshToken) {\n      throw new BadRequestCustom('Refresh token không hợp lệ!', !!refreshToken);\n    }\n    return await this.userModel.findOne({ refreshToken });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/ParseInt.pipe.ts\n            \n            injectable\n            ParseIntPipeCustom\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customExceptions/BadRequestCustom.ts\n            \n            class\n            BadRequestCustom\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            skipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            userDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            IsEndAfterStartConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/imagesJob.ts\n            \n            variable\n            listNameImages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : 2.1.0\n        \n            @nestjs/mongoose : ^11.0.2\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/terminus : 10.0.1\n        \n            @nestjs/throttler : 4.1.0\n        \n            @types/passport-local : ^1.0.38\n        \n            api-query-params : ^5.4.0\n        \n            bcryptjs : ^3.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            cron : 2.4.3\n        \n            handlebars : 4.7.7\n        \n            helmet : 8.1.0\n        \n            mongoose : ^8.12.2\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nAuthModule -->\n\nRolesService->AuthModule\n\n\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\nMailModule -->\n\nJobsService->MailModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nMailModule -->\n\nSubscribersService->MailModule\n\n\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            listNameImages   (src/.../imagesJob.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            skipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            userDecorator   (src/.../customize.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '686b45a2619a849333e34325',\n      email: 'khoa@gmail.com3e34325',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/jobs/imagesJob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listNameImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'amzon-1686574798358.jpg',\n  'apple-1686574900663.jpg',\n  'google-1686574998397.png',\n  'lazada-1686575062887.png',\n  'netflix-1686706116042.png',\n  'photoshop-1686575180007.png',\n  'pr-1686575233601.jpg',\n  'shopee-1686575294231.png',\n  'tiki-1686575455267.jpg',\n  'tiktok-1686575523674.jpg',\n]\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
